{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon1.ico","path":"images/favicon1.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/tou.jpg","path":"images/tou.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechat.png","path":"images/wechat.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1505087736612},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1505087736613},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1505087736615},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1505087736624},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1505087736626},{"_id":"themes/next/.gitignore","hash":"b935cc0e5b099ebd343ca1766e02f65138c13dd0","modified":1505087736623},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1505087736625},{"_id":"source/404.html","hash":"9eb955271b03c72a4bb23a06b60e4ecb4070a880","modified":1505116154930},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1505087736628},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1505087736629},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1505087736631},{"_id":"themes/next/README.cn.md","hash":"59e323ce21535d561507c9ecc984b7c4dcb61514","modified":1505087736632},{"_id":"themes/next/README.md","hash":"52bad95ac4c88371d3ae9d9ea6e0e14b8c723edf","modified":1505087736634},{"_id":"themes/next/_config.yml","hash":"0e3ca9db8a14e1729765bd5da2355ac3da14e879","modified":1505634798937},{"_id":"themes/next/bower.json","hash":"63c38f50fb54b25bf5101f566189f9e5b3a6ef0e","modified":1505087736637},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1505087736638},{"_id":"themes/next/package.json","hash":"85a77bafb3d1e958b82e52528b7a95fcd59efda9","modified":1505087736852},{"_id":"source/_posts/test.md","hash":"15fc657c63b065abdb6676c01a6eeebc2ceecedf","modified":1528426872387},{"_id":"source/categories/index.md","hash":"7312d4b92c42180bdb28b56f0be96a2c5b9dbf6d","modified":1505118741651},{"_id":"source/_posts/一年后的悸动.md","hash":"6535bb217df166709bf1f4151ff750e618170c68","modified":1527812986188},{"_id":"source/_posts/内心的平静.md","hash":"f617bd2cfe4c39c964154a74a17dbc5bbf1f9a6d","modified":1505634558696},{"_id":"themes/next/.git/COMMIT_EDITMSG","hash":"9a1499103606fd9ce7d4010025b882318503b506","modified":1528284730753},{"_id":"source/_posts/大三运动会.md","hash":"1d586c8b6c59de887a6bd178d7b8ad1a2d46efc5","modified":1526256315057},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1505087736574},{"_id":"source/tags/index.md","hash":"4fa9660836eb950e4235ce0a668e95f9f747155e","modified":1505119642882},{"_id":"source/about/index.md","hash":"5fb51fbf8115fff9947e3a8e76ed3b80034c264a","modified":1505721294398},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1505087736602},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1505087723230},{"_id":"themes/next/.git/index","hash":"8d480dda10dc10a9d9c432d4ed5a83021d7e9de4","modified":1528284730750},{"_id":"themes/next/.git/packed-refs","hash":"f5c4832504bc7eda7ccdbdbddf1e40dd214e857b","modified":1505087736549},{"_id":"source/_posts/git.md","hash":"9fc8460f5d31cc197fc713afe0338d8596e41d12","modified":1528290629470},{"_id":"themes/next/layout/_layout.swig","hash":"fb55ab56e2d478cadc0c3906adfbc4a13620408e","modified":1505087736740},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1505087736842},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1505087736844},{"_id":"themes/next/layout/page.swig","hash":"dbff0302b4bfabb51556a197bf65190eb30361f0","modified":1505087736846},{"_id":"themes/next/scripts/merge-configs.js","hash":"5758f8f3f12d17bc80da65bb808a20b3a8aae186","modified":1505087736854},{"_id":"themes/next/layout/post.swig","hash":"182a99b1f6db0350106c6bb480fede0bbdb7e40f","modified":1505087736848},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1505087736845},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1505087736851},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1505087736857},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1505087736850},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1505087736617},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1505087736621},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"25e37338aeb69b07bfba81b5f8659cde92238ba9","modified":1505087736620},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"81dbdf09454cb26f9fd2e3ed1bf3df5af8a528fd","modified":1505087736618},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1505087737237},{"_id":"themes/next/languages/en.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1505087736643},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1505087736640},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1505087736642},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1505087736646},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1505087737239},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1505087737241},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1505087736649},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1505087736648},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1505087736650},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1505087736652},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1505087736645},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1505087736653},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1505087736654},{"_id":"themes/next/languages/zh-Hans.yml","hash":"23817934c6bf7a59a494743777526b8c8ae3350d","modified":1505087736708},{"_id":"themes/next/languages/zh-hk.yml","hash":"19fb3c159fa6f4d58237e5a1a3857048a6add9a6","modified":1505087736714},{"_id":"themes/next/languages/zh-tw.yml","hash":"64a16181fcc3779ea335792c22fda3b5202e3e9e","modified":1505087736720},{"_id":"source/_posts/spring/spring2.md","hash":"55fa3232aeac04a5cc809f6bb84cbc0e24ae178c","modified":1527813056040},{"_id":"source/_posts/spring/spring1.md","hash":"2e78ffe1fada0012a1f8fcca542579326d738a22","modified":1527813075608},{"_id":"source/_posts/spring/spring3.md","hash":"4a780e59b65dee558b2ede85b34c242cb3c9ba1b","modified":1505651125892},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505087737039},{"_id":"themes/next/.git/logs/HEAD","hash":"3e1fd0ef1fbecfbe5109e4f7309ea1f106b565a6","modified":1528284730757},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1505087723230},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1505087723231},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1505087723231},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1505087723231},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1505087723232},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1505087723232},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1505087723233},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1505087723233},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1505087723234},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1505087723233},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1505087723234},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1505087736735},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1505087736825},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1505087736730},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1505087736824},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1505087736831},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1505087736826},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1505087736828},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1505087736829},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1505087736765},{"_id":"themes/next/layout/_partials/footer.swig","hash":"32fc5cfed27048cea35f9000a5cec3ba29b398c2","modified":1505207742889},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1505087736766},{"_id":"themes/next/layout/_partials/comments.swig","hash":"fc0ff72b3a8ab25029a070acee066d9eaa0b0493","modified":1505087736755},{"_id":"themes/next/layout/_partials/head.swig","hash":"71040aa738c57c24f8b703875d58ab7a262fe075","modified":1505087736759},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1505087736763},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1505087736859},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1505087736860},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1505087736861},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1505087736862},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1505087736866},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1505087736864},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1505087736867},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1505087736868},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1505087736870},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1505087736768},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1505087737037},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1505087736745},{"_id":"themes/next/layout/_macro/post.swig","hash":"9896b34a7edc112c03b393a1602a616710a66ae1","modified":1505087736748},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1505087736750},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1505087736753},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1505087736781},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"0f59a51b5cea3e8a7c078db486626cddc2978622","modified":1505087736747},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"0d78052679a4f913a5338b66e0cc624c6eb1254b","modified":1505087736752},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1505087736782},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"53c894e6f3573c662dc4e4f7b5a6f1a32f1a8c94","modified":1505087736792},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1505087737041},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1505087737047},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1505087737045},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1505087737044},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1505087737050},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1505087737049},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1505087737052},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1505087737053},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1505087737056},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1505087737057},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1505087737055},{"_id":"themes/next/source/images/favicon.ico","hash":"fa11fca8d4119b9e0b35ae7751449f5f2888682a","modified":1505208876524},{"_id":"themes/next/source/images/favicon1.ico","hash":"5c7eeda6d3dd7935dcb844a6a44c520f970acd6d","modified":1505207857014},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1505087737059},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1505087737061},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1505087737060},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505087736984},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505087736983},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505087736988},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505087737036},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505087737031},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505087736787},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1505087736788},{"_id":"themes/next/source/images/tou.jpg","hash":"c762f67769fd326997242384e1cc0feae6580505","modified":1494723508000},{"_id":"themes/next/.git/refs/heads/master","hash":"9252d88aee286d0be594d796eb63e0e362d3b41f","modified":1528284730756},{"_id":"themes/next/.git/objects/00/3508a721c7848bf6f91bbdb9d7e76f22dec0d7","hash":"93cec9393ff51721857d80ed0a21cd9a39779d38","modified":1528284679865},{"_id":"themes/next/.git/objects/06/79546e28e7a699e24963ca29e0cf320c575dd2","hash":"a2b875ea89e936ead0303ff151313f55cbe147ed","modified":1528284679934},{"_id":"themes/next/.git/objects/06/a4c8ccfef76a1adb6f301df366c105696f4d8e","hash":"10cba2dc2b14f9c691672776946fbfa58eac68f7","modified":1528284679859},{"_id":"themes/next/.git/objects/0a/4a6ae5ddd7238957e15d366730db6de82aa8e8","hash":"584d41b1067a8247ede9646d01e5ad03846c385f","modified":1528284679789},{"_id":"themes/next/.git/objects/07/18f2af7db50912554def64f949ffe4dc3af904","hash":"6ee1d8ba7931f93198e73ff64ec8400588a7f75a","modified":1528284730694},{"_id":"themes/next/.git/objects/00/3aad92e98ac5a8d31b7caa98ae961fc1b160ce","hash":"92bddcddb94667d5dca436831da40560d7133ee0","modified":1528284679776},{"_id":"themes/next/.git/objects/0a/f3b020b90ad383265e8d953105e85966fde6f7","hash":"da25638d396ad77d09f922f8e8d7f911e72daf01","modified":1528284679947},{"_id":"themes/next/.git/objects/07/dfcdfcb716c8db77139b29a917a4beae2bc35e","hash":"10c41cd81926daba3c50dbf1584cc1a539d125ea","modified":1528284730720},{"_id":"themes/next/.git/objects/02/800aff86d846d1b909299da182d77be0ef2cb5","hash":"c3d266788f27e315163fc05aad696008cf3ca077","modified":1528284679937},{"_id":"themes/next/.git/objects/08/400a9082ca2bd9f6711674a53ffc42801b1f23","hash":"05f46a40ed593ae27024cee6bf398085c65508d3","modified":1528284679721},{"_id":"themes/next/.git/objects/0e/1b3783c415a0b071bd3195decb48a4f4509861","hash":"16937a5b24fe688a19c91ba695b3e4234741e676","modified":1528284730704},{"_id":"themes/next/.git/objects/10/4b172167b07995d269029e3bc8cba00b88d5ff","hash":"9f5d702475d14ea0bf25ffaa8c0803fddc4d6669","modified":1528284679801},{"_id":"themes/next/.git/objects/0e/b6f12be97694f0610aeb04e98d107a71014a29","hash":"c41447aa641e07ae905abeaa39f5eeab900cf0cd","modified":1528284730711},{"_id":"themes/next/.git/objects/0b/be5ce187a81dafcfea8ec3718041ae8581e5a9","hash":"d4373d69e3d0a16de6603319f15a482e2ae79955","modified":1528284730735},{"_id":"themes/next/.git/objects/0f/c9a53e295f1e311e73be5bec19f8ee97b2a904","hash":"8c1deb3aaeafdc704fd9a0a9b468f4bc3bb1c256","modified":1528284679890},{"_id":"themes/next/.git/objects/02/6682cbef31c220d67eae8e6d9412318eff23e9","hash":"d9fd5d2a2030f97d7027af42ad10018be60ba61b","modified":1528284730724},{"_id":"themes/next/.git/objects/13/78e78381bd8f422a6ad789f77044da810be5fe","hash":"a57d0b95e417033516c582d15a636d65228d29f6","modified":1528284679767},{"_id":"themes/next/.git/objects/14/0448c3fc02eb24eff16ba1c9c2e9bf955b76fe","hash":"a56d061dbf5b2105b95c4400f025339c53c1a6f5","modified":1528284679747},{"_id":"themes/next/.git/objects/16/c2580baa4d9197a8fdf3aad2711012c4ad2f02","hash":"ec264ab1a7035d2c5b6dda360558dd6a1142a0cc","modified":1528284730746},{"_id":"themes/next/.git/objects/17/70f275ceeb9313b9a6b27f09d85fa779476217","hash":"b9b5bd9435e0d10d116ad128da85f9dca79f9836","modified":1528284679862},{"_id":"themes/next/.git/objects/1a/6bb0c10e1fa5e5e80ae073f3ff6722b097079c","hash":"b71b9086d6a18028d28a1c165ac35ff979c7c731","modified":1528284679877},{"_id":"themes/next/.git/objects/14/94d8f4ab6181d1647ac717d7f21411da4a6e22","hash":"cf09d3944cfae3a9cea9fb97431db91d683d59c9","modified":1528284679824},{"_id":"themes/next/.git/objects/1a/60b5da59a339b7cb5c57e37e000874c505d06f","hash":"ad45d18f52bc2307cd4420147a1a610dd593b75b","modified":1528284679000},{"_id":"themes/next/.git/objects/18/21c97c814b8c7656cf6a9bfddcdf498fff9bc2","hash":"600d9b28a43682adbc026966181e266dacbd7821","modified":1528284679722},{"_id":"themes/next/.git/objects/1d/4b37a68479c93cf36556d60aee540642c06ada","hash":"5e4dae8f3a2627d0f64f2a703e4789df200d20ab","modified":1528284730680},{"_id":"themes/next/.git/objects/1e/b15990fddb51443905b1230d07d3f31c0016c4","hash":"dd808b0a51d1eb4a90946aec318c8ea75113cee9","modified":1528284679811},{"_id":"themes/next/.git/objects/1e/49e680306231faf361ae368aa5eab7ec5b7300","hash":"7ccfc414bf29d695b188683ea7ef08be4eca865d","modified":1528284730705},{"_id":"themes/next/.git/objects/1b/e81740d57a6700ec0cab06c2de05b05da7717c","hash":"3d3244621849163ad6a9445015bf2ff2e4df8b9e","modified":1528284730700},{"_id":"themes/next/.git/objects/10/bf170d01a0dc6d8e63683b52cd374cb8415e9a","hash":"832bf91c0f68bdeaff3af493a8b51a1d3b9629a5","modified":1528284679709},{"_id":"themes/next/.git/objects/20/602574021a9ba62e21dc0508d5ea4c4b540cba","hash":"290a2acf54c887de977ec9a1ba37fd11b040a57f","modified":1528284730740},{"_id":"themes/next/.git/objects/21/b95e68a87a0f5f9eec51930245b5566ec80503","hash":"c3413837a9f5de8cd805a422d7d8250b705d36a8","modified":1528284730748},{"_id":"themes/next/.git/objects/22/3bc5db624391e504790f3c7260ddf04c08629d","hash":"142ddce81ef1d0fc20129e2f9cb8b911e340245d","modified":1528284679838},{"_id":"themes/next/.git/objects/22/e0aa21bd743ee7f7569e0502c972c7421b3b97","hash":"a720862fe68d89dad048b2ae3468455c2c4ef22b","modified":1528284730687},{"_id":"themes/next/.git/objects/15/a8ba8fb45764e33e22aeefc0e7b1f18c96db36","hash":"150de287e4eba9cfb47482941b41ba488b2fa231","modified":1528284679791},{"_id":"themes/next/.git/objects/15/5de99f3e1ba7487b88c890afcd56f077329c8f","hash":"0d199a196c90874d098724f10adbe2984a0bf0f0","modified":1528284679845},{"_id":"themes/next/.git/objects/21/4813214ab53fd46fe0a12b4714ee61a0d59f5e","hash":"01dc51a8e6d06f94bd6e362e7a8c8e273214e1c5","modified":1528284680055},{"_id":"themes/next/.git/objects/15/edb70f339effc3efb6e89f6daa5af4e6194baa","hash":"dead712b3bb834cc28756d8ed20389b5584a9d67","modified":1528284680069},{"_id":"themes/next/.git/objects/2d/a090f1a458c6d6adc3795817baa87e339f9d3c","hash":"8ea0add7ca25d772ae15c7757881d27e5849bd7b","modified":1528284730710},{"_id":"themes/next/.git/objects/26/102876ad0c5c86d0ac8ab9a1abba3b88bbb887","hash":"6237ffc40c2040bb8817728b3262f94b34a292cf","modified":1528284730682},{"_id":"themes/next/.git/objects/2c/abf9de53d90e55b7368d10433db02a36ab811d","hash":"d90cf17b74b717a398a6e12474eca45f9656366b","modified":1528284679843},{"_id":"themes/next/.git/objects/31/56fb1736b62af2d7e6afdd160e17bc7c45a4a9","hash":"61c84f986f1377f732002cb9b42d10c0b0e2b51c","modified":1528284730689},{"_id":"themes/next/.git/objects/26/ea322b551b360332f71f9760aa0d420070184a","hash":"142444d4e19b2f35f216ea63992c4742b12248c3","modified":1528284679914},{"_id":"themes/next/.git/objects/23/b1a0915050a5729f334401de04c1459ea593b8","hash":"ffeb9205115c753b103611d828da58b216dcb795","modified":1528284680106},{"_id":"themes/next/.git/objects/28/9f5084fd97986321844da71430bff425266861","hash":"6b4a1a0bc790d90256ace8ffab81de80139268ff","modified":1528284679773},{"_id":"themes/next/.git/objects/24/490b15a16271329e66d566dd3237fa332a3b8f","hash":"fc15061faa61001ccc8f8e3e782d98494c51525c","modified":1528284730745},{"_id":"themes/next/.git/objects/28/2738c5bcfaf3169d3302a9eebb2241ae1ea2a0","hash":"180a72617f9b9b84ff9792226d1f64f6122fb914","modified":1528284680032},{"_id":"themes/next/.git/objects/28/f7ca707866cfb7ebb30d53a2d3042f6cf46e10","hash":"e091dbe8363e3c8c3768a906756328ddf65f3114","modified":1528284730690},{"_id":"themes/next/.git/objects/26/fa4e4de59e2fb4290d5641658b340c79050d5b","hash":"15a5f41afb2057d40637abbdf7cd70908a1746ac","modified":1528284679958},{"_id":"themes/next/.git/objects/2e/ddc8202879e2a0ba53f95a98a4b3253bcd6928","hash":"556a04750e134d2f57e3223fb12136f121dbce0a","modified":1528284679910},{"_id":"themes/next/.git/objects/35/e35d96f093bb2f61f7b4102f5a8ff924477df1","hash":"59b28d78889ea6e404f7cfdbdfce338f9485b018","modified":1528284679956},{"_id":"themes/next/.git/objects/36/bff9e418d580014f545bd83861d9be2d62a3e7","hash":"b4f5142974c29b91d3a20282a7222f5fc15ebcf0","modified":1528284730698},{"_id":"themes/next/.git/objects/2e/be60fd3f519aa7806a559d71158d5a2d77ec48","hash":"c9860b41f2d65dc87a6aab5db44c70bd48eb9407","modified":1528284680037},{"_id":"themes/next/.git/objects/39/4ece702df6f61b5bd73c74799824ba60f52008","hash":"5f0741ccb3edeea86d160083465ba029997cca28","modified":1528284679806},{"_id":"themes/next/.git/objects/39/69e782af6131a177229c314f4c6aa44e39ae0e","hash":"7467684950e11039963cec3acb5ff1e033173c3e","modified":1528284679804},{"_id":"themes/next/.git/objects/2f/27b47450953356de6b2060ab5c559a792f7615","hash":"e27715edbdd7fdd98e731d7ba02998ff03501b53","modified":1528284679920},{"_id":"themes/next/.git/objects/2f/d1369958abc67dedc6724f903316fb795e05d1","hash":"df9218facb6d56267acdda21259424a6fd9935fe","modified":1528284679907},{"_id":"themes/next/.git/objects/15/7aac77be304de3e88327a14e09b284574c4c6f","hash":"3dfc308fa500bd4c3c5eea60e8941cd97c58dd4f","modified":1528284679733},{"_id":"themes/next/.git/objects/2f/fe4a5ee142bf5d124196e2787d3fdc1bdd8979","hash":"110d028661ce65e1963c58d16ae853f55010b4db","modified":1528284730707},{"_id":"themes/next/.git/objects/37/075df2ea22da069aebee20f90d7d779e93957a","hash":"706c52720b95dc63521a0eb1d12df8cecc98ab42","modified":1528284679899},{"_id":"themes/next/.git/objects/37/ee263d60cc65e71695731ea47e26ae7d6d6178","hash":"19a2d2c653e428ddcf8e82e06032db64014ee146","modified":1528284730000},{"_id":"themes/next/.git/objects/38/93df16bb127d07c0709ff1762c4372b2d15308","hash":"e65380df1c3f67042ad4410f613d5f7c254373a5","modified":1528284679822},{"_id":"themes/next/.git/objects/37/024e9cc3fb6b19d2665b15cf309f9f32a64611","hash":"a37bb68dc034b7b70987c5c041d0032c755b6533","modified":1528284680001},{"_id":"themes/next/.git/objects/2f/571e2e637341b6d2e01bf7639f701d9c0b6276","hash":"110d9e64c4d424dcc1d5d10adc4072d98a353528","modified":1528284679891},{"_id":"themes/next/.git/objects/35/6507e9cfe4cb614113392f82b2e4bfb4747b0e","hash":"d49e389ffc88c23eb6cc8d0677b94fa43423a084","modified":1528284679800},{"_id":"themes/next/.git/objects/3c/20e64f2d601a4a9e6e0dee527c591f3af59086","hash":"383684876d513eef0b041e6adfc86e068fd22d92","modified":1528284679880},{"_id":"themes/next/.git/objects/3d/cf30550d6c41ad055bdf6bdcdc5fc47daee660","hash":"54196f96653c4d6b1e2a02cb27c5ba0b866fb942","modified":1528284730709},{"_id":"themes/next/.git/objects/34/253879e21c6ce800b7cb4bceee400ce33fbe60","hash":"017bed925af4a610278c22605cac6bfb321b888f","modified":1528284679959},{"_id":"themes/next/.git/objects/3c/7b24b84276878c4b6ef8da89581a1c41ef4f55","hash":"6cef012657280a99872b05ada49026317121c858","modified":1528284680072},{"_id":"themes/next/.git/objects/40/d54dd3ea78be0f37de41f51e254cc0f5ab27d2","hash":"7cf452ef58ec433d34de16edc1abe02bb787bf25","modified":1528284679831},{"_id":"themes/next/.git/objects/34/3a121856a874e0ca72e7a2e40dea9772c2edbf","hash":"128cc2b9081b1f2897b54c324c70284ef8c24097","modified":1528284679901},{"_id":"themes/next/.git/objects/34/a1a5c0286af9df0c1b302b07d944925d2b9c93","hash":"637f1ad029efe86192195b2545c980e66d120c3c","modified":1528284679810},{"_id":"themes/next/.git/objects/34/b529ca8afac207eafc0f2973c433b4e8649581","hash":"7727368a2132cf284e6c12fa8c55c4b8696d4eca","modified":1528284679814},{"_id":"themes/next/.git/objects/43/96ba4f7e9351e2372c2387ad86025ece7ce88e","hash":"1437cdbb93de37fb62cf1e089c8cf038aaff2d98","modified":1528284679761},{"_id":"themes/next/.git/objects/3b/f0c94dcb2dbf9a18a98b2b89069cae375d9f29","hash":"1f5590088a9640a70305d3416b4d8e708fb86f7b","modified":1528284679786},{"_id":"themes/next/.git/objects/3b/9b48991396b58c315784f1005287fe2b6af102","hash":"342deadb291629cf14a9a3b4dac512ef968d9a1a","modified":1528284679798},{"_id":"themes/next/.git/objects/46/0b545a4639ea4156e625d59ca766b70b79db75","hash":"5621b7b4344a46236635b96b5484c6a1fdf2b432","modified":1528284730739},{"_id":"themes/next/.git/objects/46/3441055615ef0ee9bd6b88577ca3cdcffdd82f","hash":"ca1b547638a2151ffc384103d3090c50543f9504","modified":1528284730734},{"_id":"themes/next/.git/objects/3b/f5ad0ac65fca1215b459ca526292828e793270","hash":"e572559e16d9a6509eb03bb415ad1eac2784364d","modified":1528284680064},{"_id":"themes/next/.git/objects/3e/1817788b0be2319889131cb72ce7e2e8d05127","hash":"22b97f9268e556c007ea86c7a6e11a7ba3b57d24","modified":1528284679936},{"_id":"themes/next/.git/objects/34/6c1ca9b7546277345bc803eaa63fde441e8896","hash":"5c02aa4f2ee00dc6063be3bbbcade55065659a86","modified":1528284680008},{"_id":"themes/next/.git/objects/42/2b39d12822bac72fcc134bd0dab6be414319b8","hash":"7db3956ab6a51a58130aa43103c7a71a5d1aec27","modified":1528284730743},{"_id":"themes/next/.git/objects/42/88fd2b9d53bdbffd97baf879094314cd33ab16","hash":"b255851dd27b16d191bafb3f8ee3edcb93a43d4d","modified":1528284730744},{"_id":"themes/next/.git/objects/45/37fcb3eb7faa16e9350ae58a0ec9469126bd5d","hash":"ba98f95038f5874f5472e0f5b150ea1844ae1e11","modified":1528284680071},{"_id":"themes/next/.git/objects/45/8a0676554d1a8dedfbb617f80bc411169e7537","hash":"97387f51bce9cbadae6c78973375ec8f4a46c150","modified":1528284679885},{"_id":"themes/next/.git/objects/47/1e494aefaf73f80e89246af179f1746cc1aa5f","hash":"7e5712d8b73e5643a3f477519d457dc3605f41b2","modified":1528284679925},{"_id":"themes/next/.git/objects/48/024288ee8b0f01a0f759533df7f910ff01b5b2","hash":"5ad03c37cad5703ad34eb4a4a10f7ade0a42dc4b","modified":1528284730683},{"_id":"themes/next/.git/objects/4b/3a29687d123c343aa5ef8582d4e4f314aad012","hash":"68a3d576035a57f194ff6dcd16efa04beacd4717","modified":1528284679849},{"_id":"themes/next/.git/objects/4a/76acaccb720a7a63c5746e7f2f1f00f0136f5d","hash":"240a701b9b5746ca8f61bb983acad268f671c34e","modified":1528284679863},{"_id":"themes/next/.git/objects/4d/17d7b0102c05d9a1820f77036dade68c8108a4","hash":"4487b8c2a811456d4cf0a8e3ece042671b43c1a3","modified":1528284679784},{"_id":"themes/next/.git/objects/45/77a472a5c916590ff721fe743cb33dfefb82ea","hash":"eeea7ab59dde4e59f130a34d72007fc455da3522","modified":1528284679738},{"_id":"themes/next/.git/objects/4d/cc1868602441bdc5f04ab67a683c4819d471a0","hash":"78bce6a90ebd1f913c7db3f7bcc86c610dad8ff8","modified":1528284680059},{"_id":"themes/next/.git/objects/4b/4ad8d29291a013a403a441c1b18f840167d432","hash":"8c24baafeddcb4849d32e913f1533ff688890a80","modified":1528284679768},{"_id":"themes/next/.git/objects/50/313e20d2d778f540fc5b2cd4e9b2652fb7681b","hash":"ceffffa574b6beb5d78f835b50bc63d1795a8455","modified":1528284679854},{"_id":"themes/next/.git/objects/50/923b1e1e8d0cc479f15a223a0529487c5637e5","hash":"a69d506c777a60c6e2a02f05f963089d143e6c19","modified":1528284679934},{"_id":"themes/next/.git/objects/08/67ab931de579eb0d4cc95a6afd5d6c6ff8a2bb","hash":"fc35b5090d7064ef44624421f97f067bffb9887e","modified":1528284679964},{"_id":"themes/next/.git/objects/4e/95877f9f08f9f77e87ca425690a39eb86cacb4","hash":"b4ab87eaeaf1935cf246ac898020a6dab4207cf0","modified":1528284679984},{"_id":"themes/next/.git/objects/54/1e082959660bcccef850324436e9979b317032","hash":"7b0ec9dab212454b57626906d3f6313604ce7290","modified":1528284679981},{"_id":"themes/next/.git/objects/55/463ebcdc04ce84f12e194bb16553ff8efea602","hash":"50f676bd497ac846060352e970279b36338a95ec","modified":1528284730678},{"_id":"themes/next/.git/objects/52/9b2aea2096386a7bf96ee2716753b8763c9325","hash":"62dff0ebcd926fc3f90dbf419dce079a8e7f3728","modified":1528284680056},{"_id":"themes/next/.git/objects/57/45cf0b766e3b6bc19e61cc0b3c1aa32f20ae93","hash":"5e8a1c069d95f2a720301aacd9829b0ac13491c6","modified":1528284679932},{"_id":"themes/next/.git/objects/58/48ba9273f571521c970090aa5f1d9370f8369d","hash":"6174d1c0d8cb202bf765e3a4334fc3876f54addc","modified":1528284679917},{"_id":"themes/next/.git/objects/3a/787d6661f056c74ce99fdfa14185035968c082","hash":"e20cfef5e4cabe13268b4ded64655b2a9de8ab81","modified":1528284730709},{"_id":"themes/next/.git/objects/3a/3c33630db81925d8b5bb98ba4b07254f76cb28","hash":"760e7c1d2143f540bbb28a4d8c86ced4687c05b7","modified":1528284679864},{"_id":"themes/next/.git/objects/56/e431b5c278762bc6d658f05e3cfb29ad437088","hash":"f459e027e2b40622fd0496f8bb218e0518dc0241","modified":1528284679979},{"_id":"themes/next/.git/objects/3a/95badbfa1f7bca6b4e3c5cd668478506b4ffa1","hash":"5b14338da2750841cc230fac55741862df668657","modified":1528284730695},{"_id":"themes/next/.git/objects/5c/5a1c75a2dcfba723349e688ea68891814e8d40","hash":"cc509b4591d04d3de751b91e9b686356c207c364","modified":1528284730728},{"_id":"themes/next/.git/objects/5e/5bb2fb14930a09f549ddcacb31087fa2b916d0","hash":"c3945d596afd73328660fc6eebdca59a3ebdac07","modified":1528284730713},{"_id":"themes/next/.git/objects/3a/8d2ef7b3f1c9430b273d78968c47b267c3719d","hash":"4a05916347257cc5b1504f9ad1a7076a441684c2","modified":1528284679921},{"_id":"themes/next/.git/objects/5b/0ccb6fd63bd8903da33de5fd043fa8f7c2af27","hash":"d607e57e82204eb9620e87545ffc6ca382af4ee0","modified":1528284679923},{"_id":"themes/next/.git/objects/5a/156b79c182a89dd58d85b513f6f65c5df24be0","hash":"7ba1f48aabf59e7d7df364a907076c60bc678273","modified":1528284679946},{"_id":"themes/next/.git/objects/59/1f6c098b3501a8286b7b3aec7623858dc9e45c","hash":"0b91e73e56f968477916f1a5dec7107b98673912","modified":1528284680036},{"_id":"themes/next/.git/objects/65/afc7f83de043c72275ad9890c6432d539452a1","hash":"ed8f0b2e57b629f1ba6e095938b85bd93f4da58f","modified":1528284679769},{"_id":"themes/next/.git/objects/64/c4dc2a2c7c194f74aa84300235937c9cc5552a","hash":"ae57c0f16b10f204d6179551cf3455e70ab2c0ef","modified":1528284679778},{"_id":"themes/next/.git/objects/64/ca50397d517dcd3b07a92558f5afe60aaca456","hash":"de7135d2ab58ca38f2d5fd98225528e508ddc40a","modified":1528284680000},{"_id":"themes/next/.git/objects/4e/5c9ed0dd4c67cc9e6259871b9113aab36f2af1","hash":"6a7cbe25dbab06402faf5e5feff006a70fdc9cf8","modified":1528284730699},{"_id":"themes/next/.git/objects/51/90398b24837dceb8cc9c7baa818fda73c147b3","hash":"ec94a2e73b3a0e64af7d0775f92d2409ad0d4b60","modified":1528284730738},{"_id":"themes/next/.git/objects/59/441cdd13a8caecfd86631da66fa2983247cda3","hash":"29d19f9e916acc8e6092a94b993daf6a639949b6","modified":1528284680105},{"_id":"themes/next/.git/objects/51/c90e31efe3c560c91bc2cd03e69372a2ddc69a","hash":"eb9698ddb1b6930e42d9b3692195ba3ce4589408","modified":1528284679879},{"_id":"themes/next/.git/objects/66/4fd6a799a9379c2179b2d6c52f90b888d5f68e","hash":"3ec16f537ec90ed2d0ceaec5c1c6635dd27ea378","modified":1528284679945},{"_id":"themes/next/.git/objects/69/990a324099e7021b19521f9364f1049c05b0c3","hash":"f3a56e1745dbd29ff8085be7b4c022742798431a","modified":1528284679000},{"_id":"themes/next/.git/objects/69/fd412f9f16a8d91fa1f46198948ce14fb216ec","hash":"6f7ebbb4ba1aec4917c18cc23ee0958385cc78e5","modified":1528284679871},{"_id":"themes/next/.git/objects/67/13babb3789233759e4ee546d724b518955c80d","hash":"d8feca849faf7a90c6e47b6313ede6e808c2094c","modified":1528284679832},{"_id":"themes/next/.git/objects/67/1be39190257a0a6a86709af87208bff6d8756f","hash":"11328f098e237d70072756860e2f8245f5aa3003","modified":1528284679792},{"_id":"themes/next/.git/objects/51/7ae79fea4e58e67c952750ec96d736ab63ac51","hash":"b2610d49d42bb7cf5420f727159de5dfce6a0646","modified":1528284679795},{"_id":"themes/next/.git/objects/59/3441b0892565903238be03540fd640eb52ff65","hash":"f54747e917168b9db8d13af4167301b8a80c67f5","modified":1528284680035},{"_id":"themes/next/.git/objects/55/78ea5d6f1c9b24843d461dab816a721e327ed9","hash":"ccbda79be34ddfe0acbb09a5851bd557e8794f49","modified":1528284680015},{"_id":"themes/next/.git/objects/6c/f376c257a8de07c20b01aba10724fad38d4df2","hash":"73e54c2d325bcf397a8df4b23a43ba459e57f1f7","modified":1528284679897},{"_id":"themes/next/.git/objects/6e/db7859f3ce148ed8546c12331ca9f69cc8847f","hash":"2a46bf9087ea3834917fafe8b2b42e7f82e63a2a","modified":1528284679896},{"_id":"themes/next/.git/objects/6a/bc20cafea6698e8d80c31919f46220c0d38942","hash":"58d93c89dd4f3537951e79c113c4cd3ef5633016","modified":1528284679793},{"_id":"themes/next/.git/objects/6d/67e168d6d0a9b4d548c12e31fa8113aa3c8cd7","hash":"69cda6f02562008f34ac63ad4fa70b581a01016c","modified":1528284679950},{"_id":"themes/next/.git/objects/60/6c7af345e2b9d1d205d58d5d87709d124f19c7","hash":"7737968ca35f1df9b0527170e6bbffee62b1baea","modified":1528284679765},{"_id":"themes/next/.git/objects/60/12def48c965ac7311d5fe9e62a960ea52f4da3","hash":"cfaab7d9cd935e66416b3e33ad3e8e4ea76fe770","modified":1528284679948},{"_id":"themes/next/.git/objects/41/96535756bd04961be8b91a20426dfd23eb89e7","hash":"bad7942299f685b5e75631c5ecd65ecd70bacd09","modified":1528284679000},{"_id":"themes/next/.git/objects/41/e5b866c828a2abf66263cecd92cc626ee7e069","hash":"997f57518053574329da9e7a4ff8ffed5e021e8c","modified":1528284730741},{"_id":"themes/next/.git/objects/41/69ad21d2b207d4886e41789381e1f58588f834","hash":"af21469a25511dcb1d0854fd8df0012ec2a8f241","modified":1528284679749},{"_id":"themes/next/.git/objects/60/b642bf29fea6cba848ff65a95ea81d6cf3dd5a","hash":"d936b47b40539dec76ab2ec426c484e9872e0e5d","modified":1528284679807},{"_id":"themes/next/.git/objects/41/e35abbac3b631f44e08e5a5882512fce4a8467","hash":"61547631bb5d93552314cf5223f34563ff976bd1","modified":1528284679867},{"_id":"themes/next/.git/objects/6f/9d6f2f71716d4f4c0ecb42f92922f334a27c05","hash":"15a08c89706001970609daffe7bab8cc6c9ce364","modified":1528284679841},{"_id":"themes/next/.git/objects/6f/e7f9ccd2fae5a63e0b71f39dd9b7e1594808b5","hash":"031df155610baaa65e0c236c5f98dd7004ed3ef6","modified":1528284679762},{"_id":"themes/next/.git/objects/6f/7feeaa7613ca97a44db856ea80347d64fbc1b6","hash":"05a91e4084d2237380a40c42859f5e8209cef25c","modified":1528284679855},{"_id":"themes/next/.git/objects/75/bcd7b61b2d178acf81e1fe4437c1d443c59901","hash":"39a76122272c4853824ab0339ecf1eaeb604c370","modified":1528284679829},{"_id":"themes/next/.git/objects/79/a7255f5c329b99e9785c0f5c17fbd76e863c15","hash":"536e37c528a6c13a9ef975e12c595a6775c5dc0e","modified":1528284679931},{"_id":"themes/next/.git/objects/7a/3b1bd8937fcbc66c6d2c1654a8bd1e734f5e6a","hash":"05e388c6c54d4e3aec4744bc7473b5c4948ad5e1","modified":1528284730703},{"_id":"themes/next/.git/objects/71/43612c142cca8fa029a634e33903c5f53b2d74","hash":"c05f691c1cb5a04fa45ffdab62547c0b71d0053c","modified":1528284679735},{"_id":"themes/next/.git/objects/73/d8731bb9c9620f94b994dd241ea983d988e49e","hash":"a04400ec0c66a99587197d12d3790e68a1483a2c","modified":1528284679820},{"_id":"themes/next/.git/objects/7a/21dd685372cc8ebc2c74c0ad0d9ce9a720b612","hash":"4b1da531e3e45e8e63ed03b8ba10c4a533446f11","modified":1528284730691},{"_id":"themes/next/.git/objects/6b/ef367c2d4a116199d650cbee423a6a7847870f","hash":"d57f5ba8a6e6df4acfa60053900dff74126b6847","modified":1528284680068},{"_id":"themes/next/.git/objects/7d/d67ef28884e91743cc7c60f24ea4b237a00636","hash":"4477575ff8c7a5b44d09610962969327eb3b9e9b","modified":1528284679926},{"_id":"themes/next/.git/objects/73/c7013fb2f97f1739dbf24552f0136dbfec9712","hash":"54425130b37e51bd265f12f6629cd17af4aff1bd","modified":1528284679779},{"_id":"themes/next/.git/objects/74/73f03bc8c5975f9fd741d312c97250d9416f31","hash":"c014b856991576cd4563ab0d2986be351d4ff804","modified":1528284679976},{"_id":"themes/next/.git/objects/70/0f6fffe983a616461d28dd6af99c1dfdfe2071","hash":"22f745fce20d4eae462718059aec7ecf92fd10cd","modified":1528284679782},{"_id":"themes/next/.git/objects/7c/ffca1efa9ccda1e7653d2c3e19f1585d855b4d","hash":"ebe6b4e7403055b81630e967870b4cbc05855092","modified":1528284679710},{"_id":"themes/next/.git/objects/70/aea2bb56dd9dfe22c9893f965f556f71ee928f","hash":"1ee632a9d4189adbe8660c492b9900705a43559b","modified":1528284679940},{"_id":"themes/next/.git/objects/70/db4a8dc6459ad49e09f742c7e7611648457d97","hash":"c503ceedd987efb4d58c5113e09ee57d4a5d362d","modified":1528284679873},{"_id":"themes/next/.git/objects/78/3e5eb65b1204f6e09e3b5fc84ae938f05cbe1f","hash":"3fc60c0eacbf7c82f187156290069f9593b95f75","modified":1528284679955},{"_id":"themes/next/.git/objects/7b/c650c766267dd7ee1700fda58eb475db97632e","hash":"ba90f232346dc084c442a61b92aea4021b53b4e0","modified":1528284680007},{"_id":"themes/next/.git/objects/7b/f1057aa89fb757ac9fbee55cb4e154d9f2555e","hash":"f1365feca39b3c4eab94c15502f4d34653b808c0","modified":1528284679977},{"_id":"themes/next/.git/objects/83/2f6207817278a0e34e1c427b6bbe6c4d5b5c8a","hash":"972e69ed8232c88db2e58f3c9f9783e903f2d480","modified":1528284679894},{"_id":"themes/next/.git/objects/7f/69808332f98efd9d95e9f04b025e98dfc8ce01","hash":"6966cca077a97943e24692406f5bad82943f01ae","modified":1528284679803},{"_id":"themes/next/.git/objects/7f/7671c3188e381ae13882554ad0eb29d71deb96","hash":"5f4bbb9a52703b8bc875c543d9e37ab9d907fe61","modified":1528284730733},{"_id":"themes/next/.git/objects/7b/d32b2c380a0ca80614bce29fe8c6aaa0574356","hash":"a74acf32f1aeefc79ba5c4dd22a800eb3fb2165e","modified":1528284730685},{"_id":"themes/next/.git/objects/7b/914ce01e53ff74e907f08b25109af9c4c0a65a","hash":"905d7da8b5ef66b0da1830566bd44fabdc821f65","modified":1528284679737},{"_id":"themes/next/.git/objects/6f/159f513cafbed45136b8982554c32e067d75fe","hash":"605e6b9b3ab611fe2271d48aa28967282aff052c","modified":1528284679874},{"_id":"themes/next/.git/objects/84/a02a2d958c209e46dc1f8e2c57d2eef477546d","hash":"cd002cadd50167fb8fffd532eb8540eec3f59e05","modified":1528284679798},{"_id":"themes/next/.git/objects/82/59125be842d132476da6db5f0de060e764e583","hash":"4b772221cde562fb2237a1bc7fee6ee8872636d3","modified":1528284679714},{"_id":"themes/next/.git/objects/6d/fef6ac0b7e800a283262673cf2f7e9e29bd4aa","hash":"ea58f238211ff7f425ddf0f796ffff2b3385e341","modified":1528284679754},{"_id":"themes/next/.git/objects/85/8ffdf893feabc9753abc350164e0cd13fddb86","hash":"2e510b09c7ddbf599bf6b18460be6530e21ce592","modified":1528284680029},{"_id":"themes/next/.git/objects/89/b9ab64315b51aba21d0ef29f0b9f9171cbbafc","hash":"3319fcf34c7b2570564c0cf1a6114dadc8f6bb06","modified":1528284679720},{"_id":"themes/next/.git/objects/83/0f8a2c9115da88fe32a6770061337f5dc21278","hash":"6e19a5e06ed424e867eddde91f271761ea0a0f25","modified":1528284680039},{"_id":"themes/next/.git/objects/8a/905e47580f198ea0308088edc8efcd749a06cc","hash":"92d31778266ed27dcdefbe51e7064e1df6a8b75f","modified":1528284679965},{"_id":"themes/next/.git/objects/8e/a0b231b387bbbb1d8fc0ca526196a6c507ed03","hash":"f1b6242249227c40ab13d314f6cb759604698adb","modified":1528284679840},{"_id":"themes/next/.git/objects/8d/a0165f4a25873d0ef5e954efb06b33137bf623","hash":"5f15142e8cbf0763f2783a1030e1246040ea00c5","modified":1528284679933},{"_id":"themes/next/.git/objects/8e/e55c85ca0e43b9d0ee4c8854f38f81419023c2","hash":"f17938ceda8499e75e562f755ca8be718861ad03","modified":1528284679739},{"_id":"themes/next/.git/objects/91/f14ad3c6bb29df556f8168c254052416d70028","hash":"8d3494a5f514e536272ec045148f926040e85e15","modified":1528284679726},{"_id":"themes/next/.git/objects/92/2a9853adad03754860b3f9ef48b3e3e7d7ebbd","hash":"5129df5256154b4dd616d53d83dffbe03b641dfa","modified":1528284679860},{"_id":"themes/next/.git/objects/93/fe4e9fef50fc420dfb2517a98e85e155fbe3cb","hash":"805670aafdf106d2e8ab2a05582ec0db30c0e0c3","modified":1528284679895},{"_id":"themes/next/.git/objects/94/ef9c5f4adc52f5c59b6b1c264563b9b9a039ad","hash":"ae17cb9279ecde9560afe34f4ed417d71f01d8ef","modified":1528284679725},{"_id":"themes/next/.git/objects/96/7b3af420bce79cae8ff76bd4647bdee7e64954","hash":"8e1d4265c88dc12f975f89af9b906e50368b907a","modified":1528284680006},{"_id":"themes/next/.git/objects/90/b12f69d50ae11b37a7afc7b374db263cef15f2","hash":"65ffef06705576a3c2c5a47588ddbc9fb7b62b16","modified":1528284679986},{"_id":"themes/next/.git/objects/95/cef2052040da1cab6890c4ae2ec55efe446d79","hash":"895fa95a767acb6082ea4df1bfb66bb844e6e3ad","modified":1528284679828},{"_id":"themes/next/.git/objects/97/75757384cbff2740e11612dce2d257c0f6e75a","hash":"7bb67b4623d607ac2d6c4ee280ecc81a6dc85dc2","modified":1528284730731},{"_id":"themes/next/.git/objects/97/9da41116ba02e8b84ffa1283804044cb3c87d6","hash":"edabe286077cc8325f819b1c1c84cb7a58a3022b","modified":1528284679886},{"_id":"themes/next/.git/objects/88/1acad26d4c30db6c9fd47fc001f6592b96dc3d","hash":"5b45542d20246301dbc0d721201a8ae643f01c95","modified":1528284680010},{"_id":"themes/next/.git/objects/95/dcd77f3895e7d86cae6bc40653f5e7a7ece45f","hash":"2e1302bdc56b6d1909c9179c3511f85679f6bc03","modified":1528284679912},{"_id":"themes/next/.git/objects/7e/951ca40d82cf6d68693873eba9cbcbbd223a25","hash":"0a2d51841cb63168c441aa4a72b9e4717ae2de12","modified":1528284679927},{"_id":"themes/next/.git/objects/98/125da4f344758ad097a90568529d513a322494","hash":"b6e54f83f203aaa891c6c45af4efdbdfd0e32ac6","modified":1528284679834},{"_id":"themes/next/.git/objects/99/8a8124b38d08046f78f2e618d2f2f48232607d","hash":"ab182d02ceca3f0b5585e7935ac96621defded09","modified":1528284679911},{"_id":"themes/next/.git/objects/99/9f4973d18167f50b958468cc536e0e58eaca91","hash":"3a779aeffdb7125d6e7f6a924b02bca4b9ad34cb","modified":1528284679875},{"_id":"themes/next/source/images/wechat.png","hash":"874a371811506f4ea3c16c44c7e8ae4896b19118","modified":1505117327434},{"_id":"themes/next/.git/objects/9b/83de335759ac5679c3295903421522eaae515b","hash":"325bd9ef022be9d3cbdc9f69456f823d732b9388","modified":1528284679825},{"_id":"themes/next/.git/objects/7f/7ecff1916ea2c5c56b2151b5eb98311d533807","hash":"be0565233cff2e3227f357a2a6535fd5f3e02b13","modified":1528284679821},{"_id":"themes/next/.git/objects/86/aee48665f5aad52ae26533fff3f6ad7f0e2b39","hash":"79e81d5f1fddf09679f6d09abf5f53f890e2b361","modified":1528284679766},{"_id":"themes/next/.git/objects/98/fdf44e8ff1fda773dffa2855cb972676fc6ecb","hash":"2b96ffe6d8e2305dd91991ce4dd4e354321ba6d2","modified":1528284679887},{"_id":"themes/next/.git/objects/9e/8aedb8eb0543fb4757e58b36200c8b2dc3cb7a","hash":"bd295a10cfd6bd35d2ff537d3b96e3e6b1886a69","modified":1528284679770},{"_id":"themes/next/.git/objects/9f/7ec1bcbc94ea7193fe1e71a5e39cbc15c6f035","hash":"06273c2e864576022c800fa1e66645a2c8c7742e","modified":1528284679736},{"_id":"themes/next/.git/objects/9d/014a271393be30d61c6144624eee2752850825","hash":"c1c54dfb1bc076f4246629800d3fd88499aa5cc7","modified":1528284679751},{"_id":"themes/next/.git/objects/44/7793bcc907dc738a877afe8518ac0e68b05728","hash":"f96f8f70dd139437e2e0208aa66160b9a1063c18","modified":1528284679966},{"_id":"themes/next/.git/objects/a3/ae42d3d85790a736692076f2010891dd0f9f37","hash":"9bd86bfbf2ccd37fe8300a836b39fe9cd260a507","modified":1528284679941},{"_id":"themes/next/.git/objects/63/1d8e086e7a842a226145a6afbcb71f48150424","hash":"85ad45b39df8ee6860801f11c866cf8e036ac391","modified":1528284679707},{"_id":"themes/next/.git/objects/a0/f1ee48f0d2081f9203ca101a03e380c31e7248","hash":"ac173e45d4af0c1df68c71e907acc4bb13896f7a","modified":1528284730701},{"_id":"themes/next/.git/objects/44/807f1538a402afeafc3d300796ffcf60607587","hash":"7504c744a3655df3f85b0851504ca3a899ff4d27","modified":1528284730749},{"_id":"themes/next/.git/objects/63/a40201d43f2bd231cf925c02c69f172b0e4cfc","hash":"0721eba1fcc0ba8c22d59cf86ceb549509f89f41","modified":1528284679819},{"_id":"themes/next/.git/objects/a3/875867a39783391ac0767be2eb7d13477c452b","hash":"8d88cb4939f43d6974ea0fcaf0bfeeaf4a4420cf","modified":1528284730693},{"_id":"themes/next/.git/objects/aa/e6457b1ee3c7f12cb3db4b83cec78dade52414","hash":"efacaf887b5f03554a65656e068a3fe89d923fb5","modified":1528284730706},{"_id":"themes/next/.git/objects/63/f057ad1ee4023c8892fb1e6d4762065ed38c84","hash":"6318076dd6fec7d9a70ff674876aa1adf27b42d6","modified":1528284679740},{"_id":"themes/next/.git/objects/a6/768dba6ef608d2e46b2896745810c57738cb5f","hash":"b98b685ec84f767e06afba236ac39fcdd47bd34f","modified":1528284679802},{"_id":"themes/next/.git/objects/a7/ad716ca400df3dc953ecaa14bca085ef70d590","hash":"264454fff469e2ac7df052ff99979b8b56702ad8","modified":1528284679872},{"_id":"themes/next/.git/objects/ab/06adffec5eb9c18da434f296a25058856ecb0e","hash":"87519cc5f4a17a4adbd7f2ead8c7046154923793","modified":1528284679835},{"_id":"themes/next/.git/objects/ab/ea3e0dfeff12fe99fc3366147b33bafa369913","hash":"4fbdcc7abeba1173162ffd3011acc073b5e11c79","modified":1528284730723},{"_id":"themes/next/.git/objects/a6/5bc5973ab52a0d5428bac688763a5816930e0c","hash":"88db8564d95b549a082fea1046d2bcca368a095a","modified":1528284679969},{"_id":"themes/next/.git/objects/af/96eeefb01486a52c71c27a4acbe925f7c78865","hash":"81ae3f21060a517df23545e67f9a716ee2b51556","modified":1528284730712},{"_id":"themes/next/.git/objects/ad/8301e2f5c2fb1f8bb40e371db0e8b24560437f","hash":"7ca6dc5be37e9470c3ca599d42eb43fb5908bc91","modified":1528284679999},{"_id":"themes/next/.git/objects/ae/a7ae8c2aa37920f611f102e9b463417d4f57e4","hash":"2a5fbbb17e2bbc672d12df94a5cb02c0b0477e8d","modified":1528284730742},{"_id":"themes/next/.git/objects/b2/ad4b4ef2bc12b0d66f35fd02ed73330080fb53","hash":"db6c1e987b87fab737297915f8814e225c3b34bd","modified":1528284679870},{"_id":"themes/next/.git/objects/82/eab9e644fbf38b6d2a17075731df1e66bcec0a","hash":"d6a60773b5ce87f9b6ea425a4da45df850c3cc08","modified":1528284680041},{"_id":"themes/next/.git/objects/8c/10693a11bf447355a00827ab0904f18ff1860c","hash":"e171185ad6be4a0e73ea64cf44a8edb8e74fbfb8","modified":1528284679771},{"_id":"themes/next/.git/objects/ae/30d4f6d5e88217d8b342397fb1cb605c2f48d8","hash":"bcbb75abac28fb8fbec0c2656a89af08e6837324","modified":1528284680031},{"_id":"themes/next/.git/objects/8c/311790cf7af44d0864dadec23edd41b0a7d8ff","hash":"f67345cb5e0359cc62642eb073d5a59dbe1c7ad9","modified":1528284679742},{"_id":"themes/next/.git/objects/a7/400bdd75399af14b210467e9447bf845da4a43","hash":"324eddc575806c6b95726df9c8004ffaca74b714","modified":1528284679971},{"_id":"themes/next/.git/objects/60/f9772106cc913a926150c8ead7bacbc0c7ede9","hash":"d3986ce66601253966724e8be29e31155467497b","modified":1528284679972},{"_id":"themes/next/.git/objects/b0/857f7b056d5aca27e34ffbff93cab1b618b218","hash":"46d1ae34a274d9d55d8038bd0057345f85929fbc","modified":1528284679758},{"_id":"themes/next/.git/objects/81/9aa0277a4a4b264fdee22384473797e3f10739","hash":"7d2cd6ff4d0209b32faabb8a41dce5fe2dda5d8f","modified":1528284679975},{"_id":"themes/next/.git/objects/b8/5b3a7236c1aeb70e055956da8053d15f47a142","hash":"049b90d6055ca30d01da5efef0da38021a7c2430","modified":1528284679924},{"_id":"themes/next/.git/objects/81/75daab081114c93aed8d7e106cbbafeb896da3","hash":"10f336d87203f58f396930b24339e4e2e000a33f","modified":1528284679963},{"_id":"themes/next/.git/objects/b5/08fe714cbfc7f09c6b0cdab6e6b5afa0a0d9fb","hash":"ef8eb5f5a8ac7e5f77a0b29548bb3efcb8722bdf","modified":1528284679713},{"_id":"themes/next/.git/objects/b5/178e382fe6dd512eb8d9b145bce1293fa48a6a","hash":"63352c444fde491fe5af4e4f4e3d539cb7767621","modified":1528284730722},{"_id":"themes/next/.git/objects/b5/4f2a368eac037ae81d6e692b6a276b5cce8a21","hash":"ebdb50cb38e8823e0eea989c1517914122cdaba0","modified":1528284679750},{"_id":"themes/next/.git/objects/ba/9feb77a54951596e82e7c797e1091ed1fb9b82","hash":"3d7ef01456a61d4d47a8b6bbf8df63da5fa5c08d","modified":1528284679780},{"_id":"themes/next/.git/objects/b7/6f1edeed96b653527a3f5a0a4e7898ebad80ec","hash":"e11fb8f8d5507936d35afc523430aca5b0596cc1","modified":1528284679745},{"_id":"themes/next/.git/objects/b8/454d305c7583ba218a695c6110961bfaba26ac","hash":"3175d845507b0a07bb55c69c1afb9ac7154080c4","modified":1528284679857},{"_id":"themes/next/.git/objects/81/08c1cecc8e2b30ef9a863d0ed5d03cefbaabfb","hash":"b9f40624d22581aaf7e962c516bf13f1e33e52d8","modified":1528284679837},{"_id":"themes/next/.git/objects/a4/aa0ccebe66f4e5f5fb25c82869c2a7a947e1c1","hash":"3edd979ea5ca480b066d023de68b493432da8163","modified":1528284679930},{"_id":"themes/next/.git/objects/b5/55bd977780efe2d78db5355d159a841411b9a1","hash":"99f0be0b9da0780536709cde0663c35ab6a33702","modified":1528284680013},{"_id":"themes/next/.git/objects/b7/ff0a6dbf7cb07d9a7413113b47f13b7a1c528d","hash":"0b3331c8fee2860bf65e4b6fdc4c09134c011e79","modified":1528284679988},{"_id":"themes/next/.git/objects/c0/111c2587723e4bff43ceb7b492a876da3f7963","hash":"fd55ba3b2aed0790f3ea87a53ea0f05c9dc3ce9a","modified":1528284679853},{"_id":"themes/next/.git/objects/a4/a47a3d85e0b7def15cef1e0d0aa51f3c944f42","hash":"8738853ebe38a35c8b107cf601d165da3835b5af","modified":1528284679998},{"_id":"themes/next/.git/objects/bd/19aa8cda2b4ab962c8e3669018d833c11c16b5","hash":"91828b75b29c5169197519dc643a7d4f163a82f1","modified":1528284730715},{"_id":"themes/next/.git/objects/bf/2c11f47f0b83d07021d56c5644775fd742173f","hash":"466b2bd70598b67d424d5b58c4e6a2ffea94d1a4","modified":1528284730719},{"_id":"themes/next/.git/objects/c1/dc826181723b560eb79749f0b5fd9b4b6d9972","hash":"39fbc228605d5e068d1aa7be43b6542de9c50cbc","modified":1528284730725},{"_id":"themes/next/.git/objects/ba/a1d9dd2470ec611d7261328d1782e80c01e5e7","hash":"80b0ac86af043a75076acb4196f48d7f50c5ef12","modified":1528284679756},{"_id":"themes/next/.git/objects/c5/abb3939886cb90caca64f827d6d2fd706a7baf","hash":"b0f4f6ba8428d717da5b37d455be49a3e531daaa","modified":1528284679705},{"_id":"themes/next/.git/objects/bd/2a08f88a699a60275525407c4075e5f60409b2","hash":"1107f5d95d173ae6c84530963e0b24d55a6b84b6","modified":1528284679741},{"_id":"themes/next/.git/objects/c7/38ca8f152a4efdae352d7f221d12f376149974","hash":"7976149267e983d246827c1280412d1a07738621","modified":1528284679781},{"_id":"themes/next/.git/objects/b6/57fb6e8cd50d96ee518e978ee1f661c79e069e","hash":"ca236a9de2781fe7a1fef1799dbbbcd9716f0060","modified":1528284679760},{"_id":"themes/next/.git/objects/c8/74b27c78de3099cd2d4de5576e132f342465f2","hash":"778b43dd3ed2a73f4a1f6b318d0d80713b40b69a","modified":1528284680033},{"_id":"themes/next/.git/objects/ca/039221667dea6017a13ef99807f0c4676eb037","hash":"8cd326d1d984e15f8a4766e01409e5835226e0f2","modified":1528284730702},{"_id":"themes/next/.git/objects/c4/c27c2949a1075fbdfb90b89525781396be6876","hash":"c6290dc5084ee6550517cee7826c37d10b28fb04","modified":1528284680004},{"_id":"themes/next/.git/objects/ca/8678f4d6701499d3ede6e955819195b6f923d4","hash":"9a6c6d42b55c170daef530a3184670d7c481419c","modified":1528284680043},{"_id":"themes/next/.git/objects/ba/aa4b05a4ecfc184e74d8dc653c0aa9fe612379","hash":"ffbe2624d297e140b4501fcd8f637169014b0e31","modified":1528284680002},{"_id":"themes/next/.git/objects/c9/c0a7d7ea46b1ce6d336c272ce4c482542f4d80","hash":"82b2e1ce5f637f5190fc6eb30270ccdb57e0c052","modified":1528284679711},{"_id":"themes/next/.git/objects/cd/d7cd0cfde032debb168c3a1c95b3c9e2e24d4d","hash":"a85a67f70cf35d0d5d598246bf027533790350b8","modified":1528284730736},{"_id":"themes/next/.git/objects/be/d8d5af3fa797d519cd290e4405a878d3613d28","hash":"b768fe3c63b633bf6e0487addafd7bb43b96ece3","modified":1528284680066},{"_id":"themes/next/.git/objects/cc/d04ce02151437e19a8b6b9cee9654603c5cc58","hash":"9f80c74abab70134bc0b5a15ace0af3e37e11251","modified":1528284730747},{"_id":"themes/next/.git/objects/cf/fb6c5de252b021340d81870d3f56b9f34eeef5","hash":"4cecdfe69c7256f469a241ef3d575f4a4366a364","modified":1528284679953},{"_id":"themes/next/.git/objects/cd/5e4fd000efe302d4505c38ec617f64cffe7962","hash":"11e900361d350a326a422f7672c7aa4595de10bc","modified":1528284679962},{"_id":"themes/next/.git/objects/d0/94baf1ee7bee84e1c4ed93056e445342b74e7c","hash":"a9e187ca364d40d7ae18bce9d4fb6975e1812a9d","modified":1528284679916},{"_id":"themes/next/.git/objects/a4/465a0bb24e30476b9e53d4c7ff86a1a6a6bbc1","hash":"a4c37f65aea2c4519401582b7d7c8301da6cd2a6","modified":1528284679960},{"_id":"themes/next/.git/objects/ce/31efd5f8c048d5bf0d87cd1d1865e4eb4299b5","hash":"675cf864cf0fb46c0c437fa1f4a2d46459840cee","modified":1528284679852},{"_id":"themes/next/.git/objects/d0/40876ef5f610717623009a503e2f5d79cbbc49","hash":"2a427f74004aed157ebb81d4f792ae702e97e478","modified":1528284679943},{"_id":"themes/next/.git/objects/cd/6934aff8a1cfd71c21ed2ba6b6ad921e6aa07f","hash":"238335553d1da8c2e66a39253fb408882734f6ab","modified":1528284679717},{"_id":"themes/next/.git/objects/ce/b023ec691ba5308dba2375ba48e142d94c06dc","hash":"e23d3158425231a3d3a76b3aaf0328620d902ff3","modified":1528284679978},{"_id":"themes/next/.git/objects/d3/f5a12faa99758192ecc4ed3fc22c9249232e86","hash":"296451fcac4211d8c3bf9eef6e16139369034d1e","modified":1528284679000},{"_id":"themes/next/.git/objects/d2/490b7a9cba0ba6edb3ea1989eb6893003429ba","hash":"06142e55280c15d21753fe74b19dbd411ddc5994","modified":1528284730729},{"_id":"themes/next/.git/objects/d8/beb3acfa6e3a088d7382dce975174f990fee11","hash":"8b1b939b2cf4a910a6651259b1ef6c0e43dd5e08","modified":1528284679847},{"_id":"themes/next/.git/objects/b4/557da8be10a67f6ed32e3f45dc5e523c5036a5","hash":"5f0ed59c44127521e4d654ce545891ece505d89d","modified":1528284679759},{"_id":"themes/next/.git/objects/b4/f4ae8be26d92cf3ffa57ecae204bd2f64adfa0","hash":"5ac333af7c53748d9ecf73b7aab471a6ada3edcb","modified":1528284679961},{"_id":"themes/next/.git/objects/cf/1b67569d3d87712776a0bb8b9a1fc59fb0bacf","hash":"81c8f436bbf6873ca079f37c0804e93e66c96a08","modified":1528284679816},{"_id":"themes/next/.git/objects/b4/63a237011eef1188a552de4bc9077c4941be41","hash":"acc7fd3c3158d0b6167d862b8eff38d2676b9ef6","modified":1528284679724},{"_id":"themes/next/.git/objects/d3/48f1d3510ef1312ac61cd39d9e0d40e9b7f9fc","hash":"6c96afe4069f179522e096355b7c03c92508f0be","modified":1528284679716},{"_id":"themes/next/.git/objects/dd/a7c8898c429956c9475f014b462d9cff75b8a4","hash":"5676350aa9981cfa843cb3643ca0545d90d05bbe","modified":1528284679715},{"_id":"themes/next/.git/objects/dd/cb389d00cb722bafd0de18f073b474aa0a1861","hash":"795c897707049fa39ff896f9dff7f4797a0b36e6","modified":1528284679788},{"_id":"themes/next/.git/objects/a8/47f804f1886390044113e7a304a86b36dec41a","hash":"3eac97ae03a1168a0bdd70a504b21cc330c07fee","modified":1528284730743},{"_id":"themes/next/.git/objects/d6/447db150340b8550591ce985a40a79b9af27ab","hash":"9248b1aaa3af862ddaff69bf0d81f7dd2ab18b38","modified":1528284680073},{"_id":"themes/next/.git/objects/cf/d94604b1835221d5f0989482ecfa76abd64982","hash":"9d336886198d0a2e5785821c41b9c59dc05b6ff9","modified":1528284730677},{"_id":"themes/next/.git/objects/d7/9d825433c99674195e1f44a96327270ed27726","hash":"1d891c81361eec6f72470dcda8ff64fc9f6d498e","modified":1528284679908},{"_id":"themes/next/.git/objects/de/67221f74f4b518f35250e92c8c7327cdc19e5d","hash":"474060677b02cb1254e932ec9201fe36823f582d","modified":1528284679773},{"_id":"themes/next/.git/objects/de/a364153b96843b7330e6402f9d5c983a5d76de","hash":"ee60d72097d56d886dee87cfd821e810ff25392a","modified":1528284679753},{"_id":"themes/next/.git/objects/a8/79c49bc4c2bbca0aaafac2795bfd77727b31a3","hash":"c88e1b20f71e90e5fa30c2a6fd5250572647b033","modified":1528284679954},{"_id":"themes/next/.git/objects/a8/be02fc44161cdfcc8891ec4a440bf234fc9af8","hash":"e11b6219caf7726f93dd5b12da8a6d4c4faf23a1","modified":1528284679732},{"_id":"themes/next/.git/objects/e0/313781c66e0a6f5e98134f7883c7c927ab4d9b","hash":"24e5a34c6897459608c5fa68d132916b36a572b1","modified":1528284679787},{"_id":"themes/next/.git/objects/e0/87fb9ab6bcdb23fefae6c8785af1f63c3854d3","hash":"2f7065213056b7219ecce2a21364f91c64a28a21","modified":1528284679973},{"_id":"themes/next/.git/objects/df/1b80cd1454f94fd8135714d6e940a8897441ea","hash":"c9a466268cc62c7648b8ba68e2c209194fccf8f1","modified":1528284730684},{"_id":"themes/next/.git/objects/d9/193ab1b61f9dd130051cac1c0db74c7f6b967b","hash":"f37a74c60685225e9c8705acdd2dabb8529c988d","modified":1528284680034},{"_id":"themes/next/.git/objects/df/90083e0ed8e2807fa42c089b8247506773134e","hash":"af71210cebdf36121e2dac55a7d57ccbf8f9b90d","modified":1528284679922},{"_id":"themes/next/.git/objects/e1/20376d8d51e21c8399515f275189aada60251d","hash":"06217a24e98e5ef570f1fecb6737c4939f0dcc90","modified":1528284679858},{"_id":"themes/next/.git/objects/e3/d6312c38cd54c043e57f59838aa9e7434e9fb1","hash":"6b9f5a7608ef169a4bc2e44d9658cc111cff39de","modified":1528284679834},{"_id":"themes/next/.git/objects/e3/95d0e07ea0f5fe8fcf369e71f144b86a188ec7","hash":"1172c61376c1b49e353e82cad99bcca5f78fa8e0","modified":1528284679809},{"_id":"themes/next/.git/objects/d9/a283617ed052b620b03492aefee8eb306a3c7f","hash":"4e96949a1ea9cc4ce650cc760a0f07bb3a493e1c","modified":1528284679817},{"_id":"themes/next/.git/objects/e3/8cc6f33b52e69cd68eb9dd9e4092ab13af3675","hash":"30a7baf04536870bf816eb8846e03eb9d4ca978b","modified":1528284680012},{"_id":"themes/next/.git/objects/e2/ed0bf3b3b66e8a77a52c16606b8a84bf008ab8","hash":"44cd97c7d4d22ba82f06a944f07eeced901b4288","modified":1528284679952},{"_id":"themes/next/.git/objects/e5/67d0602cb9970f291ec2012ad500aaf5c7f381","hash":"c29d24e1dcf202b9bcbf08724e21d238793e26ed","modified":1528284679850},{"_id":"themes/next/.git/objects/e6/21efca17b3045d69bae51c40414ac204e035af","hash":"9e119abddf64f0de74a169dc7b9e91a42222556c","modified":1528284679883},{"_id":"themes/next/.git/objects/e3/eb3cbc5320dd34dad6a87d40b162de82f21a0f","hash":"2819dbed431dc9c790510e290e5ec860092caf80","modified":1528284679905},{"_id":"themes/next/.git/objects/e6/f2404f7b229b53484e2c64c2043263f0083d64","hash":"c937f7a7d25d59d1346750a76ed40924f84fd3c0","modified":1528284679757},{"_id":"themes/next/.git/objects/e5/999ebeeb3493e221cfd899c833b1cf557d3153","hash":"e7637b5c34e1c19f37c67cdc0c35f9220ed05bee","modified":1528284679728},{"_id":"themes/next/.git/objects/eb/6ce327226583c565ca0cf254ac448d6a1f9b7f","hash":"514b8729e11c684ab1d4824e5acff09644cbf2d8","modified":1528284679951},{"_id":"themes/next/.git/objects/eb/908d0ffc188da9a735aa2ac70a9edeb1dde9dd","hash":"99b6eda9c6a1965354a06dfbdc3903f537595af0","modified":1528284679898},{"_id":"themes/next/.git/objects/e9/f5dc82a0ce9c53ac020af74bc1696cc4d24e46","hash":"efbb0def8deb71a78b29228f4942cc20b6261cae","modified":1528284730721},{"_id":"themes/next/.git/objects/eb/8e8cc69f37e36068af007070accc67f4107a48","hash":"58d93b7013468912525c83acaae425db44681d0f","modified":1528284679731},{"_id":"themes/next/.git/objects/ea/a3ade8388ea9662bfc760e949706c7762d81af","hash":"54c18f92325cef3a6a79339001c6f20e89c0ef64","modified":1528284679876},{"_id":"themes/next/.git/objects/e9/05aeea93385183b8fd3ea439444b701e1ac330","hash":"7f6445aee4368b086d2fcdabdd69493d5cdd8f6f","modified":1528284679919},{"_id":"themes/next/.git/objects/ed/45f1864464d445c4c39bdfb649626957dfa431","hash":"3319c7abe63ab048fc55c9328c04c4ae1a7efb53","modified":1528284680058},{"_id":"themes/next/.git/objects/f3/be57a6248a8c36e48d65b79dc44be001747ea7","hash":"6441afeebdd6bf74e2e877b4c094fa7f5f3c76c1","modified":1528284730688},{"_id":"themes/next/.git/objects/ec/9d14cfa24898da93b2af0d30966b0825ed652c","hash":"52a375618951c805679b0aad9818974556ee0ada","modified":1528284679000},{"_id":"themes/next/.git/objects/f4/252bd9e2a568db0b0d56efe986b2d7a732ab5e","hash":"5c38bbaffcfad3ed9d62f50262d59617a82edfb6","modified":1528284679764},{"_id":"themes/next/.git/objects/d5/aca636d0febffe5ef43e7b416c417f3fcef32d","hash":"1c5beeaba2a6d100f412c1720e42d67ff41a036d","modified":1528284679889},{"_id":"themes/next/.git/objects/d5/aeeab09ae656f479619c049ecbcb58ec8843f0","hash":"818ea74df02dad4919a08a768fc25450d175e719","modified":1528284730755},{"_id":"themes/next/.git/objects/f5/df6041a0dbc035b63573ed94294e9c5598884f","hash":"a4adfc5d6864665535a280cae8d9754ba5cd4baf","modified":1528284730679},{"_id":"themes/next/.git/objects/a8/2408e2892ac27975f1654872c733e9417ca1a7","hash":"ff9d81dc944c388576a0957b20766efe3e4dfd63","modified":1528284679704},{"_id":"themes/next/.git/objects/de/29cc81eef3900b3f94ba2d20afa9d874994bdf","hash":"742ec1094ec79bd576e8af199da567e1de7b476d","modified":1528284679790},{"_id":"themes/next/.git/objects/da/1566f5c54807896d1d3145ba8eb838d4e17819","hash":"7ced685da9a43a1bf29a6e09b1e9bd8612e760c8","modified":1528284679839},{"_id":"themes/next/.git/objects/ef/bf8d217bc5b9d8b2948a91056531df54d1560d","hash":"a0ac01d10592aeafde39954ed7c6ac6f71c18eeb","modified":1528284730686},{"_id":"themes/next/.git/objects/da/81f45661fcdd611ffe6f12e68b65f2d31b1773","hash":"2e200cd09d41f79e9518c8256b91db828a3af07e","modified":1528284679748},{"_id":"themes/next/.git/objects/ee/183e73d49224299c22ce8b2bb28b61d5b4a531","hash":"a16d5bfaac12a9273680a83efb31f816192f43f4","modified":1528284679915},{"_id":"themes/next/.git/objects/f7/3ca296b6473c653365aff93366565d3d02b002","hash":"021ea021f4f8df48958dc4eb5d862b10c743fabd","modified":1528284679888},{"_id":"themes/next/.git/objects/ee/269d9920d38a6e6a85d538658f87ce1ee4b235","hash":"f9054012ba74a52e2a6b29dceac9a61357432bd5","modified":1528284730674},{"_id":"themes/next/.git/objects/da/8449692166a3db48b234a9de9021047ad2f163","hash":"faa7c05abe48b0b08e22c6bb68ecc1252a4197e1","modified":1528284679902},{"_id":"themes/next/.git/objects/ee/98ce52b69fc7bb50ab50ce4e68d39efc79811a","hash":"b9fba528392c9efd99f0659bb535fba242a7d022","modified":1528284679812},{"_id":"themes/next/.git/objects/f8/599a2eeec68b5eac70edd00750655b57c3360b","hash":"d24c1d7f11bf8f18ff07f18adaf6deb0287bd903","modified":1528284679815},{"_id":"themes/next/.git/objects/f8/9d31aa3c956910a335d05094eeb59c7cbf3d64","hash":"e71ceb24e5cb9c5e6ed83694f588ea0dece3da26","modified":1528284679830},{"_id":"themes/next/.git/objects/f9/6ca9d072afae9355f05abf517e8505f2cda65e","hash":"c35e4ce3a7655752659c9feca9b5d2a45503dc07","modified":1528284730730},{"_id":"themes/next/.git/objects/fa/5f66eebcd923a824fb3da954e704611973bfe1","hash":"a60ea05a52c7e3008ad62e0c6558cbd445fa7d1e","modified":1528284679939},{"_id":"themes/next/.git/objects/ec/13ccb2508c506da095613eae2fbc9ef696118b","hash":"77a9d62e8957418ad023e48f51eaf386e5d6de91","modified":1528284679968},{"_id":"themes/next/.git/objects/d5/8c6715eeba16df2ad40eccc01c1d9d450f944f","hash":"53159d832caa2c729f6cd8a63cea835002b0e230","modified":1528284679967},{"_id":"themes/next/.git/objects/fa/708f29e2f7fe9fe1411cbd6fb9a3d6f1b2871a","hash":"4d6e913166fb6a22bb0ce1fff472086b8512edde","modified":1528284679869},{"_id":"themes/next/.git/objects/f6/8ceb1779bbb53fa1f87f97b0378b407a99eb8a","hash":"99cf263fb5090181a76c6c1e4452216d8d5273c8","modified":1528284679878},{"_id":"themes/next/.git/objects/f6/7da7830359b44de9ab6c817f86cd677bfc2cb2","hash":"e0d95e967dd781dcad80611f919444c1b476cba4","modified":1528284679719},{"_id":"themes/next/.git/objects/ff/38b024dd02023f0abfc246fc4639a08e5b1428","hash":"76f038f33736bc4392d96fb2b278cb8389f3c3f0","modified":1528284679826},{"_id":"themes/next/.git/objects/a8/ae50e4e9dc74d367a2108c6d26e400150a53ba","hash":"930839414e38ab835b34d4380991d6454d7da7cc","modified":1528284679904},{"_id":"themes/next/.git/objects/fd/2b1892c3c4691c795cffda0bd209e0ebca6b50","hash":"2fba385c8ffa7cc38d4ebfe5cf17cc6a4533238d","modified":1528284679928},{"_id":"themes/next/.git/objects/f5/fc378dcedda214509db3831d25ac9ed88edf95","hash":"a25d50911bd30c19819bc7607ef68c82f74dbf7c","modified":1528284679893},{"_id":"themes/next/.git/objects/fd/393d22d32bcaacf3ea1a95da7a8738071a0f64","hash":"8ff0c8fc3e530d6d9eb1c4306470e7411f629d32","modified":1528284679783},{"_id":"themes/next/.git/objects/fe/581c7590a53466067cc4888c008670895cbbf1","hash":"9e81ea5ca1035328526df1b9af907bebf2117bfd","modified":1528284680026},{"_id":"themes/next/.git/objects/fd/1569187a4bfe5ef229f64792f1f4cc00c1e2c0","hash":"7ebe65f3ae2e3894f923ff118a9e90ca38aebd7b","modified":1528284679957},{"_id":"themes/next/.git/objects/fe/6545dd9e3f656bae16eac1613cec59f0125527","hash":"8ff9ab85d6a4352891c2198586689ccb5a8a84b3","modified":1528284679913},{"_id":"themes/next/.git/objects/f6/a83a53908f17ec1d6a5477af3aaedeaca0da32","hash":"2fb8b3cf89e6fa986f179cc3cf150a632dd5d654","modified":1528284730718},{"_id":"themes/next/.git/objects/fe/d59dd1a28ee45093b0e09bd5ccb301e6fbcdbb","hash":"7b594587f46520360ae7b13587d670484d50d024","modified":1528284730696},{"_id":"themes/next/.git/objects/d4/b060a48014a6094da9e74f379b0d2e57d2c4a8","hash":"7b7e02656ccf0b3159b2e81a8485fb076713b964","modified":1528284679752},{"_id":"themes/next/.git/objects/d4/faac70ea71519ea8f4c0aa0510c1d9a492027c","hash":"b7b71703dfe6ea2238b100094daa319732bdf0c9","modified":1528284680009},{"_id":"themes/next/.git/objects/fd/c8d1849c21be7d7087202270319eb91b952249","hash":"ddd015225a884f275c25a6418af310ec4021af84","modified":1528284679823},{"_id":"themes/next/.git/objects/d4/a456e6bb70cf137ce8d065826b78916771654e","hash":"3e394527d9ab24d337055e0a760a3f2d1fd194c4","modified":1528284679882},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1505087736761},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1505087736762},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1505087736797},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1505087736794},{"_id":"themes/next/.git/objects/fd/eebf2fea6428cd4ba6649feb2f8708ed403e30","hash":"f0697b34fe46b9491a01cb6a37022366e6da1d6d","modified":1528284730676},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1505087736795},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1505087736803},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1505087736804},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1505087736801},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1505087736806},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1505087736808},{"_id":"themes/next/.git/objects/c3/54253503a3df51487f31bed2f3e512a0637af9","hash":"5ca0f24b108adeeb32030965d8349011f9ce1cbc","modified":1528284679970},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1505087736772},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1505087736771},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1505087736800},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1505087736798},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1505087736770},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1505087736810},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1505087736807},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1505087736813},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1505087736815},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1505087736774},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1505087736817},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1505087736822},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1505528229971},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1505087736841},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1505087736812},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"602104d7ac47f7888d97e810419e58593a79e8ba","modified":1505087736821},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1505087736776},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1505087736779},{"_id":"themes/next/.git/objects/d2/cbe2644e0aecae78dce487841592273730846f","hash":"0814ed68a4e960098dd44499d11f765977e9e59f","modified":1528284679842},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1505087736836},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"92ea45b877b1fec2010c7b409f121c986ee5075b","modified":1505087736818},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1505087736777},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1505087736837},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1505087736839},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1505087736981},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1505087737099},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1505087737110},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1505087737111},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1505087737153},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"82fee688910efc644d3d1c3305c6ae28ba3f38f9","modified":1505087737108},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1505087737148},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1505087737151},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1505087737150},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1505087737178},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1505087737147},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1505087736983},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1505087737106},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1505087736986},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1505087736988},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1505087737030},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"38a9f43973704afe7e8ca50f35a25940ea96e3cf","modified":1505087737028},{"_id":"themes/next/source/css/_variables/base.styl","hash":"a627633d3bb70b8501572b18037def478beb7017","modified":1505087737035},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1505087737188},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1505087737183},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1505087737184},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"89f88b9c9a191dd980f799fc36b83b63290d3ac9","modified":1505087737033},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1505087737189},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1505087737190},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1505087737193},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1505087737194},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1505087737200},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1505087737202},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1505087737198},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1505087737195},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1505087737204},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1505087737205},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1505087737208},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1505087737206},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1505087737209},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1505087737201},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1505087736787},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1505087736790},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1505087736784},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1505087737210},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1505087737197},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1505087737226},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1505087737227},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1505087737232},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1505087737186},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1505087737234},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1505087737235},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1505087737212},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1505087737214},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1505087737215},{"_id":"themes/next/.git/objects/0f/c37de5b4782f9470de18016b3b8d5472d44669","hash":"4861d03a0b98ec65a9301915078043d7c9e93217","modified":1528284680111},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1505087737065},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1505087737064},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1505087737068},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1505087737070},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1505087737071},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1505087737067},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1505087737078},{"_id":"themes/next/source/js/src/post-details.js","hash":"50fa390554f0fb467d8eb84ac8eff2cffb13fe67","modified":1505087737074},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1505087737079},{"_id":"themes/next/source/js/src/utils.js","hash":"f90c7611dc665b5e321cb81c0bd689445bab438a","modified":1505087737081},{"_id":"themes/next/source/js/src/motion.js","hash":"6d34f2a6ea6d73f7715d00f8b175854cd02baa36","modified":1505087737073},{"_id":"themes/next/.git/objects/6a/cea6f05881f419fa44f55de66bbf7a4603fac8","hash":"ef80d4660b8546d76c5bdd68f1839dc6ca2a9369","modified":1528284680116},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1505087737137},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1505087737142},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1505087737140},{"_id":"themes/next/.git/objects/8c/029aada6a552ef1017e2eec47fc0a7db3c3f2e","hash":"9931da2b9b98999270876d19a46864f85670a605","modified":1528284679996},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1505087737139},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1505087737181},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"3e1fd0ef1fbecfbe5109e4f7309ea1f106b565a6","modified":1528284730757},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1505087736572},{"_id":"themes/next/.git/objects/d7/534c975b2a23edd3bd0b3f7e8c4be104f2a276","hash":"fe71ec21f56645c7ab444ef8a7792ff18f7d67d4","modified":1528284680025},{"_id":"themes/next/.git/objects/f0/d78a9e2e8a48ffef0b848a9b48bbfb589befd3","hash":"e956f9ce204e0d541ddeec07552ae7cf54c8552f","modified":1528284680053},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1505087736878},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1505087736880},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"b0e2a0e27a32f72cb283fe4b33d010d485113379","modified":1505087736874},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1505087736875},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1505087736942},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1505087736877},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1505087736904},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1505087736833},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1505087736835},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"c9b6e70e67a0b2c41a03181302379afdc26da5b6","modified":1505087736969},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"a509016ac0227a1903d7f0ca3a825cf9ac7fde33","modified":1505087736991},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1505087737093},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1505087737096},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1505087737098},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1505087736977},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1505087736971},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"9a45ed506274f655b11995c408cc566b16dada79","modified":1505087736974},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1505087737009},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1505087737015},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1505087737013},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1505087736973},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1505087737019},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1505087736976},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1505087736979},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"d4cf54b33e1bb8746a77ce2446d581d01be5329d","modified":1505087737020},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1505087737024},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1505087737022},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1505087737009},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1505087737026},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1505087737011},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"24617c40a0d9b5e516d9500a45bc47cb995f325e","modified":1505087737025},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1505087737114},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1505087737117},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1505087737116},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1505087737120},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1505087737113},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1505087737132},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1505087737121},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1505087737134},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1505087736997},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1505087736993},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1505087737135},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1505087737001},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1505087736995},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1505087736998},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1505087737000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1505087737003},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1505087737155},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1505087737158},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1505087737156},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1505087737223},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1505087737224},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1505087737076},{"_id":"themes/next/source/images/alipay.jpg","hash":"73b0c00d624cac437fc63bda901edfb3c82bd2c2","modified":1505117326885},{"_id":"themes/next/.git/objects/70/1ab200b7e1611431ddd2535458a85aa37ba26d","hash":"9edc8eca9d7c517cab164c6c519fe53bbc7aef96","modified":1528284680103},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1505087737145},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1505087737144},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1505087737094},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1505087737230},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"e46226ab9b4790267ec72e96f367aff39ba55495","modified":1505087736572},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1505087737174},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1505087737176},{"_id":"themes/next/.git/objects/pack/pack-0dae690732eade185a460f45253c58ef3e7f30fe.idx","hash":"bee4d2278ed37ad2159dbff158be33045f859e78","modified":1505087736280},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1505087736882},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1505087736891},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1505087736901},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1505087736896},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1505087736899},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1505087736894},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1505087736893},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1505087736898},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1505087736884},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1505087736902},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1505087736889},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1505087736886},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1505087736906},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1505087736885},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1505087736910},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1505087736909},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1505087736913},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"37c7d10289df2deded057545ece3f652dbd18757","modified":1505087736911},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1505087736919},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1505087736915},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1505087736918},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1505087736922},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1505087736920},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1505087736923},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"2cb09973d29a8e34e2a3425ac6e0938296970d8e","modified":1505087736924},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1505087736888},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1505087736907},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1505087736916},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfe6d162b4647aeadee109d06bb314ea252f6904","modified":1505087736926},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1505087737085},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1505087737086},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1505087737017},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1505087737088},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1505087737089},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1505087737091},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1505087736932},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1505087736931},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1505087736928},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1505087736933},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1505087736929},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1505087736935},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1505087736936},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1505087736938},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1505087736945},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1505087736947},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"8e00d9a0bdf35ffc0a7fa387fa294b953c2d28fc","modified":1505087736939},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1505087736950},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1505087736941},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1505087736944},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1505087736948},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1505087736956},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1505087736953},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"962b654f8f7cbd18a298126a403d236ed4540516","modified":1505087736951},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1505087736954},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1505087736963},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1505087736959},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1505087736961},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1505087736965},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1505087737005},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1505087736958},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"37e406ec42b7a53c72395bdbaa434270019e7179","modified":1505087736967},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1505087737006},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1505087736966},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1505087736962},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1505087737123},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1505087737129},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1505087737125},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1505087737126},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1505087737128},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1505087737131},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1505087737165},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1505087737161},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1505087737173},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1505087737103},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1505087737220},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1505087737169},{"_id":"themes/next/.git/objects/pack/pack-0dae690732eade185a460f45253c58ef3e7f30fe.pack","hash":"63fd1d0c5f4f2207f8616e8bef6619720eb5c882","modified":1505087736346},{"_id":"public/404.html","hash":"2e8b065d0b157dc27adc03b7b0a43fab37b944eb","modified":1528450456454},{"_id":"public/tags/index.html","hash":"986dcbe2c0daa38482abcfce6f883c152d3676a5","modified":1528450456454},{"_id":"public/archives/2018/05/index.html","hash":"aa1971f1536aebee61e79015f6a07fdd715eff83","modified":1528426906974},{"_id":"public/about/index.html","hash":"78f3c04a83fd1c542e1f89cb7d80315a0196e4b3","modified":1528450456454},{"_id":"public/2018/06/06/git/index.html","hash":"8e33290c7791fa8e58933edc7561da7a6af17914","modified":1528450456454},{"_id":"public/2018/05/26/一年后的悸动/index.html","hash":"ebc96f72f713615cbad1964640d615fa92b8dce4","modified":1528426906975},{"_id":"public/2018/05/14/大三运动会/index.html","hash":"6382dc4b071e969d71a4534a946a3ccce98fea5b","modified":1528426906975},{"_id":"public/2017/09/17/spring/spring3/index.html","hash":"124fe59888e062ba146e47e58bc13d4ee64fbe80","modified":1528450456454},{"_id":"public/2017/09/17/spring/spring2/index.html","hash":"3d811552ffee2e6c37f78d3ae0e84fa5d8368247","modified":1528450456454},{"_id":"public/archives/index.html","hash":"898e26a6782c114881eda7ca195c51c89e9ab3d8","modified":1528450456455},{"_id":"public/2017/09/15/内心的平静/index.html","hash":"d2f444105b537a8103c3ee0d77f25e9b1119b3d1","modified":1528450456455},{"_id":"public/archives/2017/index.html","hash":"0cfb5fc73130fa502a5e3443ba4f9d0acd4a3dc9","modified":1528450456455},{"_id":"public/archives/2018/index.html","hash":"ec60eea0416e26dd2323b5754bed3c6162777e18","modified":1528450456454},{"_id":"public/archives/2017/09/index.html","hash":"1933a60c8138a991e55df26aa9ae9596a5fda308","modified":1528450456455},{"_id":"public/index.html","hash":"040624b890daaf5b37de331e03815128324c3d1e","modified":1528450456455},{"_id":"public/archives/2018/06/index.html","hash":"3174226d443c5229dff54511d97ed65235cf3f6a","modified":1528450456454},{"_id":"public/categories/index.html","hash":"66ab7d2325b7200b5d89ff859974e8d6a7d3d34d","modified":1528450456454},{"_id":"public/categories/spring/index.html","hash":"3bf0a4ab8b5348ffff25630a27257309ebf582c3","modified":1528450456454},{"_id":"public/categories/随想/index.html","hash":"e50df653c5aa00a1677366f844af327bec64c56c","modified":1528450456454},{"_id":"public/categories/情感-大学/index.html","hash":"90dc1a81ab06a92c4b1556065793959135491fde","modified":1528426906995},{"_id":"public/tags/JavaEE框架/index.html","hash":"04730dbf0d7869f38005eb29ee71590623839153","modified":1528450456454},{"_id":"public/2018/06/08/test/index.html","hash":"777742ac1b68cc471012ce9e60ade2d06050d25c","modified":1528426906995},{"_id":"public/2017/09/17/spring/spring1/index.html","hash":"8b5f53540fcbc668e08e3e8956e698cc6ea1f4f6","modified":1528450456454},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1528426907005},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1528426907006},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1528426907006},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1528426907006},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1528426907006},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1528426907006},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1528426907006},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1528426907006},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1528426907006},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1528426907006},{"_id":"public/images/favicon1.ico","hash":"5c7eeda6d3dd7935dcb844a6a44c520f970acd6d","modified":1528426907006},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1528426907006},{"_id":"public/images/favicon.ico","hash":"fa11fca8d4119b9e0b35ae7751449f5f2888682a","modified":1528426907006},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1528426907006},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1528426907006},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1528426907006},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1528426907006},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1528426907006},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1528426907006},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1528426907006},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1528426907006},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1528426907006},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1528426907006},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1528426907006},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1528426907006},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1528426907007},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1528426907007},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1528426907007},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1528426907007},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1528426907007},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1528426907007},{"_id":"public/images/tou.jpg","hash":"c762f67769fd326997242384e1cc0feae6580505","modified":1528426907943},{"_id":"public/images/wechat.png","hash":"874a371811506f4ea3c16c44c7e8ae4896b19118","modified":1528426907950},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1528426907963},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1528426907963},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1528426907968},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1528426907968},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1528426907968},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1528426907968},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1528426907968},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1528426907968},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1528426907968},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1528426907969},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1528426907969},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1528426907969},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1528426907969},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1528426907969},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1528426907969},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1528426907969},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1528426907969},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1528426907969},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1528426907969},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1528426907969},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1528426907970},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1528426907970},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1528426907970},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1528426907970},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1528426907970},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1528426907970},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1528426907970},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1528426907970},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1528426907970},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1528426907970},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1528426907970},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1528426907970},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1528426907970},{"_id":"public/js/src/motion.js","hash":"da146caf488078a634d961debf2a71ce4106018c","modified":1528426907971},{"_id":"public/js/src/post-details.js","hash":"0693695a9512641daff63d99da772625a058ab18","modified":1528426907971},{"_id":"public/js/src/utils.js","hash":"2917c39c75b14b6dab7e1c46ab4d87b4df9fcd5d","modified":1528426907971},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1528426907971},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1528426907971},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1528426907971},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1528426907971},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1528426907971},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1528426907971},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1528426907971},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1528426907971},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1528426907971},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1528426907971},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1528426907971},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1528426907971},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1528426907971},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1528426907971},{"_id":"public/css/main.css","hash":"e61d5b9739dd81705ef9ac6cbd5190913964e3e7","modified":1528426907971},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1528426907972},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1528426907972},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1528426907972},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1528426907972},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1528426907972},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1528426907972},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1528426907972},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1528426907972},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1528426907972},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1528426907972},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1528426907972},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1528426907972},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1528426907972},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1528426907972},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1528426907972},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1528426907972},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1528426907972},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1528426907972},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1528426907972},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1528426907973},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1528426907973},{"_id":"public/images/alipay.jpg","hash":"73b0c00d624cac437fc63bda901edfb3c82bd2c2","modified":1528426908011},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1528426908062}],"Category":[{"name":"随想","_id":"cji5dwz0y0007yodkazle13li"},{"name":"情感/大学","_id":"cji5dwz160009yodkwl868hm1"},{"name":"spring","_id":"cji5dwz7r000hyodkgr6ce4se"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\"\n          charset=\"utf-8\" homePageUrl=\"/\"\n          homePageName=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","date":"2018-06-06T11:09:01.270Z","updated":"2017-09-11T07:49:14.930Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cji5dwyvd0000yodkywt7c7tt","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>","site":{"data":{}},"excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n  <link rel=\"stylesheet\" type=\"text/css\" href=\"https://qzone.qq.com/gy/404/style/404style.css\">\n</head>\n<body>\n  <script type=\"text/plain\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"/\" homepagename=\"回到我的主页\">\n  </script>\n  <script src=\"https://qzone.qq.com/gy/404/data.js\" charset=\"utf-8\"></script>\n  <script src=\"https://qzone.qq.com/gy/404/page.js\" charset=\"utf-8\"></script>\n</body>\n</html>"},{"title":"分类","date":"2017-09-11T01:40:57.000Z","type":"categories","categories":"java","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-09-11 09:40:57\ntype: \"categories\"\ncategories: java\n---\n","updated":"2017-09-11T08:32:21.651Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cji5dwz0p0002yodk611o9mlt","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2017-09-11T01:42:33.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-09-11 09:42:33\n---\n","updated":"2017-09-11T08:47:22.882Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cji5dwz0t0004yodkrd3h6iyj","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"我本微末凡尘，却也心向天空","date":"2017-09-11T01:42:41.000Z","_content":"\n我是一个普通的人，也没什么厉害的地方。\n有时懒惰，有时勤快。\n有时安静，有时吵闹。\n我一直认为人是有多面性的，你所看到的只是他的一部分\n想做一个温柔的人，温柔的对待这个世界\n告诉自己：不要随意评价一个人，你又不了解他，凭什么批判他。\n\n这么多年，多亏生命中出现的贵人，教会了我很多，让我想成为更好的自己。\n一同学评价我：外表文静，内心狂野。\n我觉得很贴切，喜欢做一些很大胆的事，有的做了，有的没做，比如在操场躺着睡一晚就没去做。\n另一同学评价我说：只适合做老公。（连女朋友都找不到，哪来的老婆）这是要注孤生吗233333\n希望自己: **不念过去，不畏将来**\n\n\n\n\n\n","source":"about/index.md","raw":"---\ntitle: 我本微末凡尘，却也心向天空\ndate: 2017-09-11 09:42:41\n---\n\n我是一个普通的人，也没什么厉害的地方。\n有时懒惰，有时勤快。\n有时安静，有时吵闹。\n我一直认为人是有多面性的，你所看到的只是他的一部分\n想做一个温柔的人，温柔的对待这个世界\n告诉自己：不要随意评价一个人，你又不了解他，凭什么批判他。\n\n这么多年，多亏生命中出现的贵人，教会了我很多，让我想成为更好的自己。\n一同学评价我：外表文静，内心狂野。\n我觉得很贴切，喜欢做一些很大胆的事，有的做了，有的没做，比如在操场躺着睡一晚就没去做。\n另一同学评价我说：只适合做老公。（连女朋友都找不到，哪来的老婆）这是要注孤生吗233333\n希望自己: **不念过去，不畏将来**\n\n\n\n\n\n","updated":"2017-09-18T07:54:54.398Z","path":"about/index.html","comments":1,"layout":"page","_id":"cji5dwz0x0006yodkd226umm9","content":"<p>我是一个普通的人，也没什么厉害的地方。<br>有时懒惰，有时勤快。<br>有时安静，有时吵闹。<br>我一直认为人是有多面性的，你所看到的只是他的一部分<br>想做一个温柔的人，温柔的对待这个世界<br>告诉自己：不要随意评价一个人，你又不了解他，凭什么批判他。</p>\n<p>这么多年，多亏生命中出现的贵人，教会了我很多，让我想成为更好的自己。<br>一同学评价我：外表文静，内心狂野。<br>我觉得很贴切，喜欢做一些很大胆的事，有的做了，有的没做，比如在操场躺着睡一晚就没去做。<br>另一同学评价我说：只适合做老公。（连女朋友都找不到，哪来的老婆）这是要注孤生吗233333<br>希望自己: <strong>不念过去，不畏将来</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<p>我是一个普通的人，也没什么厉害的地方。<br>有时懒惰，有时勤快。<br>有时安静，有时吵闹。<br>我一直认为人是有多面性的，你所看到的只是他的一部分<br>想做一个温柔的人，温柔的对待这个世界<br>告诉自己：不要随意评价一个人，你又不了解他，凭什么批判他。</p>\n<p>这么多年，多亏生命中出现的贵人，教会了我很多，让我想成为更好的自己。<br>一同学评价我：外表文静，内心狂野。<br>我觉得很贴切，喜欢做一些很大胆的事，有的做了，有的没做，比如在操场躺着睡一晚就没去做。<br>另一同学评价我说：只适合做老公。（连女朋友都找不到，哪来的老婆）这是要注孤生吗233333<br>希望自己: <strong>不念过去，不畏将来</strong></p>\n"}],"Post":[{"title":"内心的平静","date":"2017-09-15T09:22:33.000Z","_content":"\n\t有时候，特别是刚睡醒时，整个人会进入一个状态：内心特别平静，不想说话，整个世界仿佛只有我一个人，能更温柔的对待每一个人。\n\t我很喜欢这种状态。","source":"_posts/内心的平静.md","raw":"---\ntitle: 内心的平静\ndate: 2017-09-15 17:22:33\ncategories: 随想\ntags:\n---\n\n\t有时候，特别是刚睡醒时，整个人会进入一个状态：内心特别平静，不想说话，整个世界仿佛只有我一个人，能更温柔的对待每一个人。\n\t我很喜欢这种状态。","slug":"内心的平静","published":1,"updated":"2017-09-17T07:49:18.696Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cji5dwz0r0003yodkedhr828l","content":"<pre><code>有时候，特别是刚睡醒时，整个人会进入一个状态：内心特别平静，不想说话，整个世界仿佛只有我一个人，能更温柔的对待每一个人。\n我很喜欢这种状态。\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<pre><code>有时候，特别是刚睡醒时，整个人会进入一个状态：内心特别平静，不想说话，整个世界仿佛只有我一个人，能更温柔的对待每一个人。\n我很喜欢这种状态。\n</code></pre>"},{"title":"git","date":"2018-06-06T13:08:13.000Z","_content":"[TOC]\n# 本地创建一个git仓库\n1. 新建文件夹\n2. 进入文件夹\n3. 使用git init命令初始化一个git仓库\n4. 进行文件的编写\n5. 使用git add &lt;file&gt;添加文件到暂存区\n6. 使用git commit -m \"wrote a readme file\",将文件提交到版本库。\n<!--more-->\n\n## 常用命令\n+ git status 查看工作区的状态\n+ git log 显示从最近到最远的提交日志\n\t+ --pretty=oneline 可以简化输出内容\n\t+ --graph 可以看到分支合并图。\n\t+ 最实用的写法\n\t```\n    git log --graph --pretty=oneline --abbrev-commit\n\t```\n+ 版本回退\n\t+ git reset --hard HEAD^ 　　　回退到上一个版本\n\t>(head^^回退上两次版本)（head~100 回退上一百次版本）\n\t+ git reset --hard 454cbc4  　　回退到commit id为454cbc4的版本，commit id不必输全，只要有唯一辨识度即可。 \n\t>HEAD指向的版本就是当前版本(指向最后一次提交的结果)，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id（版本号，输入部分即可）\n+ git reflog 记录了你的每一次命令\n>Git的版本回退速度非常快，因为Git在内部有个指向当前版本的HEAD指针，当你回退版本的时候，Git仅仅是把HEAD指向你想回退的版本，然后顺便把工作区的文件更新了。所以你让HEAD指向哪个版本号，你就把当前版本定位在哪。\n注意：所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。\n\n\ngit add -u\n将当前已跟踪且已修改文件更新\n\n### 撤销更改\n###### 丢弃工作区的修改\n```\ngit checkout -- file 丢弃工作区的修改\n```\n这里分两种情况：\n1. 文件只是在工作区做了修改，还未添加进暂存区中，使用*git checkout -- file*，file将回到和版本库一模一样的状态。\n2. 文件已经添加到暂存区后，又做了修改，file将回到添加到暂存区后的状态。\n\n###### 撤销暂存区的修改\n```\ngit reset HEAD file 撤销暂存区的修改\n```\n将暂存区中的file文件删除，file文件回到未add时的状态\n\n### 删除文件\n```\nrm test.txt 从工作区删除文件\n```\n这时，工作区和版本库就不一致了。\n我们有两种选择：\n1. 把版本库中的该文件也删除,使工作区和版本库一致\n```\ngit rm test.txt\ngit commit -m \"\"\n```\n2. 用版本库中的该文件还原工作区的该文件\n```\ngit checkout -- test.txt\n```\n\n### 创建与合并分支\n+ git branch 查看分支\n\n+ git branch name 创建分支\n\n+ git branch -d name 删除分支\n\n+ git branch -D name 强行删除一个没有被合并过的分支\n\n+ git checkout name 切换分支\n \n+ git checkout -b name 创建分支并切换到该分支\n\n+ git merge name 合并指定分支到当前分支\n\n+ 创建远程origin的dev分支到本地\n```\ngit checkout -b dev origin/dev\n```\n\n### 远程仓库\n+ 将本地的仓库和远程库关联起来\n```\ngit remote add origin(远程库的名字，可以自定义) git@github.com:michaelliao/learngit.git\n```\n\n+ 删除已关联的GitHub远程库\n```\ngit remote rm(remove) origin\n```\n\n+ 将本地的masetr分支内容推送到远程库的master分支\n```\ngit push (-u) origin master\n```\n由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送到远程库的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。\n\n+ 把本地分支推送到远程分支\n```\ngit push origin local_branch:remote_branch \n```\n\n+ 从远程库克隆一个仓库\n```\ngit clone git@github.com:michaelliao/gitskills.git\n```\n+ 查看远程库的信息\n```\ngit remote\n```\n+ 显示更详细的信息\n```\ngit remote -v\norigin  git@github.com:michaelliao/learngit.git (fetch)\norigin  git@github.com:michaelliao/learngit.git (push)\n```\n如果没有推送权限，就看不到push的地址。\n\n+ 推送分支\n```\ngit push origin branch_name\n```\n将本地的branch_name分支推送到远程库的branch_name分支\n\n### 分支管理策略\n通常，合并分支时，如果可能，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。\n\n如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。\n\n```\ngit merge --no-ff -m \"merge with no-ff\" dev\n```\n合并分支时，加上--no-ff参数就可以用普通模式合并（禁用Fast  forward模式），合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。\n\n不用--no-ff，实际上只是将master的指针update成dev分支而已，用的还是dev的commit ID，而使用--no-ff之后，则是重新commit了一哈，有了新的commit ID.\n简单地说就是 -no-ff 模式进行了一次新的 git commit 操作。\n这也是为什么采用 -no-ff 模式要加入参数 -m 的原因。\n\n### 存储现场\n当你在当前分支上工作时，因为一些原因你需要切换分支，但此时你当前分支的工作并没有完成，所以你不能提交该分支修改的内容。\n你想到的可能是直接切换到另一个分支，你是个果断的人，于是你就这么做了，然后你惊奇的发现你在切换分支前分支上做的修改，新建的文件，\n在切换到另一个分支后，竟然也能看到，你立刻意识到，专属于我的分支的文件别的分支也能看到了，这不是会给别人带来疑惑吗。\n而且别人也能对该文件进行删除，万一他把你这个文件删除了，你只能去版本中找该文件的旧版本还原，就会丢失你辛辛苦苦写的代码。\n\n幸好，Git还提供了一个stash功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作：\n```\ngit stash\n```\n现在，用git status查看工作区，就是干净的（除非有没有被Git管理的文件）。\n\n工作区是干净的，刚才的工作现场存到哪去了？用git stash list命令看看：\n```\ngit stash list\nstash@{0}: WIP on dev: f52c633 add merge\n```\n工作现场还在，Git把stash内容存在某个地方了，但是需要恢复一下，有两个办法：\n\n一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；\n\n另一种方式是用git stash pop，恢复的同时把stash内容也删了：\n\n你可以多次stash，恢复的时候，先用git stash list查看，然后恢复指定的stash，用命令：\n```\n$ git stash apply stash@{0}\n```\n\n理解：工作区和暂存区是一个公开的工作台，任何分支都会用到，并能看到工作台上最新的内容，只要在工作区、暂存区的改动未能够提交到某一个版本库（分支）中，那么在任何一个分支下都可以看得到这个工作区、暂存区的最新实时改动。 使用git stash就可以将暂存区的修改藏匿起来，使整个工作台看起来都是干净的。所以要清理整个工作台，那么前提是必须先将工作区的内容都add到暂存区中去。之后在干净的工作台上可以做另外一件紧急事件与藏匿起来的内容是完全独立的\n\n### 变基\n\n### 标签管理\n\n### 自定义git\n+ 让git显示颜色\n```\ngit config --global color.ui true\n```\n+ 配置别名\n我们只需要敲一行命令，告诉Git，以后st就表示status：\n```\ngit config --global alias.st status\n```\n+ 配置文件\n配置Git的时候，加上--global是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。\n配置文件放哪了？每个仓库的Git配置文件都放在.git/config文件中：\n\n### 忽略特殊文件\n在Git工作区的根目录下创建一个特殊的.gitignore文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。\n\n不需要从头写.gitignore文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：https://github.com/github/gitignore\n\n忽略文件的原则是：\n>忽略操作系统自动生成的文件，比如缩略图等；\n忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；\n忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。\n\n最后一步就是把.gitignore也提交到Git，就完成了！\n\n+ 强制add被忽略的文件\n```\ngit add -f App.class\n```\n+ 找出来是哪个规则导致了文件被忽略\n```\ngit check-ignore -v App.class\n.gitignore:3:*.class    App.class\n```\n\n**注意：**.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。那么解决方法就是先把本地缓存删除（改变成未track状态），然后再提交：\n```\ngit rm -r --cached .    把当前目录下的所有文件改变为未track状态\ngit add .          把当前目录下的除了忽略的文件之外的其他文件都变为track状态（加入暂存区）\ngit commit -m 'update .gitignore'   提交这次更改\n```\n#### git rm与git rm --cached\n\n当我们需要删除暂存区或分支上的文件, 同时工作区也不需要这个文件了, 可以使用\n```\n git rm file_path\n git commit -m 'delete somefile'\n git push\n```\n\n当我们需要删除暂存区或分支上的文件, 但本地又需要使用, 只是不希望这个文件被版本控制, 可以使用\n```\ngit rm --cached file_path\ngit commit -m 'delete remote somefile'\ngit push\n```\n","source":"_posts/git.md","raw":"---\ntitle: git\ndate: 2018-06-06 21:08:13\ntags:\n---\n[TOC]\n# 本地创建一个git仓库\n1. 新建文件夹\n2. 进入文件夹\n3. 使用git init命令初始化一个git仓库\n4. 进行文件的编写\n5. 使用git add &lt;file&gt;添加文件到暂存区\n6. 使用git commit -m \"wrote a readme file\",将文件提交到版本库。\n<!--more-->\n\n## 常用命令\n+ git status 查看工作区的状态\n+ git log 显示从最近到最远的提交日志\n\t+ --pretty=oneline 可以简化输出内容\n\t+ --graph 可以看到分支合并图。\n\t+ 最实用的写法\n\t```\n    git log --graph --pretty=oneline --abbrev-commit\n\t```\n+ 版本回退\n\t+ git reset --hard HEAD^ 　　　回退到上一个版本\n\t>(head^^回退上两次版本)（head~100 回退上一百次版本）\n\t+ git reset --hard 454cbc4  　　回退到commit id为454cbc4的版本，commit id不必输全，只要有唯一辨识度即可。 \n\t>HEAD指向的版本就是当前版本(指向最后一次提交的结果)，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id（版本号，输入部分即可）\n+ git reflog 记录了你的每一次命令\n>Git的版本回退速度非常快，因为Git在内部有个指向当前版本的HEAD指针，当你回退版本的时候，Git仅仅是把HEAD指向你想回退的版本，然后顺便把工作区的文件更新了。所以你让HEAD指向哪个版本号，你就把当前版本定位在哪。\n注意：所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。\n\n\ngit add -u\n将当前已跟踪且已修改文件更新\n\n### 撤销更改\n###### 丢弃工作区的修改\n```\ngit checkout -- file 丢弃工作区的修改\n```\n这里分两种情况：\n1. 文件只是在工作区做了修改，还未添加进暂存区中，使用*git checkout -- file*，file将回到和版本库一模一样的状态。\n2. 文件已经添加到暂存区后，又做了修改，file将回到添加到暂存区后的状态。\n\n###### 撤销暂存区的修改\n```\ngit reset HEAD file 撤销暂存区的修改\n```\n将暂存区中的file文件删除，file文件回到未add时的状态\n\n### 删除文件\n```\nrm test.txt 从工作区删除文件\n```\n这时，工作区和版本库就不一致了。\n我们有两种选择：\n1. 把版本库中的该文件也删除,使工作区和版本库一致\n```\ngit rm test.txt\ngit commit -m \"\"\n```\n2. 用版本库中的该文件还原工作区的该文件\n```\ngit checkout -- test.txt\n```\n\n### 创建与合并分支\n+ git branch 查看分支\n\n+ git branch name 创建分支\n\n+ git branch -d name 删除分支\n\n+ git branch -D name 强行删除一个没有被合并过的分支\n\n+ git checkout name 切换分支\n \n+ git checkout -b name 创建分支并切换到该分支\n\n+ git merge name 合并指定分支到当前分支\n\n+ 创建远程origin的dev分支到本地\n```\ngit checkout -b dev origin/dev\n```\n\n### 远程仓库\n+ 将本地的仓库和远程库关联起来\n```\ngit remote add origin(远程库的名字，可以自定义) git@github.com:michaelliao/learngit.git\n```\n\n+ 删除已关联的GitHub远程库\n```\ngit remote rm(remove) origin\n```\n\n+ 将本地的masetr分支内容推送到远程库的master分支\n```\ngit push (-u) origin master\n```\n由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送到远程库的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。\n\n+ 把本地分支推送到远程分支\n```\ngit push origin local_branch:remote_branch \n```\n\n+ 从远程库克隆一个仓库\n```\ngit clone git@github.com:michaelliao/gitskills.git\n```\n+ 查看远程库的信息\n```\ngit remote\n```\n+ 显示更详细的信息\n```\ngit remote -v\norigin  git@github.com:michaelliao/learngit.git (fetch)\norigin  git@github.com:michaelliao/learngit.git (push)\n```\n如果没有推送权限，就看不到push的地址。\n\n+ 推送分支\n```\ngit push origin branch_name\n```\n将本地的branch_name分支推送到远程库的branch_name分支\n\n### 分支管理策略\n通常，合并分支时，如果可能，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。\n\n如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。\n\n```\ngit merge --no-ff -m \"merge with no-ff\" dev\n```\n合并分支时，加上--no-ff参数就可以用普通模式合并（禁用Fast  forward模式），合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。\n\n不用--no-ff，实际上只是将master的指针update成dev分支而已，用的还是dev的commit ID，而使用--no-ff之后，则是重新commit了一哈，有了新的commit ID.\n简单地说就是 -no-ff 模式进行了一次新的 git commit 操作。\n这也是为什么采用 -no-ff 模式要加入参数 -m 的原因。\n\n### 存储现场\n当你在当前分支上工作时，因为一些原因你需要切换分支，但此时你当前分支的工作并没有完成，所以你不能提交该分支修改的内容。\n你想到的可能是直接切换到另一个分支，你是个果断的人，于是你就这么做了，然后你惊奇的发现你在切换分支前分支上做的修改，新建的文件，\n在切换到另一个分支后，竟然也能看到，你立刻意识到，专属于我的分支的文件别的分支也能看到了，这不是会给别人带来疑惑吗。\n而且别人也能对该文件进行删除，万一他把你这个文件删除了，你只能去版本中找该文件的旧版本还原，就会丢失你辛辛苦苦写的代码。\n\n幸好，Git还提供了一个stash功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作：\n```\ngit stash\n```\n现在，用git status查看工作区，就是干净的（除非有没有被Git管理的文件）。\n\n工作区是干净的，刚才的工作现场存到哪去了？用git stash list命令看看：\n```\ngit stash list\nstash@{0}: WIP on dev: f52c633 add merge\n```\n工作现场还在，Git把stash内容存在某个地方了，但是需要恢复一下，有两个办法：\n\n一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；\n\n另一种方式是用git stash pop，恢复的同时把stash内容也删了：\n\n你可以多次stash，恢复的时候，先用git stash list查看，然后恢复指定的stash，用命令：\n```\n$ git stash apply stash@{0}\n```\n\n理解：工作区和暂存区是一个公开的工作台，任何分支都会用到，并能看到工作台上最新的内容，只要在工作区、暂存区的改动未能够提交到某一个版本库（分支）中，那么在任何一个分支下都可以看得到这个工作区、暂存区的最新实时改动。 使用git stash就可以将暂存区的修改藏匿起来，使整个工作台看起来都是干净的。所以要清理整个工作台，那么前提是必须先将工作区的内容都add到暂存区中去。之后在干净的工作台上可以做另外一件紧急事件与藏匿起来的内容是完全独立的\n\n### 变基\n\n### 标签管理\n\n### 自定义git\n+ 让git显示颜色\n```\ngit config --global color.ui true\n```\n+ 配置别名\n我们只需要敲一行命令，告诉Git，以后st就表示status：\n```\ngit config --global alias.st status\n```\n+ 配置文件\n配置Git的时候，加上--global是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。\n配置文件放哪了？每个仓库的Git配置文件都放在.git/config文件中：\n\n### 忽略特殊文件\n在Git工作区的根目录下创建一个特殊的.gitignore文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。\n\n不需要从头写.gitignore文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：https://github.com/github/gitignore\n\n忽略文件的原则是：\n>忽略操作系统自动生成的文件，比如缩略图等；\n忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；\n忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。\n\n最后一步就是把.gitignore也提交到Git，就完成了！\n\n+ 强制add被忽略的文件\n```\ngit add -f App.class\n```\n+ 找出来是哪个规则导致了文件被忽略\n```\ngit check-ignore -v App.class\n.gitignore:3:*.class    App.class\n```\n\n**注意：**.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。那么解决方法就是先把本地缓存删除（改变成未track状态），然后再提交：\n```\ngit rm -r --cached .    把当前目录下的所有文件改变为未track状态\ngit add .          把当前目录下的除了忽略的文件之外的其他文件都变为track状态（加入暂存区）\ngit commit -m 'update .gitignore'   提交这次更改\n```\n#### git rm与git rm --cached\n\n当我们需要删除暂存区或分支上的文件, 同时工作区也不需要这个文件了, 可以使用\n```\n git rm file_path\n git commit -m 'delete somefile'\n git push\n```\n\n当我们需要删除暂存区或分支上的文件, 但本地又需要使用, 只是不希望这个文件被版本控制, 可以使用\n```\ngit rm --cached file_path\ngit commit -m 'delete remote somefile'\ngit push\n```\n","slug":"git","published":1,"updated":"2018-06-06T13:10:29.470Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cji5dwz62000eyodkqghsk4kh","content":"<p>[TOC]</p>\n<h1 id=\"本地创建一个git仓库\"><a href=\"#本地创建一个git仓库\" class=\"headerlink\" title=\"本地创建一个git仓库\"></a>本地创建一个git仓库</h1><ol>\n<li>新建文件夹</li>\n<li>进入文件夹</li>\n<li>使用git init命令初始化一个git仓库</li>\n<li>进行文件的编写</li>\n<li>使用git add &lt;file&gt;添加文件到暂存区</li>\n<li>使用git commit -m “wrote a readme file”,将文件提交到版本库。<a id=\"more\"></a>\n</li>\n</ol>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><ul>\n<li>git status 查看工作区的状态</li>\n<li><p>git log 显示从最近到最远的提交日志</p>\n<ul>\n<li>–pretty=oneline 可以简化输出内容</li>\n<li>–graph 可以看到分支合并图。</li>\n<li>最实用的写法<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git log --graph --pretty=oneline --abbrev-commit</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>版本回退</p>\n<ul>\n<li>git reset –hard HEAD^ 　　　回退到上一个版本<blockquote>\n<p>(head^^回退上两次版本)（head~100 回退上一百次版本）</p>\n</blockquote>\n</li>\n<li>git reset –hard 454cbc4  　　回退到commit id为454cbc4的版本，commit id不必输全，只要有唯一辨识度即可。 <blockquote>\n<p>HEAD指向的版本就是当前版本(指向最后一次提交的结果)，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset –hard commit_id（版本号，输入部分即可）</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>git reflog 记录了你的每一次命令<blockquote>\n<p>Git的版本回退速度非常快，因为Git在内部有个指向当前版本的HEAD指针，当你回退版本的时候，Git仅仅是把HEAD指向你想回退的版本，然后顺便把工作区的文件更新了。所以你让HEAD指向哪个版本号，你就把当前版本定位在哪。<br>注意：所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。</p>\n</blockquote>\n</li>\n</ul>\n<p>git add -u<br>将当前已跟踪且已修改文件更新</p>\n<h3 id=\"撤销更改\"><a href=\"#撤销更改\" class=\"headerlink\" title=\"撤销更改\"></a>撤销更改</h3><h6 id=\"丢弃工作区的修改\"><a href=\"#丢弃工作区的修改\" class=\"headerlink\" title=\"丢弃工作区的修改\"></a>丢弃工作区的修改</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -- file 丢弃工作区的修改</div></pre></td></tr></table></figure>\n<p>这里分两种情况：</p>\n<ol>\n<li>文件只是在工作区做了修改，还未添加进暂存区中，使用<em>git checkout – file</em>，file将回到和版本库一模一样的状态。</li>\n<li>文件已经添加到暂存区后，又做了修改，file将回到添加到暂存区后的状态。</li>\n</ol>\n<h6 id=\"撤销暂存区的修改\"><a href=\"#撤销暂存区的修改\" class=\"headerlink\" title=\"撤销暂存区的修改\"></a>撤销暂存区的修改</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reset HEAD file 撤销暂存区的修改</div></pre></td></tr></table></figure>\n<p>将暂存区中的file文件删除，file文件回到未add时的状态</p>\n<h3 id=\"删除文件\"><a href=\"#删除文件\" class=\"headerlink\" title=\"删除文件\"></a>删除文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rm test.txt 从工作区删除文件</div></pre></td></tr></table></figure>\n<p>这时，工作区和版本库就不一致了。<br>我们有两种选择：</p>\n<ol>\n<li><p>把版本库中的该文件也删除,使工作区和版本库一致</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git rm test.txt</div><div class=\"line\">git commit -m &quot;&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>用版本库中的该文件还原工作区的该文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -- test.txt</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"创建与合并分支\"><a href=\"#创建与合并分支\" class=\"headerlink\" title=\"创建与合并分支\"></a>创建与合并分支</h3><ul>\n<li><p>git branch 查看分支</p>\n</li>\n<li><p>git branch name 创建分支</p>\n</li>\n<li><p>git branch -d name 删除分支</p>\n</li>\n<li><p>git branch -D name 强行删除一个没有被合并过的分支</p>\n</li>\n<li><p>git checkout name 切换分支</p>\n</li>\n<li><p>git checkout -b name 创建分支并切换到该分支</p>\n</li>\n<li><p>git merge name 合并指定分支到当前分支</p>\n</li>\n<li><p>创建远程origin的dev分支到本地</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -b dev origin/dev</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h3><ul>\n<li><p>将本地的仓库和远程库关联起来</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add origin(远程库的名字，可以自定义) git@github.com:michaelliao/learngit.git</div></pre></td></tr></table></figure>\n</li>\n<li><p>删除已关联的GitHub远程库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote rm(remove) origin</div></pre></td></tr></table></figure>\n</li>\n<li><p>将本地的masetr分支内容推送到远程库的master分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push (-u) origin master</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送到远程库的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。</p>\n<ul>\n<li><p>把本地分支推送到远程分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin local_branch:remote_branch</div></pre></td></tr></table></figure>\n</li>\n<li><p>从远程库克隆一个仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone git@github.com:michaelliao/gitskills.git</div></pre></td></tr></table></figure>\n</li>\n<li><p>查看远程库的信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote</div></pre></td></tr></table></figure>\n</li>\n<li><p>显示更详细的信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote -v</div><div class=\"line\">origin  git@github.com:michaelliao/learngit.git (fetch)</div><div class=\"line\">origin  git@github.com:michaelliao/learngit.git (push)</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>如果没有推送权限，就看不到push的地址。</p>\n<ul>\n<li>推送分支<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin branch_name</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>将本地的branch_name分支推送到远程库的branch_name分支</p>\n<h3 id=\"分支管理策略\"><a href=\"#分支管理策略\" class=\"headerlink\" title=\"分支管理策略\"></a>分支管理策略</h3><p>通常，合并分支时，如果可能，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。</p>\n<p>如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git merge --no-ff -m &quot;merge with no-ff&quot; dev</div></pre></td></tr></table></figure>\n<p>合并分支时，加上–no-ff参数就可以用普通模式合并（禁用Fast  forward模式），合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。</p>\n<p>不用–no-ff，实际上只是将master的指针update成dev分支而已，用的还是dev的commit ID，而使用–no-ff之后，则是重新commit了一哈，有了新的commit ID.<br>简单地说就是 -no-ff 模式进行了一次新的 git commit 操作。<br>这也是为什么采用 -no-ff 模式要加入参数 -m 的原因。</p>\n<h3 id=\"存储现场\"><a href=\"#存储现场\" class=\"headerlink\" title=\"存储现场\"></a>存储现场</h3><p>当你在当前分支上工作时，因为一些原因你需要切换分支，但此时你当前分支的工作并没有完成，所以你不能提交该分支修改的内容。<br>你想到的可能是直接切换到另一个分支，你是个果断的人，于是你就这么做了，然后你惊奇的发现你在切换分支前分支上做的修改，新建的文件，<br>在切换到另一个分支后，竟然也能看到，你立刻意识到，专属于我的分支的文件别的分支也能看到了，这不是会给别人带来疑惑吗。<br>而且别人也能对该文件进行删除，万一他把你这个文件删除了，你只能去版本中找该文件的旧版本还原，就会丢失你辛辛苦苦写的代码。</p>\n<p>幸好，Git还提供了一个stash功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git stash</div></pre></td></tr></table></figure></p>\n<p>现在，用git status查看工作区，就是干净的（除非有没有被Git管理的文件）。</p>\n<p>工作区是干净的，刚才的工作现场存到哪去了？用git stash list命令看看：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git stash list</div><div class=\"line\">stash@&#123;0&#125;: WIP on dev: f52c633 add merge</div></pre></td></tr></table></figure></p>\n<p>工作现场还在，Git把stash内容存在某个地方了，但是需要恢复一下，有两个办法：</p>\n<p>一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；</p>\n<p>另一种方式是用git stash pop，恢复的同时把stash内容也删了：</p>\n<p>你可以多次stash，恢复的时候，先用git stash list查看，然后恢复指定的stash，用命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git stash apply stash@&#123;0&#125;</div></pre></td></tr></table></figure></p>\n<p>理解：工作区和暂存区是一个公开的工作台，任何分支都会用到，并能看到工作台上最新的内容，只要在工作区、暂存区的改动未能够提交到某一个版本库（分支）中，那么在任何一个分支下都可以看得到这个工作区、暂存区的最新实时改动。 使用git stash就可以将暂存区的修改藏匿起来，使整个工作台看起来都是干净的。所以要清理整个工作台，那么前提是必须先将工作区的内容都add到暂存区中去。之后在干净的工作台上可以做另外一件紧急事件与藏匿起来的内容是完全独立的</p>\n<h3 id=\"变基\"><a href=\"#变基\" class=\"headerlink\" title=\"变基\"></a>变基</h3><h3 id=\"标签管理\"><a href=\"#标签管理\" class=\"headerlink\" title=\"标签管理\"></a>标签管理</h3><h3 id=\"自定义git\"><a href=\"#自定义git\" class=\"headerlink\" title=\"自定义git\"></a>自定义git</h3><ul>\n<li><p>让git显示颜色</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global color.ui true</div></pre></td></tr></table></figure>\n</li>\n<li><p>配置别名<br>我们只需要敲一行命令，告诉Git，以后st就表示status：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global alias.st status</div></pre></td></tr></table></figure>\n</li>\n<li><p>配置文件<br>配置Git的时候，加上–global是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。<br>配置文件放哪了？每个仓库的Git配置文件都放在.git/config文件中：</p>\n</li>\n</ul>\n<h3 id=\"忽略特殊文件\"><a href=\"#忽略特殊文件\" class=\"headerlink\" title=\"忽略特殊文件\"></a>忽略特殊文件</h3><p>在Git工作区的根目录下创建一个特殊的.gitignore文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。</p>\n<p>不需要从头写.gitignore文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：<a href=\"https://github.com/github/gitignore\" target=\"_blank\" rel=\"external\">https://github.com/github/gitignore</a></p>\n<p>忽略文件的原则是：</p>\n<blockquote>\n<p>忽略操作系统自动生成的文件，比如缩略图等；<br>忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；<br>忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。</p>\n</blockquote>\n<p>最后一步就是把.gitignore也提交到Git，就完成了！</p>\n<ul>\n<li><p>强制add被忽略的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add -f App.class</div></pre></td></tr></table></figure>\n</li>\n<li><p>找出来是哪个规则导致了文件被忽略</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git check-ignore -v App.class</div><div class=\"line\">.gitignore:3:*.class    App.class</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>注意：</strong>.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。那么解决方法就是先把本地缓存删除（改变成未track状态），然后再提交：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git rm -r --cached .    把当前目录下的所有文件改变为未track状态</div><div class=\"line\">git add .          把当前目录下的除了忽略的文件之外的其他文件都变为track状态（加入暂存区）</div><div class=\"line\">git commit -m &apos;update .gitignore&apos;   提交这次更改</div></pre></td></tr></table></figure></p>\n<h4 id=\"git-rm与git-rm-–cached\"><a href=\"#git-rm与git-rm-–cached\" class=\"headerlink\" title=\"git rm与git rm –cached\"></a>git rm与git rm –cached</h4><p>当我们需要删除暂存区或分支上的文件, 同时工作区也不需要这个文件了, 可以使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git rm file_path</div><div class=\"line\">git commit -m &apos;delete somefile&apos;</div><div class=\"line\">git push</div></pre></td></tr></table></figure></p>\n<p>当我们需要删除暂存区或分支上的文件, 但本地又需要使用, 只是不希望这个文件被版本控制, 可以使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git rm --cached file_path</div><div class=\"line\">git commit -m &apos;delete remote somefile&apos;</div><div class=\"line\">git push</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>[TOC]</p>\n<h1 id=\"本地创建一个git仓库\"><a href=\"#本地创建一个git仓库\" class=\"headerlink\" title=\"本地创建一个git仓库\"></a>本地创建一个git仓库</h1><ol>\n<li>新建文件夹</li>\n<li>进入文件夹</li>\n<li>使用git init命令初始化一个git仓库</li>\n<li>进行文件的编写</li>\n<li>使用git add &lt;file&gt;添加文件到暂存区</li>\n<li>使用git commit -m “wrote a readme file”,将文件提交到版本库。","more":"</li>\n</ol>\n<h2 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h2><ul>\n<li>git status 查看工作区的状态</li>\n<li><p>git log 显示从最近到最远的提交日志</p>\n<ul>\n<li>–pretty=oneline 可以简化输出内容</li>\n<li>–graph 可以看到分支合并图。</li>\n<li>最实用的写法<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git log --graph --pretty=oneline --abbrev-commit</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p>版本回退</p>\n<ul>\n<li>git reset –hard HEAD^ 　　　回退到上一个版本<blockquote>\n<p>(head^^回退上两次版本)（head~100 回退上一百次版本）</p>\n</blockquote>\n</li>\n<li>git reset –hard 454cbc4  　　回退到commit id为454cbc4的版本，commit id不必输全，只要有唯一辨识度即可。 <blockquote>\n<p>HEAD指向的版本就是当前版本(指向最后一次提交的结果)，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset –hard commit_id（版本号，输入部分即可）</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>git reflog 记录了你的每一次命令<blockquote>\n<p>Git的版本回退速度非常快，因为Git在内部有个指向当前版本的HEAD指针，当你回退版本的时候，Git仅仅是把HEAD指向你想回退的版本，然后顺便把工作区的文件更新了。所以你让HEAD指向哪个版本号，你就把当前版本定位在哪。<br>注意：所有的版本控制系统，其实只能跟踪文本文件的改动，比如TXT文件，网页，所有的程序代码等等，Git也不例外。版本控制系统可以告诉你每次的改动，比如在第5行加了一个单词“Linux”，在第8行删了一个单词“Windows”。而图片、视频这些二进制文件，虽然也能由版本控制系统管理，但没法跟踪文件的变化，只能把二进制文件每次改动串起来，也就是只知道图片从100KB改成了120KB，但到底改了啥，版本控制系统不知道，也没法知道。</p>\n</blockquote>\n</li>\n</ul>\n<p>git add -u<br>将当前已跟踪且已修改文件更新</p>\n<h3 id=\"撤销更改\"><a href=\"#撤销更改\" class=\"headerlink\" title=\"撤销更改\"></a>撤销更改</h3><h6 id=\"丢弃工作区的修改\"><a href=\"#丢弃工作区的修改\" class=\"headerlink\" title=\"丢弃工作区的修改\"></a>丢弃工作区的修改</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -- file 丢弃工作区的修改</div></pre></td></tr></table></figure>\n<p>这里分两种情况：</p>\n<ol>\n<li>文件只是在工作区做了修改，还未添加进暂存区中，使用<em>git checkout – file</em>，file将回到和版本库一模一样的状态。</li>\n<li>文件已经添加到暂存区后，又做了修改，file将回到添加到暂存区后的状态。</li>\n</ol>\n<h6 id=\"撤销暂存区的修改\"><a href=\"#撤销暂存区的修改\" class=\"headerlink\" title=\"撤销暂存区的修改\"></a>撤销暂存区的修改</h6><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git reset HEAD file 撤销暂存区的修改</div></pre></td></tr></table></figure>\n<p>将暂存区中的file文件删除，file文件回到未add时的状态</p>\n<h3 id=\"删除文件\"><a href=\"#删除文件\" class=\"headerlink\" title=\"删除文件\"></a>删除文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">rm test.txt 从工作区删除文件</div></pre></td></tr></table></figure>\n<p>这时，工作区和版本库就不一致了。<br>我们有两种选择：</p>\n<ol>\n<li><p>把版本库中的该文件也删除,使工作区和版本库一致</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git rm test.txt</div><div class=\"line\">git commit -m &quot;&quot;</div></pre></td></tr></table></figure>\n</li>\n<li><p>用版本库中的该文件还原工作区的该文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -- test.txt</div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"创建与合并分支\"><a href=\"#创建与合并分支\" class=\"headerlink\" title=\"创建与合并分支\"></a>创建与合并分支</h3><ul>\n<li><p>git branch 查看分支</p>\n</li>\n<li><p>git branch name 创建分支</p>\n</li>\n<li><p>git branch -d name 删除分支</p>\n</li>\n<li><p>git branch -D name 强行删除一个没有被合并过的分支</p>\n</li>\n<li><p>git checkout name 切换分支</p>\n</li>\n<li><p>git checkout -b name 创建分支并切换到该分支</p>\n</li>\n<li><p>git merge name 合并指定分支到当前分支</p>\n</li>\n<li><p>创建远程origin的dev分支到本地</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -b dev origin/dev</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"远程仓库\"><a href=\"#远程仓库\" class=\"headerlink\" title=\"远程仓库\"></a>远程仓库</h3><ul>\n<li><p>将本地的仓库和远程库关联起来</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote add origin(远程库的名字，可以自定义) git@github.com:michaelliao/learngit.git</div></pre></td></tr></table></figure>\n</li>\n<li><p>删除已关联的GitHub远程库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote rm(remove) origin</div></pre></td></tr></table></figure>\n</li>\n<li><p>将本地的masetr分支内容推送到远程库的master分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push (-u) origin master</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>由于远程库是空的，我们第一次推送master分支时，加上了-u参数，Git不但会把本地的master分支内容推送到远程库的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。</p>\n<ul>\n<li><p>把本地分支推送到远程分支</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin local_branch:remote_branch</div></pre></td></tr></table></figure>\n</li>\n<li><p>从远程库克隆一个仓库</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git clone git@github.com:michaelliao/gitskills.git</div></pre></td></tr></table></figure>\n</li>\n<li><p>查看远程库的信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote</div></pre></td></tr></table></figure>\n</li>\n<li><p>显示更详细的信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git remote -v</div><div class=\"line\">origin  git@github.com:michaelliao/learngit.git (fetch)</div><div class=\"line\">origin  git@github.com:michaelliao/learngit.git (push)</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>如果没有推送权限，就看不到push的地址。</p>\n<ul>\n<li>推送分支<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git push origin branch_name</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>将本地的branch_name分支推送到远程库的branch_name分支</p>\n<h3 id=\"分支管理策略\"><a href=\"#分支管理策略\" class=\"headerlink\" title=\"分支管理策略\"></a>分支管理策略</h3><p>通常，合并分支时，如果可能，Git会用Fast forward模式，但这种模式下，删除分支后，会丢掉分支信息。</p>\n<p>如果要强制禁用Fast forward模式，Git就会在merge时生成一个新的commit，这样，从分支历史上就可以看出分支信息。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git merge --no-ff -m &quot;merge with no-ff&quot; dev</div></pre></td></tr></table></figure>\n<p>合并分支时，加上–no-ff参数就可以用普通模式合并（禁用Fast  forward模式），合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。</p>\n<p>不用–no-ff，实际上只是将master的指针update成dev分支而已，用的还是dev的commit ID，而使用–no-ff之后，则是重新commit了一哈，有了新的commit ID.<br>简单地说就是 -no-ff 模式进行了一次新的 git commit 操作。<br>这也是为什么采用 -no-ff 模式要加入参数 -m 的原因。</p>\n<h3 id=\"存储现场\"><a href=\"#存储现场\" class=\"headerlink\" title=\"存储现场\"></a>存储现场</h3><p>当你在当前分支上工作时，因为一些原因你需要切换分支，但此时你当前分支的工作并没有完成，所以你不能提交该分支修改的内容。<br>你想到的可能是直接切换到另一个分支，你是个果断的人，于是你就这么做了，然后你惊奇的发现你在切换分支前分支上做的修改，新建的文件，<br>在切换到另一个分支后，竟然也能看到，你立刻意识到，专属于我的分支的文件别的分支也能看到了，这不是会给别人带来疑惑吗。<br>而且别人也能对该文件进行删除，万一他把你这个文件删除了，你只能去版本中找该文件的旧版本还原，就会丢失你辛辛苦苦写的代码。</p>\n<p>幸好，Git还提供了一个stash功能，可以把当前工作现场“储藏”起来，等以后恢复现场后继续工作：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git stash</div></pre></td></tr></table></figure></p>\n<p>现在，用git status查看工作区，就是干净的（除非有没有被Git管理的文件）。</p>\n<p>工作区是干净的，刚才的工作现场存到哪去了？用git stash list命令看看：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git stash list</div><div class=\"line\">stash@&#123;0&#125;: WIP on dev: f52c633 add merge</div></pre></td></tr></table></figure></p>\n<p>工作现场还在，Git把stash内容存在某个地方了，但是需要恢复一下，有两个办法：</p>\n<p>一是用git stash apply恢复，但是恢复后，stash内容并不删除，你需要用git stash drop来删除；</p>\n<p>另一种方式是用git stash pop，恢复的同时把stash内容也删了：</p>\n<p>你可以多次stash，恢复的时候，先用git stash list查看，然后恢复指定的stash，用命令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git stash apply stash@&#123;0&#125;</div></pre></td></tr></table></figure></p>\n<p>理解：工作区和暂存区是一个公开的工作台，任何分支都会用到，并能看到工作台上最新的内容，只要在工作区、暂存区的改动未能够提交到某一个版本库（分支）中，那么在任何一个分支下都可以看得到这个工作区、暂存区的最新实时改动。 使用git stash就可以将暂存区的修改藏匿起来，使整个工作台看起来都是干净的。所以要清理整个工作台，那么前提是必须先将工作区的内容都add到暂存区中去。之后在干净的工作台上可以做另外一件紧急事件与藏匿起来的内容是完全独立的</p>\n<h3 id=\"变基\"><a href=\"#变基\" class=\"headerlink\" title=\"变基\"></a>变基</h3><h3 id=\"标签管理\"><a href=\"#标签管理\" class=\"headerlink\" title=\"标签管理\"></a>标签管理</h3><h3 id=\"自定义git\"><a href=\"#自定义git\" class=\"headerlink\" title=\"自定义git\"></a>自定义git</h3><ul>\n<li><p>让git显示颜色</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global color.ui true</div></pre></td></tr></table></figure>\n</li>\n<li><p>配置别名<br>我们只需要敲一行命令，告诉Git，以后st就表示status：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git config --global alias.st status</div></pre></td></tr></table></figure>\n</li>\n<li><p>配置文件<br>配置Git的时候，加上–global是针对当前用户起作用的，如果不加，那只针对当前的仓库起作用。<br>配置文件放哪了？每个仓库的Git配置文件都放在.git/config文件中：</p>\n</li>\n</ul>\n<h3 id=\"忽略特殊文件\"><a href=\"#忽略特殊文件\" class=\"headerlink\" title=\"忽略特殊文件\"></a>忽略特殊文件</h3><p>在Git工作区的根目录下创建一个特殊的.gitignore文件，然后把要忽略的文件名填进去，Git就会自动忽略这些文件。</p>\n<p>不需要从头写.gitignore文件，GitHub已经为我们准备了各种配置文件，只需要组合一下就可以使用了。所有配置文件可以直接在线浏览：<a href=\"https://github.com/github/gitignore\" target=\"_blank\" rel=\"external\">https://github.com/github/gitignore</a></p>\n<p>忽略文件的原则是：</p>\n<blockquote>\n<p>忽略操作系统自动生成的文件，比如缩略图等；<br>忽略编译生成的中间文件、可执行文件等，也就是如果一个文件是通过另一个文件自动生成的，那自动生成的文件就没必要放进版本库，比如Java编译产生的.class文件；<br>忽略你自己的带有敏感信息的配置文件，比如存放口令的配置文件。</p>\n</blockquote>\n<p>最后一步就是把.gitignore也提交到Git，就完成了！</p>\n<ul>\n<li><p>强制add被忽略的文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">git add -f App.class</div></pre></td></tr></table></figure>\n</li>\n<li><p>找出来是哪个规则导致了文件被忽略</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git check-ignore -v App.class</div><div class=\"line\">.gitignore:3:*.class    App.class</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<p><strong>注意：</strong>.gitignore只能忽略那些原来没有被track的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。那么解决方法就是先把本地缓存删除（改变成未track状态），然后再提交：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git rm -r --cached .    把当前目录下的所有文件改变为未track状态</div><div class=\"line\">git add .          把当前目录下的除了忽略的文件之外的其他文件都变为track状态（加入暂存区）</div><div class=\"line\">git commit -m &apos;update .gitignore&apos;   提交这次更改</div></pre></td></tr></table></figure></p>\n<h4 id=\"git-rm与git-rm-–cached\"><a href=\"#git-rm与git-rm-–cached\" class=\"headerlink\" title=\"git rm与git rm –cached\"></a>git rm与git rm –cached</h4><p>当我们需要删除暂存区或分支上的文件, 同时工作区也不需要这个文件了, 可以使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git rm file_path</div><div class=\"line\">git commit -m &apos;delete somefile&apos;</div><div class=\"line\">git push</div></pre></td></tr></table></figure></p>\n<p>当我们需要删除暂存区或分支上的文件, 但本地又需要使用, 只是不希望这个文件被版本控制, 可以使用<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">git rm --cached file_path</div><div class=\"line\">git commit -m &apos;delete remote somefile&apos;</div><div class=\"line\">git push</div></pre></td></tr></table></figure></p>"},{"title":"spring小结（二）————依赖注入","date":"2017-09-17T11:06:21.000Z","_content":"## DI（依赖注入）\n\n　　之前我们写一个web项目时，在Servlet类中创建Service对象，调用service中的方法处理业务逻辑，在Service类中，又创建Dao对象，调用dao中的方法处理访问数据库的逻辑，这样一层一层的向下调用。这样做的结果是，类与类之间的耦合度太高，DI的目的就是降低耦合度。\n<!--more-->\n    \n　　之前我们需要一个对象时，就得自己new一个新对象；现在我们把需要的类通过配置文件或注解方式放到spring工厂，它负责帮我们创建对象；我们在Servlet类中需要创建Service对象，可以说Servlet类依赖Service对象，现在有了Spring工厂，不需要我们创建Service对象，我们只需从Spring工厂拿Service对象即可，Spring工厂把Servlet类所依赖的Service对象给注入进来了，这就是依赖注入。\n　　\n依赖注入依然是两种方式：xml方式和注解方式\n\n#### 注解方式\n\n- setter方法注入---为属性提供相应的setter方法，通过调用此方法注入属性值\n\n```\n    <bean id=\"userDao2\" class=\"cn.itcast.spring.di.UserDao\">\n        <property name=\"name\" value=\"二麻子\" />\n        <property name=\"age\" value=\"88\" />\n    </bean>\n    \n    private List<String> list;\n    private Set<String> set;\n    private String[] strs;\n    private Map<String, String> map;\n    private Properties pros;\n\n<!-- 使用setter方法注入集合类型的属性 -->\n    <bean id=\"userDao4\" class=\"cn.itcast.spring.di.UserDao\">\n        //List\n        <property name=\"list\">\n            <list>\n                <value>value1</value>\n                <value>value2</value>\n                <value>value3</value>\n            </list>\n        </property>\n        \n        //Set\n        <property name=\"set\">\n            <set>\n                <value>v1</value>\n                <value>v2</value>\n                <value>v3</value>\n            </set>\n        </property>\n\n        //数组\n        <property name=\"strs\">\n            <list>\n                <value>str1</value>\n                <value>str2</value>\n                <value>str3</value>\n            </list>\n        </property>\n\n        //Map\n        <property name=\"map\">\n            <entry key=\"k1\" value=\"v1\"></entry>\n            <entry key=\"k2\" value=\"v2\"></entry>\n            <entry key=\"k3\" value=\"v3\"></entry>\n        </property>\n\n        //properpies文件\n        <property name=\"pros\">\n            <props>\n                <prop key=\"key1\">value1</prop>\n                <prop key=\"key2\">value2</prop>\n            </props>\n        </property>\n    </bean>\n```\n- 构造方法注入----通过类的构造方法注入属性值\n```\n    <bean id=\"userDao1\" class=\"cn.itcast.spring.di.UserDao\">\n        <constructor-arg index=\"0\" value=\"小白\" />\n        <constructor-arg index=\"1\" value=\"20\" />\n    </bean>\n```\n\n#### 注解方式\n对于Bean属性的依赖注入分为两类，一类是对于属性是String类型或者基本数据类型Spring容器提供了@Value这个注解，另一类是对于属性是对象的提供了@Autowired和@Resource这两个注解。\n\n1．Resource注解:可以按照对象的类型注入，也可以按照对象的唯一标识注入\n  @Resource(name=\"userDao\")  //从工厂拿出userDao对象\n  \n2．AutoWired注解：只能按照对象的类型注入，如果需要按照对象的唯一标识注入，需要使用另外一个注解@Qualifier(value=\"userDao\")使用\n注意：Resource和AutoWired使用在属性上","source":"_posts/spring/spring2.md","raw":"---\ntitle: spring小结（二）————依赖注入\ndate: 2017-09-17 19:06:21\ncategories: spring\ntags: JavaEE框架\n---\n## DI（依赖注入）\n\n　　之前我们写一个web项目时，在Servlet类中创建Service对象，调用service中的方法处理业务逻辑，在Service类中，又创建Dao对象，调用dao中的方法处理访问数据库的逻辑，这样一层一层的向下调用。这样做的结果是，类与类之间的耦合度太高，DI的目的就是降低耦合度。\n<!--more-->\n    \n　　之前我们需要一个对象时，就得自己new一个新对象；现在我们把需要的类通过配置文件或注解方式放到spring工厂，它负责帮我们创建对象；我们在Servlet类中需要创建Service对象，可以说Servlet类依赖Service对象，现在有了Spring工厂，不需要我们创建Service对象，我们只需从Spring工厂拿Service对象即可，Spring工厂把Servlet类所依赖的Service对象给注入进来了，这就是依赖注入。\n　　\n依赖注入依然是两种方式：xml方式和注解方式\n\n#### 注解方式\n\n- setter方法注入---为属性提供相应的setter方法，通过调用此方法注入属性值\n\n```\n    <bean id=\"userDao2\" class=\"cn.itcast.spring.di.UserDao\">\n        <property name=\"name\" value=\"二麻子\" />\n        <property name=\"age\" value=\"88\" />\n    </bean>\n    \n    private List<String> list;\n    private Set<String> set;\n    private String[] strs;\n    private Map<String, String> map;\n    private Properties pros;\n\n<!-- 使用setter方法注入集合类型的属性 -->\n    <bean id=\"userDao4\" class=\"cn.itcast.spring.di.UserDao\">\n        //List\n        <property name=\"list\">\n            <list>\n                <value>value1</value>\n                <value>value2</value>\n                <value>value3</value>\n            </list>\n        </property>\n        \n        //Set\n        <property name=\"set\">\n            <set>\n                <value>v1</value>\n                <value>v2</value>\n                <value>v3</value>\n            </set>\n        </property>\n\n        //数组\n        <property name=\"strs\">\n            <list>\n                <value>str1</value>\n                <value>str2</value>\n                <value>str3</value>\n            </list>\n        </property>\n\n        //Map\n        <property name=\"map\">\n            <entry key=\"k1\" value=\"v1\"></entry>\n            <entry key=\"k2\" value=\"v2\"></entry>\n            <entry key=\"k3\" value=\"v3\"></entry>\n        </property>\n\n        //properpies文件\n        <property name=\"pros\">\n            <props>\n                <prop key=\"key1\">value1</prop>\n                <prop key=\"key2\">value2</prop>\n            </props>\n        </property>\n    </bean>\n```\n- 构造方法注入----通过类的构造方法注入属性值\n```\n    <bean id=\"userDao1\" class=\"cn.itcast.spring.di.UserDao\">\n        <constructor-arg index=\"0\" value=\"小白\" />\n        <constructor-arg index=\"1\" value=\"20\" />\n    </bean>\n```\n\n#### 注解方式\n对于Bean属性的依赖注入分为两类，一类是对于属性是String类型或者基本数据类型Spring容器提供了@Value这个注解，另一类是对于属性是对象的提供了@Autowired和@Resource这两个注解。\n\n1．Resource注解:可以按照对象的类型注入，也可以按照对象的唯一标识注入\n  @Resource(name=\"userDao\")  //从工厂拿出userDao对象\n  \n2．AutoWired注解：只能按照对象的类型注入，如果需要按照对象的唯一标识注入，需要使用另外一个注解@Qualifier(value=\"userDao\")使用\n注意：Resource和AutoWired使用在属性上","slug":"spring/spring2","published":1,"updated":"2018-06-01T00:30:56.040Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cji5dwz7o000fyodkf04vjfgk","content":"<h2 id=\"DI（依赖注入）\"><a href=\"#DI（依赖注入）\" class=\"headerlink\" title=\"DI（依赖注入）\"></a>DI（依赖注入）</h2><p>　　之前我们写一个web项目时，在Servlet类中创建Service对象，调用service中的方法处理业务逻辑，在Service类中，又创建Dao对象，调用dao中的方法处理访问数据库的逻辑，这样一层一层的向下调用。这样做的结果是，类与类之间的耦合度太高，DI的目的就是降低耦合度。<br><a id=\"more\"></a></p>\n<p>　　之前我们需要一个对象时，就得自己new一个新对象；现在我们把需要的类通过配置文件或注解方式放到spring工厂，它负责帮我们创建对象；我们在Servlet类中需要创建Service对象，可以说Servlet类依赖Service对象，现在有了Spring工厂，不需要我们创建Service对象，我们只需从Spring工厂拿Service对象即可，Spring工厂把Servlet类所依赖的Service对象给注入进来了，这就是依赖注入。<br>　　<br>依赖注入依然是两种方式：xml方式和注解方式</p>\n<h4 id=\"注解方式\"><a href=\"#注解方式\" class=\"headerlink\" title=\"注解方式\"></a>注解方式</h4><ul>\n<li>setter方法注入—为属性提供相应的setter方法，通过调用此方法注入属性值</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\">    &lt;bean id=&quot;userDao2&quot; class=&quot;cn.itcast.spring.di.UserDao&quot;&gt;</div><div class=\"line\">        &lt;property name=&quot;name&quot; value=&quot;二麻子&quot; /&gt;</div><div class=\"line\">        &lt;property name=&quot;age&quot; value=&quot;88&quot; /&gt;</div><div class=\"line\">    &lt;/bean&gt;</div><div class=\"line\">    </div><div class=\"line\">    private List&lt;String&gt; list;</div><div class=\"line\">    private Set&lt;String&gt; set;</div><div class=\"line\">    private String[] strs;</div><div class=\"line\">    private Map&lt;String, String&gt; map;</div><div class=\"line\">    private Properties pros;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 使用setter方法注入集合类型的属性 --&gt;</div><div class=\"line\">    &lt;bean id=&quot;userDao4&quot; class=&quot;cn.itcast.spring.di.UserDao&quot;&gt;</div><div class=\"line\">        //List</div><div class=\"line\">        &lt;property name=&quot;list&quot;&gt;</div><div class=\"line\">            &lt;list&gt;</div><div class=\"line\">                &lt;value&gt;value1&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;value2&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;value3&lt;/value&gt;</div><div class=\"line\">            &lt;/list&gt;</div><div class=\"line\">        &lt;/property&gt;</div><div class=\"line\">        </div><div class=\"line\">        //Set</div><div class=\"line\">        &lt;property name=&quot;set&quot;&gt;</div><div class=\"line\">            &lt;set&gt;</div><div class=\"line\">                &lt;value&gt;v1&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;v2&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;v3&lt;/value&gt;</div><div class=\"line\">            &lt;/set&gt;</div><div class=\"line\">        &lt;/property&gt;</div><div class=\"line\"></div><div class=\"line\">        //数组</div><div class=\"line\">        &lt;property name=&quot;strs&quot;&gt;</div><div class=\"line\">            &lt;list&gt;</div><div class=\"line\">                &lt;value&gt;str1&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;str2&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;str3&lt;/value&gt;</div><div class=\"line\">            &lt;/list&gt;</div><div class=\"line\">        &lt;/property&gt;</div><div class=\"line\"></div><div class=\"line\">        //Map</div><div class=\"line\">        &lt;property name=&quot;map&quot;&gt;</div><div class=\"line\">            &lt;entry key=&quot;k1&quot; value=&quot;v1&quot;&gt;&lt;/entry&gt;</div><div class=\"line\">            &lt;entry key=&quot;k2&quot; value=&quot;v2&quot;&gt;&lt;/entry&gt;</div><div class=\"line\">            &lt;entry key=&quot;k3&quot; value=&quot;v3&quot;&gt;&lt;/entry&gt;</div><div class=\"line\">        &lt;/property&gt;</div><div class=\"line\"></div><div class=\"line\">        //properpies文件</div><div class=\"line\">        &lt;property name=&quot;pros&quot;&gt;</div><div class=\"line\">            &lt;props&gt;</div><div class=\"line\">                &lt;prop key=&quot;key1&quot;&gt;value1&lt;/prop&gt;</div><div class=\"line\">                &lt;prop key=&quot;key2&quot;&gt;value2&lt;/prop&gt;</div><div class=\"line\">            &lt;/props&gt;</div><div class=\"line\">        &lt;/property&gt;</div><div class=\"line\">    &lt;/bean&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>构造方法注入—-通过类的构造方法注入属性值<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;bean id=&quot;userDao1&quot; class=&quot;cn.itcast.spring.di.UserDao&quot;&gt;</div><div class=\"line\">    &lt;constructor-arg index=&quot;0&quot; value=&quot;小白&quot; /&gt;</div><div class=\"line\">    &lt;constructor-arg index=&quot;1&quot; value=&quot;20&quot; /&gt;</div><div class=\"line\">&lt;/bean&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"注解方式-1\"><a href=\"#注解方式-1\" class=\"headerlink\" title=\"注解方式\"></a>注解方式</h4><p>对于Bean属性的依赖注入分为两类，一类是对于属性是String类型或者基本数据类型Spring容器提供了@Value这个注解，另一类是对于属性是对象的提供了@Autowired和@Resource这两个注解。</p>\n<p>1．Resource注解:可以按照对象的类型注入，也可以按照对象的唯一标识注入<br>  @Resource(name=”userDao”)  //从工厂拿出userDao对象</p>\n<p>2．AutoWired注解：只能按照对象的类型注入，如果需要按照对象的唯一标识注入，需要使用另外一个注解@Qualifier(value=”userDao”)使用<br>注意：Resource和AutoWired使用在属性上</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"DI（依赖注入）\"><a href=\"#DI（依赖注入）\" class=\"headerlink\" title=\"DI（依赖注入）\"></a>DI（依赖注入）</h2><p>　　之前我们写一个web项目时，在Servlet类中创建Service对象，调用service中的方法处理业务逻辑，在Service类中，又创建Dao对象，调用dao中的方法处理访问数据库的逻辑，这样一层一层的向下调用。这样做的结果是，类与类之间的耦合度太高，DI的目的就是降低耦合度。<br>","more":"</p>\n<p>　　之前我们需要一个对象时，就得自己new一个新对象；现在我们把需要的类通过配置文件或注解方式放到spring工厂，它负责帮我们创建对象；我们在Servlet类中需要创建Service对象，可以说Servlet类依赖Service对象，现在有了Spring工厂，不需要我们创建Service对象，我们只需从Spring工厂拿Service对象即可，Spring工厂把Servlet类所依赖的Service对象给注入进来了，这就是依赖注入。<br>　　<br>依赖注入依然是两种方式：xml方式和注解方式</p>\n<h4 id=\"注解方式\"><a href=\"#注解方式\" class=\"headerlink\" title=\"注解方式\"></a>注解方式</h4><ul>\n<li>setter方法注入—为属性提供相应的setter方法，通过调用此方法注入属性值</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div></pre></td><td class=\"code\"><pre><div class=\"line\">    &lt;bean id=&quot;userDao2&quot; class=&quot;cn.itcast.spring.di.UserDao&quot;&gt;</div><div class=\"line\">        &lt;property name=&quot;name&quot; value=&quot;二麻子&quot; /&gt;</div><div class=\"line\">        &lt;property name=&quot;age&quot; value=&quot;88&quot; /&gt;</div><div class=\"line\">    &lt;/bean&gt;</div><div class=\"line\">    </div><div class=\"line\">    private List&lt;String&gt; list;</div><div class=\"line\">    private Set&lt;String&gt; set;</div><div class=\"line\">    private String[] strs;</div><div class=\"line\">    private Map&lt;String, String&gt; map;</div><div class=\"line\">    private Properties pros;</div><div class=\"line\"></div><div class=\"line\">&lt;!-- 使用setter方法注入集合类型的属性 --&gt;</div><div class=\"line\">    &lt;bean id=&quot;userDao4&quot; class=&quot;cn.itcast.spring.di.UserDao&quot;&gt;</div><div class=\"line\">        //List</div><div class=\"line\">        &lt;property name=&quot;list&quot;&gt;</div><div class=\"line\">            &lt;list&gt;</div><div class=\"line\">                &lt;value&gt;value1&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;value2&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;value3&lt;/value&gt;</div><div class=\"line\">            &lt;/list&gt;</div><div class=\"line\">        &lt;/property&gt;</div><div class=\"line\">        </div><div class=\"line\">        //Set</div><div class=\"line\">        &lt;property name=&quot;set&quot;&gt;</div><div class=\"line\">            &lt;set&gt;</div><div class=\"line\">                &lt;value&gt;v1&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;v2&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;v3&lt;/value&gt;</div><div class=\"line\">            &lt;/set&gt;</div><div class=\"line\">        &lt;/property&gt;</div><div class=\"line\"></div><div class=\"line\">        //数组</div><div class=\"line\">        &lt;property name=&quot;strs&quot;&gt;</div><div class=\"line\">            &lt;list&gt;</div><div class=\"line\">                &lt;value&gt;str1&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;str2&lt;/value&gt;</div><div class=\"line\">                &lt;value&gt;str3&lt;/value&gt;</div><div class=\"line\">            &lt;/list&gt;</div><div class=\"line\">        &lt;/property&gt;</div><div class=\"line\"></div><div class=\"line\">        //Map</div><div class=\"line\">        &lt;property name=&quot;map&quot;&gt;</div><div class=\"line\">            &lt;entry key=&quot;k1&quot; value=&quot;v1&quot;&gt;&lt;/entry&gt;</div><div class=\"line\">            &lt;entry key=&quot;k2&quot; value=&quot;v2&quot;&gt;&lt;/entry&gt;</div><div class=\"line\">            &lt;entry key=&quot;k3&quot; value=&quot;v3&quot;&gt;&lt;/entry&gt;</div><div class=\"line\">        &lt;/property&gt;</div><div class=\"line\"></div><div class=\"line\">        //properpies文件</div><div class=\"line\">        &lt;property name=&quot;pros&quot;&gt;</div><div class=\"line\">            &lt;props&gt;</div><div class=\"line\">                &lt;prop key=&quot;key1&quot;&gt;value1&lt;/prop&gt;</div><div class=\"line\">                &lt;prop key=&quot;key2&quot;&gt;value2&lt;/prop&gt;</div><div class=\"line\">            &lt;/props&gt;</div><div class=\"line\">        &lt;/property&gt;</div><div class=\"line\">    &lt;/bean&gt;</div></pre></td></tr></table></figure>\n<ul>\n<li>构造方法注入—-通过类的构造方法注入属性值<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;bean id=&quot;userDao1&quot; class=&quot;cn.itcast.spring.di.UserDao&quot;&gt;</div><div class=\"line\">    &lt;constructor-arg index=&quot;0&quot; value=&quot;小白&quot; /&gt;</div><div class=\"line\">    &lt;constructor-arg index=&quot;1&quot; value=&quot;20&quot; /&gt;</div><div class=\"line\">&lt;/bean&gt;</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"注解方式-1\"><a href=\"#注解方式-1\" class=\"headerlink\" title=\"注解方式\"></a>注解方式</h4><p>对于Bean属性的依赖注入分为两类，一类是对于属性是String类型或者基本数据类型Spring容器提供了@Value这个注解，另一类是对于属性是对象的提供了@Autowired和@Resource这两个注解。</p>\n<p>1．Resource注解:可以按照对象的类型注入，也可以按照对象的唯一标识注入<br>  @Resource(name=”userDao”)  //从工厂拿出userDao对象</p>\n<p>2．AutoWired注解：只能按照对象的类型注入，如果需要按照对象的唯一标识注入，需要使用另外一个注解@Qualifier(value=”userDao”)使用<br>注意：Resource和AutoWired使用在属性上</p>"},{"title":"spring小结（一）———把类加入Spring工厂","date":"2017-09-17T10:49:24.000Z","_content":"　　之前我们需要一个对象时，就得自己new一个新对象；现在我们把需要的类通过配置文件或注解方式放到spring工厂，它负责帮我们创建对象，我们需要哪一个类的对象时，就从工厂取出对象，我们无需再手动创建对象。\n<!--more-->\n　　那么如何把需要的类加入Spring工厂呢？我们有两种方式：配置文件方式和注解方式。\n\n#### 配置文件方式（用于不是自己编写的类，无法在类上加注解)\nbeans.xml(spring配置文件)\n```\n    <!-- 加入约束  -->\n    xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans \n                        http://www.springframework.org/schema/beans/spring-beans.xsd\"\n                        \n    <!-- 通过bean标签可以注册一个类，由spring框架负责创建此类的一个对象 -->\n    <!-- id:此对象的一个唯一标识，可以通过此id从spring工厂中获取一个对象 \n    class:类的全路径 scope: prototype(原型) Singleton(单例，默认)-->\n    <bean scope=\"prototype\" id=\"userService\" class=\"cn.itcast.spring.UserService\" >\n```\nSingleton：单例-----同一个类，在spring工厂中只有唯一的一个实例(同一个对象)\nPrototype：原型-----同一个类，在spring工厂中有多个实例\n    \n\n>  Action:一般使用原型\n        Service:一般使用单例\n        Dao:一般使用单例\n\n##### 三种实例化bean的方式\n1.调用无参构造方法创建对象\n```\n    //通过构造方法创建UserService对象\n    <bean id=\"userService\" class=\"cn.itcast.spring.UserService\" />\n```\n\n2.使用静态工厂方法创建对象\n```\n    <bean id=\"userService\" class=\"cn.itcast.spring.StaticUserServiceFactory\" factory-method=\"createUserService\" />\n\n    //在StaticUserServiceFactory类创建UserService对象\n    public class StaticUserServiceFactory {\n        public static UserService createUserService(){\n            return new UserService();\n    }\n}\n```\n\n3.使用实例工厂方法创建对象\n```\n    <bean id=\"factory\" class=\"cn.itcast.spring.InstaceUserServiceFactory\"></bean>\n    <bean id=\"userService\" factory-bean=\"factory\" factory-method=\"createUserService\"></bean>\n\n    public class InstaceUserServiceFactory {\n        public UserService createUserService(){\n            return new UserService();\n    }\n}\n```\n\n  \n#### 注解方式（用于自己编写的类）\n\n1.在beans.xml中加入约束 \n\n```\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\" http://www.springframework.org/schema/beans \n                            http://www.springframework.org/schema/beans/spring-beans.xsd\n                            http://www.springframework.org/schema/context \n                            http://www.springframework.org/schema/context/spring-context.xsd\">\n```\n2.在beans.xml中配置组件扫描和支持注解：\n```\n    <!-- 配置组件扫描:由spring框架负责扫描指定的包下的类,为该包下的添加了注解的类创建对象  -->\n    <context:component-scan base-package=\"cn.itcast.spring.annotation\"/>\n    <!-- 加入spring的注解支持：引入spring的注解解析器 -->\n    <context:annotation-config/>\n```\n3.编写一个类，在类上加入注解： \n```\n//等价于在beans.xml中配置<bean id=\"\" class=\"\">\n\n@Repository------Dao层\n@Controller-----Action层\n@Service-------Service层\n@Component(\"test\")//通用的，test唯一标识\n四个注解作用一样，起区分作用\n\n@Scope(\"prototype\")//指定bean的作用域为原型方式\n```\n\n在工厂放入需要的类后，就可以在需要时取出类的对象了\n```\n    <!-- 读取beans文件，创建spring工厂 -->\n    ApplicationContext ctx = new ClassPathXmlApplicationContext(\"beans.xml\");\n    <!-- 通过id从spring工厂获取一个对象 -->\n    UserDao userDao = (UserDao) ctx.getBean(\"userDao\");  //（userDao）类名，首字母小写\n```\n\n#### 使用多个XML文件\n![](https://raw.githubusercontent.com/fallinsilence/usedPictures/master/moreXML.jpg)\n\n\n\n","source":"_posts/spring/spring1.md","raw":"---\ntitle: spring小结（一）———把类加入Spring工厂\ndate: 2017-09-17 18:49:24\ncategories: spring\ntags: JavaEE框架\n---\n　　之前我们需要一个对象时，就得自己new一个新对象；现在我们把需要的类通过配置文件或注解方式放到spring工厂，它负责帮我们创建对象，我们需要哪一个类的对象时，就从工厂取出对象，我们无需再手动创建对象。\n<!--more-->\n　　那么如何把需要的类加入Spring工厂呢？我们有两种方式：配置文件方式和注解方式。\n\n#### 配置文件方式（用于不是自己编写的类，无法在类上加注解)\nbeans.xml(spring配置文件)\n```\n    <!-- 加入约束  -->\n    xmlns=\"http://www.springframework.org/schema/beans\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://www.springframework.org/schema/beans \n                        http://www.springframework.org/schema/beans/spring-beans.xsd\"\n                        \n    <!-- 通过bean标签可以注册一个类，由spring框架负责创建此类的一个对象 -->\n    <!-- id:此对象的一个唯一标识，可以通过此id从spring工厂中获取一个对象 \n    class:类的全路径 scope: prototype(原型) Singleton(单例，默认)-->\n    <bean scope=\"prototype\" id=\"userService\" class=\"cn.itcast.spring.UserService\" >\n```\nSingleton：单例-----同一个类，在spring工厂中只有唯一的一个实例(同一个对象)\nPrototype：原型-----同一个类，在spring工厂中有多个实例\n    \n\n>  Action:一般使用原型\n        Service:一般使用单例\n        Dao:一般使用单例\n\n##### 三种实例化bean的方式\n1.调用无参构造方法创建对象\n```\n    //通过构造方法创建UserService对象\n    <bean id=\"userService\" class=\"cn.itcast.spring.UserService\" />\n```\n\n2.使用静态工厂方法创建对象\n```\n    <bean id=\"userService\" class=\"cn.itcast.spring.StaticUserServiceFactory\" factory-method=\"createUserService\" />\n\n    //在StaticUserServiceFactory类创建UserService对象\n    public class StaticUserServiceFactory {\n        public static UserService createUserService(){\n            return new UserService();\n    }\n}\n```\n\n3.使用实例工厂方法创建对象\n```\n    <bean id=\"factory\" class=\"cn.itcast.spring.InstaceUserServiceFactory\"></bean>\n    <bean id=\"userService\" factory-bean=\"factory\" factory-method=\"createUserService\"></bean>\n\n    public class InstaceUserServiceFactory {\n        public UserService createUserService(){\n            return new UserService();\n    }\n}\n```\n\n  \n#### 注解方式（用于自己编写的类）\n\n1.在beans.xml中加入约束 \n\n```\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\" http://www.springframework.org/schema/beans \n                            http://www.springframework.org/schema/beans/spring-beans.xsd\n                            http://www.springframework.org/schema/context \n                            http://www.springframework.org/schema/context/spring-context.xsd\">\n```\n2.在beans.xml中配置组件扫描和支持注解：\n```\n    <!-- 配置组件扫描:由spring框架负责扫描指定的包下的类,为该包下的添加了注解的类创建对象  -->\n    <context:component-scan base-package=\"cn.itcast.spring.annotation\"/>\n    <!-- 加入spring的注解支持：引入spring的注解解析器 -->\n    <context:annotation-config/>\n```\n3.编写一个类，在类上加入注解： \n```\n//等价于在beans.xml中配置<bean id=\"\" class=\"\">\n\n@Repository------Dao层\n@Controller-----Action层\n@Service-------Service层\n@Component(\"test\")//通用的，test唯一标识\n四个注解作用一样，起区分作用\n\n@Scope(\"prototype\")//指定bean的作用域为原型方式\n```\n\n在工厂放入需要的类后，就可以在需要时取出类的对象了\n```\n    <!-- 读取beans文件，创建spring工厂 -->\n    ApplicationContext ctx = new ClassPathXmlApplicationContext(\"beans.xml\");\n    <!-- 通过id从spring工厂获取一个对象 -->\n    UserDao userDao = (UserDao) ctx.getBean(\"userDao\");  //（userDao）类名，首字母小写\n```\n\n#### 使用多个XML文件\n![](https://raw.githubusercontent.com/fallinsilence/usedPictures/master/moreXML.jpg)\n\n\n\n","slug":"spring/spring1","published":1,"updated":"2018-06-01T00:31:15.608Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cji5dwz7q000gyodkic71h8km","content":"<p>　　之前我们需要一个对象时，就得自己new一个新对象；现在我们把需要的类通过配置文件或注解方式放到spring工厂，它负责帮我们创建对象，我们需要哪一个类的对象时，就从工厂取出对象，我们无需再手动创建对象。<br><a id=\"more\"></a><br>　　那么如何把需要的类加入Spring工厂呢？我们有两种方式：配置文件方式和注解方式。</p>\n<h4 id=\"配置文件方式（用于不是自己编写的类，无法在类上加注解\"><a href=\"#配置文件方式（用于不是自己编写的类，无法在类上加注解\" class=\"headerlink\" title=\"配置文件方式（用于不是自己编写的类，无法在类上加注解)\"></a>配置文件方式（用于不是自己编写的类，无法在类上加注解)</h4><p>beans.xml(spring配置文件)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 加入约束  --&gt;</div><div class=\"line\">xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans </div><div class=\"line\">                    http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</div><div class=\"line\">                    </div><div class=\"line\">&lt;!-- 通过bean标签可以注册一个类，由spring框架负责创建此类的一个对象 --&gt;</div><div class=\"line\">&lt;!-- id:此对象的一个唯一标识，可以通过此id从spring工厂中获取一个对象 </div><div class=\"line\">class:类的全路径 scope: prototype(原型) Singleton(单例，默认)--&gt;</div><div class=\"line\">&lt;bean scope=&quot;prototype&quot; id=&quot;userService&quot; class=&quot;cn.itcast.spring.UserService&quot; &gt;</div></pre></td></tr></table></figure></p>\n<p>Singleton：单例—–同一个类，在spring工厂中只有唯一的一个实例(同一个对象)<br>Prototype：原型—–同一个类，在spring工厂中有多个实例</p>\n<blockquote>\n<p> Action:一般使用原型<br>        Service:一般使用单例<br>        Dao:一般使用单例</p>\n</blockquote>\n<h5 id=\"三种实例化bean的方式\"><a href=\"#三种实例化bean的方式\" class=\"headerlink\" title=\"三种实例化bean的方式\"></a>三种实例化bean的方式</h5><p>1.调用无参构造方法创建对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//通过构造方法创建UserService对象</div><div class=\"line\">&lt;bean id=&quot;userService&quot; class=&quot;cn.itcast.spring.UserService&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>2.使用静态工厂方法创建对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">    &lt;bean id=&quot;userService&quot; class=&quot;cn.itcast.spring.StaticUserServiceFactory&quot; factory-method=&quot;createUserService&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    //在StaticUserServiceFactory类创建UserService对象</div><div class=\"line\">    public class StaticUserServiceFactory &#123;</div><div class=\"line\">        public static UserService createUserService()&#123;</div><div class=\"line\">            return new UserService();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>3.使用实例工厂方法创建对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">    &lt;bean id=&quot;factory&quot; class=&quot;cn.itcast.spring.InstaceUserServiceFactory&quot;&gt;&lt;/bean&gt;</div><div class=\"line\">    &lt;bean id=&quot;userService&quot; factory-bean=&quot;factory&quot; factory-method=&quot;createUserService&quot;&gt;&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">    public class InstaceUserServiceFactory &#123;</div><div class=\"line\">        public UserService createUserService()&#123;</div><div class=\"line\">            return new UserService();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"注解方式（用于自己编写的类）\"><a href=\"#注解方式（用于自己编写的类）\" class=\"headerlink\" title=\"注解方式（用于自己编写的类）\"></a>注解方式（用于自己编写的类）</h4><p>1.在beans.xml中加入约束 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class=\"line\">       xsi:schemaLocation=&quot; http://www.springframework.org/schema/beans </div><div class=\"line\">                            http://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">                            http://www.springframework.org/schema/context </div><div class=\"line\">                            http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;</div></pre></td></tr></table></figure>\n<p>2.在beans.xml中配置组件扫描和支持注解：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 配置组件扫描:由spring框架负责扫描指定的包下的类,为该包下的添加了注解的类创建对象  --&gt;</div><div class=\"line\">&lt;context:component-scan base-package=&quot;cn.itcast.spring.annotation&quot;/&gt;</div><div class=\"line\">&lt;!-- 加入spring的注解支持：引入spring的注解解析器 --&gt;</div><div class=\"line\">&lt;context:annotation-config/&gt;</div></pre></td></tr></table></figure></p>\n<p>3.编写一个类，在类上加入注解：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">//等价于在beans.xml中配置&lt;bean id=&quot;&quot; class=&quot;&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">@Repository------Dao层</div><div class=\"line\">@Controller-----Action层</div><div class=\"line\">@Service-------Service层</div><div class=\"line\">@Component(&quot;test&quot;)//通用的，test唯一标识</div><div class=\"line\">四个注解作用一样，起区分作用</div><div class=\"line\"></div><div class=\"line\">@Scope(&quot;prototype&quot;)//指定bean的作用域为原型方式</div></pre></td></tr></table></figure></p>\n<p>在工厂放入需要的类后，就可以在需要时取出类的对象了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 读取beans文件，创建spring工厂 --&gt;</div><div class=\"line\">ApplicationContext ctx = new ClassPathXmlApplicationContext(&quot;beans.xml&quot;);</div><div class=\"line\">&lt;!-- 通过id从spring工厂获取一个对象 --&gt;</div><div class=\"line\">UserDao userDao = (UserDao) ctx.getBean(&quot;userDao&quot;);  //（userDao）类名，首字母小写</div></pre></td></tr></table></figure></p>\n<h4 id=\"使用多个XML文件\"><a href=\"#使用多个XML文件\" class=\"headerlink\" title=\"使用多个XML文件\"></a>使用多个XML文件</h4><p><img src=\"https://raw.githubusercontent.com/fallinsilence/usedPictures/master/moreXML.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p>　　之前我们需要一个对象时，就得自己new一个新对象；现在我们把需要的类通过配置文件或注解方式放到spring工厂，它负责帮我们创建对象，我们需要哪一个类的对象时，就从工厂取出对象，我们无需再手动创建对象。<br>","more":"<br>　　那么如何把需要的类加入Spring工厂呢？我们有两种方式：配置文件方式和注解方式。</p>\n<h4 id=\"配置文件方式（用于不是自己编写的类，无法在类上加注解\"><a href=\"#配置文件方式（用于不是自己编写的类，无法在类上加注解\" class=\"headerlink\" title=\"配置文件方式（用于不是自己编写的类，无法在类上加注解)\"></a>配置文件方式（用于不是自己编写的类，无法在类上加注解)</h4><p>beans.xml(spring配置文件)<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 加入约束  --&gt;</div><div class=\"line\">xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans </div><div class=\"line\">                    http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</div><div class=\"line\">                    </div><div class=\"line\">&lt;!-- 通过bean标签可以注册一个类，由spring框架负责创建此类的一个对象 --&gt;</div><div class=\"line\">&lt;!-- id:此对象的一个唯一标识，可以通过此id从spring工厂中获取一个对象 </div><div class=\"line\">class:类的全路径 scope: prototype(原型) Singleton(单例，默认)--&gt;</div><div class=\"line\">&lt;bean scope=&quot;prototype&quot; id=&quot;userService&quot; class=&quot;cn.itcast.spring.UserService&quot; &gt;</div></pre></td></tr></table></figure></p>\n<p>Singleton：单例—–同一个类，在spring工厂中只有唯一的一个实例(同一个对象)<br>Prototype：原型—–同一个类，在spring工厂中有多个实例</p>\n<blockquote>\n<p> Action:一般使用原型<br>        Service:一般使用单例<br>        Dao:一般使用单例</p>\n</blockquote>\n<h5 id=\"三种实例化bean的方式\"><a href=\"#三种实例化bean的方式\" class=\"headerlink\" title=\"三种实例化bean的方式\"></a>三种实例化bean的方式</h5><p>1.调用无参构造方法创建对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">//通过构造方法创建UserService对象</div><div class=\"line\">&lt;bean id=&quot;userService&quot; class=&quot;cn.itcast.spring.UserService&quot; /&gt;</div></pre></td></tr></table></figure></p>\n<p>2.使用静态工厂方法创建对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">    &lt;bean id=&quot;userService&quot; class=&quot;cn.itcast.spring.StaticUserServiceFactory&quot; factory-method=&quot;createUserService&quot; /&gt;</div><div class=\"line\"></div><div class=\"line\">    //在StaticUserServiceFactory类创建UserService对象</div><div class=\"line\">    public class StaticUserServiceFactory &#123;</div><div class=\"line\">        public static UserService createUserService()&#123;</div><div class=\"line\">            return new UserService();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>3.使用实例工厂方法创建对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">    &lt;bean id=&quot;factory&quot; class=&quot;cn.itcast.spring.InstaceUserServiceFactory&quot;&gt;&lt;/bean&gt;</div><div class=\"line\">    &lt;bean id=&quot;userService&quot; factory-bean=&quot;factory&quot; factory-method=&quot;createUserService&quot;&gt;&lt;/bean&gt;</div><div class=\"line\"></div><div class=\"line\">    public class InstaceUserServiceFactory &#123;</div><div class=\"line\">        public UserService createUserService()&#123;</div><div class=\"line\">            return new UserService();</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"注解方式（用于自己编写的类）\"><a href=\"#注解方式（用于自己编写的类）\" class=\"headerlink\" title=\"注解方式（用于自己编写的类）\"></a>注解方式（用于自己编写的类）</h4><p>1.在beans.xml中加入约束 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class=\"line\">       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class=\"line\">       xsi:schemaLocation=&quot; http://www.springframework.org/schema/beans </div><div class=\"line\">                            http://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">                            http://www.springframework.org/schema/context </div><div class=\"line\">                            http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;</div></pre></td></tr></table></figure>\n<p>2.在beans.xml中配置组件扫描和支持注解：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 配置组件扫描:由spring框架负责扫描指定的包下的类,为该包下的添加了注解的类创建对象  --&gt;</div><div class=\"line\">&lt;context:component-scan base-package=&quot;cn.itcast.spring.annotation&quot;/&gt;</div><div class=\"line\">&lt;!-- 加入spring的注解支持：引入spring的注解解析器 --&gt;</div><div class=\"line\">&lt;context:annotation-config/&gt;</div></pre></td></tr></table></figure></p>\n<p>3.编写一个类，在类上加入注解：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">//等价于在beans.xml中配置&lt;bean id=&quot;&quot; class=&quot;&quot;&gt;</div><div class=\"line\"></div><div class=\"line\">@Repository------Dao层</div><div class=\"line\">@Controller-----Action层</div><div class=\"line\">@Service-------Service层</div><div class=\"line\">@Component(&quot;test&quot;)//通用的，test唯一标识</div><div class=\"line\">四个注解作用一样，起区分作用</div><div class=\"line\"></div><div class=\"line\">@Scope(&quot;prototype&quot;)//指定bean的作用域为原型方式</div></pre></td></tr></table></figure></p>\n<p>在工厂放入需要的类后，就可以在需要时取出类的对象了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 读取beans文件，创建spring工厂 --&gt;</div><div class=\"line\">ApplicationContext ctx = new ClassPathXmlApplicationContext(&quot;beans.xml&quot;);</div><div class=\"line\">&lt;!-- 通过id从spring工厂获取一个对象 --&gt;</div><div class=\"line\">UserDao userDao = (UserDao) ctx.getBean(&quot;userDao&quot;);  //（userDao）类名，首字母小写</div></pre></td></tr></table></figure></p>\n<h4 id=\"使用多个XML文件\"><a href=\"#使用多个XML文件\" class=\"headerlink\" title=\"使用多个XML文件\"></a>使用多个XML文件</h4><p><img src=\"https://raw.githubusercontent.com/fallinsilence/usedPictures/master/moreXML.jpg\" alt=\"\"></p>"},{"title":"spring总结（三）———— AOP","date":"2017-09-17T11:10:45.000Z","_content":"\n# AOP（面向切面编程）\n引用知乎上的一段话来解释AOP：\n<!--more-->\n> 这种在运行时，动态地将代码切入到类的指定方法、指定位置上的编程思想就是面向切面的编程。\n\n> AOP 实现的关键就在于 AOP 框架自动创建的 AOP 代理，AOP代理则可分为静态代理和动态代理两大类，其中静态代理是指使用 AOP 框架提供的命令进行编译，从而在编译阶段就可生成 AOP 代理类，因此也称为编译时增强；而动态代理则在运行时借助于 JDK 动态代理、CGLIB 等在内存中“临时”生成 AOP 动态代理类，因此也被称为运行时增强。\nSpring AOP是运行时增强，而AspectJ是编译时增强。\n转载链接：http://www.jianshu.com/p/fe8d1e8bd63e\n\n## AOP相关术语解释\n+ JoinPoint(连接点)：被拦截的所有方法\n+ PointCut(切入点)：指我们对哪些JoinPoint拦截的定义\n+ Advice(通知)：指拦截到JoinPoint后所要做的事\n+ Target(目标对象)：代理的目标对象\n+ Proxy(代理对象)：一个类被AOP增强后，就产生一个结果代理类\n+ Aspect(切面)：是切点和通知的结合\n\n\n## 静态代理\n需要增强的类（目标对象），和增强了目标对象的类（代理对象）必须继承同一个接口。\n　　目标对象------实现上面的接口的一个实现类\n　　代理对象------实现上面的接口的一个实现类,持有目标对象的引用,在调用目标对象方法前后加入代码。\n但这样的弊端就是，每增强一个方法，都需要创建一个代理类，代码任务繁重。\n所以引入了自动代理，jvm自动帮我们生成代理类。\n\n## 动态代理的两种方式\n### JDK代理\n使用jdk的动态代理技术可以为指定的目标对象创建一个代理对象，**要求目标对象必须至少实现一个接口**\n```\n 　　　  // 创建一个目标对象\n\t\tfinal IUserDao target = new UserDaoImpl();\n\t\t// 为target创建一个代理对象\n\t\tIUserDao proxy = (IUserDao) Proxy.newProxyInstance(target.getClass()\n\t\t\t\t.getClassLoader(), target.getClass().getInterfaces(),\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t// 使用此方法在代理对象中拦截目标对象的方法\n\t\t\t\t\tpublic Object invoke(Object proxy, Method method,\n\t\t\t\t\t\t\tObject[] args) throws Throwable {\n\t\t\t\t\t\tObject object = method.invoke(target, args);// 调用目标对象的方法\n\t\t\t\t\t\tSystem.out.println(\"在代理对象中拦截到了一个目标对象的方法：\"\n\t\t\t\t\t\t\t\t+ method.getName());// 通知\n\t\t\t\t\t\treturn object;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t/*\n\t\t * proxy为代理类，执行下列三个方法，都会执行invoke方法，\n\t\t * 在该invoke方法中，先调用原先的方法，再打印一行字，增强了原对象方法\n\t\t */\n\t\tproxy.save(\"小明\");\n\t\tproxy.delete();\n\t\tproxy.update();\n```\n\n### cglib代理\n使用cglib创建代理对象，不要求目标对象必须实现接口，要求目标对象不能是final的类,**使用cglib创建的代理对象是目标对象类的一个子类对象**\n```\n //创建一个目标对象\n\tfinal UserDao target = new UserDao();\n\t//创建一个用于产生代理对象的实例\n\tEnhancer en = new Enhancer();\n    //指定为谁创建代理对象\n\ten.setSuperclass(target.getClass());\n\ten.setCallback(new MethodInterceptor() {\n    //拦截的方法\n    public Object intercept(Object obj, Method method, Object[] args,\n\t\tMethodProxy proxy) throws Throwable {\n\t\tSystem.out.println(\"在代理对象中拦截到了一个目标对象的方法：\" + method.getName());\n\t\treturn method.invoke(target, args);\n\t\t}\n\t\t});\n\t\t//创建代理对象\n\t\tUserDao proxy = (UserDao) en.create();\n\t\tproxy.save(\"xiaobai\");\n\t\tproxy.delete();\n\t\tproxy.update();\n```\n\n因Spring AOP使用效果不佳，不在此介绍，我们学习更优秀的**aspectJ框架**实现AOP\n\n# aspectJ(比Spring AOP更优秀的AOP实现框架)\n\n## 使用XML配置aspectJ\n1.在spring配置文件中引入aop的约束头信息\n```\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\t   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n\t   xmlns:context=\"http://www.springframework.org/schema/context\"\n\t   xmlns:aop=\"http://www.springframework.org/schema/aop\"\n\t   xsi:schemaLocation=\" http://www.springframework.org/schema/beans \n       \t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd\n\t\t\t\thttp://www.springframework.org/schema/context \n\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd\n\t\t\t\thttp://www.springframework.org/schema/aop \n\t\t\t\thttp://www.springframework.org/schema/aop/spring-aop.xsd\n```\n2.在spring配置文件中开启aspectJ框架的自动代理功能\n```\n<!-- 开启自动代理功能 -->\n\t<aop:aspectj-autoproxy/>\n```\n3.编写一个目标类\n4.编写一个切面类\n5.在beans.xml中注册目标对象和切面类\n```\n\t<!-- 注册目标对象 -->\n\t<bean id=\"userDao\" class=\"cn.itcast.aop.aspectJ.xml.UserDao\"/>\n\t<!-- 注册切面类 -->\n\t<bean id=\"myAdvisor\" class=\"cn.itcast.aop.aspectJ.xml.MyAdvisor\"/>\n```\n6.使用框架提供的方式配置AOP切面\n```\n<!-- 使用xml方式配置aop切面 -->\n\t<aop:config>\n\t\t<!-- 切面 = 通知 +切点 -->\n\t\t<aop:aspect id=\"myAspect\" ref=\"myAdvisor\">\n\t\t\t<!-- 定义切点表达式 -->\n\t\t\t<aop:pointcut expression=\"execution(* cn.itcast.aop.aspectJ.xml.*Dao.*(..))\"\n\t\t\t\t id=\"myPointCut\"/>\n\t\t\t<!-- 前置通知 -->\n\t\t\t<aop:before method=\"before1\" pointcut-ref=\"myPointCut\"/>\n\t\t\t<!-- 后置通知 -->\n\t\t\t<aop:after-returning method=\"afterReturing1\" returning=\"ret\" pointcut-ref=\"myPointCut\"/>\n\t\t\t<!-- 环绕通知 -->\n\t\t\t<aop:around method=\"around1\" pointcut-ref=\"myPointCut\"/>\n\t\t\t<!-- 异常通知 -->\n\t\t\t<aop:after-throwing method=\"afterThrowing1\" throwing=\"ex\" pointcut-ref=\"myPointCut\"/>\n\t\t\t<!-- 最终通知 -->\n\t\t\t<aop:after method=\"after1\" pointcut-ref=\"myPointCut\"/>\n\t\t</aop:aspect>\n\t</aop:config>\n```\n\n## 注解方式配置aspectJ\n1.在spring配置文件中引入aop的约束头信息\n```\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\t   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n\t   xmlns:context=\"http://www.springframework.org/schema/context\"\n\t   xmlns:aop=\"http://www.springframework.org/schema/aop\"\n\t   xsi:schemaLocation=\" http://www.springframework.org/schema/beans \n       \t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd\n\t\t\t\thttp://www.springframework.org/schema/context \n\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd\t\t\t\t\t\n\t\t\t\thttp://www.springframework.org/schema/aop \t\t\t\t\t\t\n\t\t\t\thttp://www.springframework.org/schema/aop/spring-aop.xsd\n```\n2.在spring配置文件中开启aspectJ框架在自动代理功能\n```\n<!-- 开启自动代理功能 -->\n\t<aop:aspectj-autoproxy/>\n```\n3.编写一个目标类\n4.编写一个切面类，在类上使用@Aspect注解，在类的方法上使用@Before注解定义前置通知\n```\npublic class MyAdvisor {\t\n    @Pointcut(value=\"execution(* cn.hugang.aop.aspectJ.annotation.*Dao.*(..))\")\n\tpublic void myPointCut(){};\n\t\n\t// 定义一个前置通知方法,通过切点表达式描述要拦截的目标对象的方法\n\t@Before(value = \"MyAdvisor.myPointCut()\")//引用上面定义的切点表达式\n\tpublic void before1(JoinPoint jp) {            //连接点对象\n\t\t//System.out.println(\"【前置通知】拦截的的方法：\" + jp.getSignature().getName());\n\t}\n｝\n```\n5.在spring配置文件中注册目标对象和切面类\n6.读取spring配置文件，从spring工厂中获取一个代理对象\n```\n    ApplicationContext ctx = new ClassPathXmlApplicationContext(\"cn/hugang/aop/aspectJ/annotation/beans.xml\");\n\t\tUserDao userDao = (UserDao) ctx.getBean(\"userDao\");\n\t\tuserDao.save(\"\");\n\t\tuserDao.delete();\n\t\tuserDao.update();\n\t\tSystem.out.println(userDao.getClass().getSimpleName())\n```\n7.后置，环绕，异常，最终通知\n```\n\t//统一抽取一个切点表达式\n\t@Pointcut(value=\"execution(* cn.hugang.aop.aspectJ.annotation.*Dao.*(..))\")\n\tpublic void myPointCut(){};\n\t\n\t//后置通知\n//returning=\"ret\"   ret:拦截到的方法执行后的返回值\n\t@AfterReturning(value=\"MyAdvisor.myPointCut()\",returning=\"ret\")\n\tpublic void afterReturing1(JoinPoint jp,Object ret){\n\t\t//System.out.println(\"【后置通知】拦截的的方法：\" + jp.getSignature().getName() + \",此方法的执行结果为：\" + ret);\n\t}\n\t\n\t//环绕通知\n\t@Around(value=\"MyAdvisor.myPointCut()\")\n\tpublic Object around1(ProceedingJoinPoint pjp) throws Throwable{\n\t\t//System.out.println(\"【环绕通知】前\");\n\t\t//必须在环绕通知中手动调用目标对象的方法，否则目标对象的方法将被拦截，不会执行\n\t\tObject value = pjp.proceed();//调用目标对象的方法\n\t\t//System.out.println(\"【环绕通知】后\");\n\t\treturn value;\n\t}\n\t\n\t//异常通知\n\t@AfterThrowing(value=\"MyAdvisor.myPointCut()\",throwing=\"ex\")  //ex:异常的信息\n\tpublic void afterThrowing1(JoinPoint jp,Throwable ex){\n\t\tSystem.out.println(\"【异常通知】执行了，拦截到的目标方法为：\" + jp.getSignature().getName() + \",异常信息为：\" + ex);\n\t}\n\n\t//最终通知\n\t@After(value=\"MyAdvisor.myPointCut()\")\n\tpublic void after1(JoinPoint jp){\n\t\tSystem.out.println(\"【最终通知】拦截到目标方法：\" + jp.getSignature().getName());\n\t}\n```","source":"_posts/spring/spring3.md","raw":"---\ntitle: spring总结（三）———— AOP\ndate: 2017-09-17 19:10:45\ntags: JavaEE框架\ncategories: spring\n---\n\n# AOP（面向切面编程）\n引用知乎上的一段话来解释AOP：\n<!--more-->\n> 这种在运行时，动态地将代码切入到类的指定方法、指定位置上的编程思想就是面向切面的编程。\n\n> AOP 实现的关键就在于 AOP 框架自动创建的 AOP 代理，AOP代理则可分为静态代理和动态代理两大类，其中静态代理是指使用 AOP 框架提供的命令进行编译，从而在编译阶段就可生成 AOP 代理类，因此也称为编译时增强；而动态代理则在运行时借助于 JDK 动态代理、CGLIB 等在内存中“临时”生成 AOP 动态代理类，因此也被称为运行时增强。\nSpring AOP是运行时增强，而AspectJ是编译时增强。\n转载链接：http://www.jianshu.com/p/fe8d1e8bd63e\n\n## AOP相关术语解释\n+ JoinPoint(连接点)：被拦截的所有方法\n+ PointCut(切入点)：指我们对哪些JoinPoint拦截的定义\n+ Advice(通知)：指拦截到JoinPoint后所要做的事\n+ Target(目标对象)：代理的目标对象\n+ Proxy(代理对象)：一个类被AOP增强后，就产生一个结果代理类\n+ Aspect(切面)：是切点和通知的结合\n\n\n## 静态代理\n需要增强的类（目标对象），和增强了目标对象的类（代理对象）必须继承同一个接口。\n　　目标对象------实现上面的接口的一个实现类\n　　代理对象------实现上面的接口的一个实现类,持有目标对象的引用,在调用目标对象方法前后加入代码。\n但这样的弊端就是，每增强一个方法，都需要创建一个代理类，代码任务繁重。\n所以引入了自动代理，jvm自动帮我们生成代理类。\n\n## 动态代理的两种方式\n### JDK代理\n使用jdk的动态代理技术可以为指定的目标对象创建一个代理对象，**要求目标对象必须至少实现一个接口**\n```\n 　　　  // 创建一个目标对象\n\t\tfinal IUserDao target = new UserDaoImpl();\n\t\t// 为target创建一个代理对象\n\t\tIUserDao proxy = (IUserDao) Proxy.newProxyInstance(target.getClass()\n\t\t\t\t.getClassLoader(), target.getClass().getInterfaces(),\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t// 使用此方法在代理对象中拦截目标对象的方法\n\t\t\t\t\tpublic Object invoke(Object proxy, Method method,\n\t\t\t\t\t\t\tObject[] args) throws Throwable {\n\t\t\t\t\t\tObject object = method.invoke(target, args);// 调用目标对象的方法\n\t\t\t\t\t\tSystem.out.println(\"在代理对象中拦截到了一个目标对象的方法：\"\n\t\t\t\t\t\t\t\t+ method.getName());// 通知\n\t\t\t\t\t\treturn object;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t/*\n\t\t * proxy为代理类，执行下列三个方法，都会执行invoke方法，\n\t\t * 在该invoke方法中，先调用原先的方法，再打印一行字，增强了原对象方法\n\t\t */\n\t\tproxy.save(\"小明\");\n\t\tproxy.delete();\n\t\tproxy.update();\n```\n\n### cglib代理\n使用cglib创建代理对象，不要求目标对象必须实现接口，要求目标对象不能是final的类,**使用cglib创建的代理对象是目标对象类的一个子类对象**\n```\n //创建一个目标对象\n\tfinal UserDao target = new UserDao();\n\t//创建一个用于产生代理对象的实例\n\tEnhancer en = new Enhancer();\n    //指定为谁创建代理对象\n\ten.setSuperclass(target.getClass());\n\ten.setCallback(new MethodInterceptor() {\n    //拦截的方法\n    public Object intercept(Object obj, Method method, Object[] args,\n\t\tMethodProxy proxy) throws Throwable {\n\t\tSystem.out.println(\"在代理对象中拦截到了一个目标对象的方法：\" + method.getName());\n\t\treturn method.invoke(target, args);\n\t\t}\n\t\t});\n\t\t//创建代理对象\n\t\tUserDao proxy = (UserDao) en.create();\n\t\tproxy.save(\"xiaobai\");\n\t\tproxy.delete();\n\t\tproxy.update();\n```\n\n因Spring AOP使用效果不佳，不在此介绍，我们学习更优秀的**aspectJ框架**实现AOP\n\n# aspectJ(比Spring AOP更优秀的AOP实现框架)\n\n## 使用XML配置aspectJ\n1.在spring配置文件中引入aop的约束头信息\n```\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\t   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n\t   xmlns:context=\"http://www.springframework.org/schema/context\"\n\t   xmlns:aop=\"http://www.springframework.org/schema/aop\"\n\t   xsi:schemaLocation=\" http://www.springframework.org/schema/beans \n       \t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd\n\t\t\t\thttp://www.springframework.org/schema/context \n\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd\n\t\t\t\thttp://www.springframework.org/schema/aop \n\t\t\t\thttp://www.springframework.org/schema/aop/spring-aop.xsd\n```\n2.在spring配置文件中开启aspectJ框架的自动代理功能\n```\n<!-- 开启自动代理功能 -->\n\t<aop:aspectj-autoproxy/>\n```\n3.编写一个目标类\n4.编写一个切面类\n5.在beans.xml中注册目标对象和切面类\n```\n\t<!-- 注册目标对象 -->\n\t<bean id=\"userDao\" class=\"cn.itcast.aop.aspectJ.xml.UserDao\"/>\n\t<!-- 注册切面类 -->\n\t<bean id=\"myAdvisor\" class=\"cn.itcast.aop.aspectJ.xml.MyAdvisor\"/>\n```\n6.使用框架提供的方式配置AOP切面\n```\n<!-- 使用xml方式配置aop切面 -->\n\t<aop:config>\n\t\t<!-- 切面 = 通知 +切点 -->\n\t\t<aop:aspect id=\"myAspect\" ref=\"myAdvisor\">\n\t\t\t<!-- 定义切点表达式 -->\n\t\t\t<aop:pointcut expression=\"execution(* cn.itcast.aop.aspectJ.xml.*Dao.*(..))\"\n\t\t\t\t id=\"myPointCut\"/>\n\t\t\t<!-- 前置通知 -->\n\t\t\t<aop:before method=\"before1\" pointcut-ref=\"myPointCut\"/>\n\t\t\t<!-- 后置通知 -->\n\t\t\t<aop:after-returning method=\"afterReturing1\" returning=\"ret\" pointcut-ref=\"myPointCut\"/>\n\t\t\t<!-- 环绕通知 -->\n\t\t\t<aop:around method=\"around1\" pointcut-ref=\"myPointCut\"/>\n\t\t\t<!-- 异常通知 -->\n\t\t\t<aop:after-throwing method=\"afterThrowing1\" throwing=\"ex\" pointcut-ref=\"myPointCut\"/>\n\t\t\t<!-- 最终通知 -->\n\t\t\t<aop:after method=\"after1\" pointcut-ref=\"myPointCut\"/>\n\t\t</aop:aspect>\n\t</aop:config>\n```\n\n## 注解方式配置aspectJ\n1.在spring配置文件中引入aop的约束头信息\n```\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n\t   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \n\t   xmlns:context=\"http://www.springframework.org/schema/context\"\n\t   xmlns:aop=\"http://www.springframework.org/schema/aop\"\n\t   xsi:schemaLocation=\" http://www.springframework.org/schema/beans \n       \t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd\n\t\t\t\thttp://www.springframework.org/schema/context \n\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd\t\t\t\t\t\n\t\t\t\thttp://www.springframework.org/schema/aop \t\t\t\t\t\t\n\t\t\t\thttp://www.springframework.org/schema/aop/spring-aop.xsd\n```\n2.在spring配置文件中开启aspectJ框架在自动代理功能\n```\n<!-- 开启自动代理功能 -->\n\t<aop:aspectj-autoproxy/>\n```\n3.编写一个目标类\n4.编写一个切面类，在类上使用@Aspect注解，在类的方法上使用@Before注解定义前置通知\n```\npublic class MyAdvisor {\t\n    @Pointcut(value=\"execution(* cn.hugang.aop.aspectJ.annotation.*Dao.*(..))\")\n\tpublic void myPointCut(){};\n\t\n\t// 定义一个前置通知方法,通过切点表达式描述要拦截的目标对象的方法\n\t@Before(value = \"MyAdvisor.myPointCut()\")//引用上面定义的切点表达式\n\tpublic void before1(JoinPoint jp) {            //连接点对象\n\t\t//System.out.println(\"【前置通知】拦截的的方法：\" + jp.getSignature().getName());\n\t}\n｝\n```\n5.在spring配置文件中注册目标对象和切面类\n6.读取spring配置文件，从spring工厂中获取一个代理对象\n```\n    ApplicationContext ctx = new ClassPathXmlApplicationContext(\"cn/hugang/aop/aspectJ/annotation/beans.xml\");\n\t\tUserDao userDao = (UserDao) ctx.getBean(\"userDao\");\n\t\tuserDao.save(\"\");\n\t\tuserDao.delete();\n\t\tuserDao.update();\n\t\tSystem.out.println(userDao.getClass().getSimpleName())\n```\n7.后置，环绕，异常，最终通知\n```\n\t//统一抽取一个切点表达式\n\t@Pointcut(value=\"execution(* cn.hugang.aop.aspectJ.annotation.*Dao.*(..))\")\n\tpublic void myPointCut(){};\n\t\n\t//后置通知\n//returning=\"ret\"   ret:拦截到的方法执行后的返回值\n\t@AfterReturning(value=\"MyAdvisor.myPointCut()\",returning=\"ret\")\n\tpublic void afterReturing1(JoinPoint jp,Object ret){\n\t\t//System.out.println(\"【后置通知】拦截的的方法：\" + jp.getSignature().getName() + \",此方法的执行结果为：\" + ret);\n\t}\n\t\n\t//环绕通知\n\t@Around(value=\"MyAdvisor.myPointCut()\")\n\tpublic Object around1(ProceedingJoinPoint pjp) throws Throwable{\n\t\t//System.out.println(\"【环绕通知】前\");\n\t\t//必须在环绕通知中手动调用目标对象的方法，否则目标对象的方法将被拦截，不会执行\n\t\tObject value = pjp.proceed();//调用目标对象的方法\n\t\t//System.out.println(\"【环绕通知】后\");\n\t\treturn value;\n\t}\n\t\n\t//异常通知\n\t@AfterThrowing(value=\"MyAdvisor.myPointCut()\",throwing=\"ex\")  //ex:异常的信息\n\tpublic void afterThrowing1(JoinPoint jp,Throwable ex){\n\t\tSystem.out.println(\"【异常通知】执行了，拦截到的目标方法为：\" + jp.getSignature().getName() + \",异常信息为：\" + ex);\n\t}\n\n\t//最终通知\n\t@After(value=\"MyAdvisor.myPointCut()\")\n\tpublic void after1(JoinPoint jp){\n\t\tSystem.out.println(\"【最终通知】拦截到目标方法：\" + jp.getSignature().getName());\n\t}\n```","slug":"spring/spring3","published":1,"updated":"2017-09-17T12:25:25.892Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cji5dwz7s000jyodkv0hgmh38","content":"<h1 id=\"AOP（面向切面编程）\"><a href=\"#AOP（面向切面编程）\" class=\"headerlink\" title=\"AOP（面向切面编程）\"></a>AOP（面向切面编程）</h1><p>引用知乎上的一段话来解释AOP：<br><a id=\"more\"></a></p>\n<blockquote>\n<p>这种在运行时，动态地将代码切入到类的指定方法、指定位置上的编程思想就是面向切面的编程。</p>\n<p>AOP 实现的关键就在于 AOP 框架自动创建的 AOP 代理，AOP代理则可分为静态代理和动态代理两大类，其中静态代理是指使用 AOP 框架提供的命令进行编译，从而在编译阶段就可生成 AOP 代理类，因此也称为编译时增强；而动态代理则在运行时借助于 JDK 动态代理、CGLIB 等在内存中“临时”生成 AOP 动态代理类，因此也被称为运行时增强。<br>Spring AOP是运行时增强，而AspectJ是编译时增强。<br>转载链接：<a href=\"http://www.jianshu.com/p/fe8d1e8bd63e\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/fe8d1e8bd63e</a></p>\n</blockquote>\n<h2 id=\"AOP相关术语解释\"><a href=\"#AOP相关术语解释\" class=\"headerlink\" title=\"AOP相关术语解释\"></a>AOP相关术语解释</h2><ul>\n<li>JoinPoint(连接点)：被拦截的所有方法</li>\n<li>PointCut(切入点)：指我们对哪些JoinPoint拦截的定义</li>\n<li>Advice(通知)：指拦截到JoinPoint后所要做的事</li>\n<li>Target(目标对象)：代理的目标对象</li>\n<li>Proxy(代理对象)：一个类被AOP增强后，就产生一个结果代理类</li>\n<li>Aspect(切面)：是切点和通知的结合</li>\n</ul>\n<h2 id=\"静态代理\"><a href=\"#静态代理\" class=\"headerlink\" title=\"静态代理\"></a>静态代理</h2><p>需要增强的类（目标对象），和增强了目标对象的类（代理对象）必须继承同一个接口。<br>　　目标对象——实现上面的接口的一个实现类<br>　　代理对象——实现上面的接口的一个实现类,持有目标对象的引用,在调用目标对象方法前后加入代码。<br>但这样的弊端就是，每增强一个方法，都需要创建一个代理类，代码任务繁重。<br>所以引入了自动代理，jvm自动帮我们生成代理类。</p>\n<h2 id=\"动态代理的两种方式\"><a href=\"#动态代理的两种方式\" class=\"headerlink\" title=\"动态代理的两种方式\"></a>动态代理的两种方式</h2><h3 id=\"JDK代理\"><a href=\"#JDK代理\" class=\"headerlink\" title=\"JDK代理\"></a>JDK代理</h3><p>使用jdk的动态代理技术可以为指定的目标对象创建一个代理对象，<strong>要求目标对象必须至少实现一个接口</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"> 　　　  // 创建一个目标对象</div><div class=\"line\">final IUserDao target = new UserDaoImpl();</div><div class=\"line\">// 为target创建一个代理对象</div><div class=\"line\">IUserDao proxy = (IUserDao) Proxy.newProxyInstance(target.getClass()</div><div class=\"line\">\t\t.getClassLoader(), target.getClass().getInterfaces(),</div><div class=\"line\">\t\tnew InvocationHandler() &#123;</div><div class=\"line\">\t\t\t// 使用此方法在代理对象中拦截目标对象的方法</div><div class=\"line\">\t\t\tpublic Object invoke(Object proxy, Method method,</div><div class=\"line\">\t\t\t\t\tObject[] args) throws Throwable &#123;</div><div class=\"line\">\t\t\t\tObject object = method.invoke(target, args);// 调用目标对象的方法</div><div class=\"line\">\t\t\t\tSystem.out.println(&quot;在代理对象中拦截到了一个目标对象的方法：&quot;</div><div class=\"line\">\t\t\t\t\t\t+ method.getName());// 通知</div><div class=\"line\">\t\t\t\treturn object;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">/*</div><div class=\"line\"> * proxy为代理类，执行下列三个方法，都会执行invoke方法，</div><div class=\"line\"> * 在该invoke方法中，先调用原先的方法，再打印一行字，增强了原对象方法</div><div class=\"line\"> */</div><div class=\"line\">proxy.save(&quot;小明&quot;);</div><div class=\"line\">proxy.delete();</div><div class=\"line\">proxy.update();</div></pre></td></tr></table></figure></p>\n<h3 id=\"cglib代理\"><a href=\"#cglib代理\" class=\"headerlink\" title=\"cglib代理\"></a>cglib代理</h3><p>使用cglib创建代理对象，不要求目标对象必须实现接口，要求目标对象不能是final的类,<strong>使用cglib创建的代理对象是目标对象类的一个子类对象</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">//创建一个目标对象</div><div class=\"line\">final UserDao target = new UserDao();</div><div class=\"line\">//创建一个用于产生代理对象的实例</div><div class=\"line\">Enhancer en = new Enhancer();</div><div class=\"line\">   //指定为谁创建代理对象</div><div class=\"line\">en.setSuperclass(target.getClass());</div><div class=\"line\">en.setCallback(new MethodInterceptor() &#123;</div><div class=\"line\">   //拦截的方法</div><div class=\"line\">   public Object intercept(Object obj, Method method, Object[] args,</div><div class=\"line\">\tMethodProxy proxy) throws Throwable &#123;</div><div class=\"line\">\tSystem.out.println(&quot;在代理对象中拦截到了一个目标对象的方法：&quot; + method.getName());</div><div class=\"line\">\treturn method.invoke(target, args);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t&#125;);</div><div class=\"line\">\t//创建代理对象</div><div class=\"line\">\tUserDao proxy = (UserDao) en.create();</div><div class=\"line\">\tproxy.save(&quot;xiaobai&quot;);</div><div class=\"line\">\tproxy.delete();</div><div class=\"line\">\tproxy.update();</div></pre></td></tr></table></figure></p>\n<p>因Spring AOP使用效果不佳，不在此介绍，我们学习更优秀的<strong>aspectJ框架</strong>实现AOP</p>\n<h1 id=\"aspectJ-比Spring-AOP更优秀的AOP实现框架\"><a href=\"#aspectJ-比Spring-AOP更优秀的AOP实现框架\" class=\"headerlink\" title=\"aspectJ(比Spring AOP更优秀的AOP实现框架)\"></a>aspectJ(比Spring AOP更优秀的AOP实现框架)</h1><h2 id=\"使用XML配置aspectJ\"><a href=\"#使用XML配置aspectJ\" class=\"headerlink\" title=\"使用XML配置aspectJ\"></a>使用XML配置aspectJ</h2><p>1.在spring配置文件中引入aop的约束头信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">\t   xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; </div><div class=\"line\">\t   xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class=\"line\">\t   xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot;</div><div class=\"line\">\t   xsi:schemaLocation=&quot; http://www.springframework.org/schema/beans </div><div class=\"line\">       \t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/context </div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd</div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/aop </div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/aop/spring-aop.xsd</div></pre></td></tr></table></figure></p>\n<p>2.在spring配置文件中开启aspectJ框架的自动代理功能<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 开启自动代理功能 --&gt;</div><div class=\"line\">\t&lt;aop:aspectj-autoproxy/&gt;</div></pre></td></tr></table></figure></p>\n<p>3.编写一个目标类<br>4.编写一个切面类<br>5.在beans.xml中注册目标对象和切面类<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 注册目标对象 --&gt;</div><div class=\"line\">&lt;bean id=&quot;userDao&quot; class=&quot;cn.itcast.aop.aspectJ.xml.UserDao&quot;/&gt;</div><div class=\"line\">&lt;!-- 注册切面类 --&gt;</div><div class=\"line\">&lt;bean id=&quot;myAdvisor&quot; class=&quot;cn.itcast.aop.aspectJ.xml.MyAdvisor&quot;/&gt;</div></pre></td></tr></table></figure></p>\n<p>6.使用框架提供的方式配置AOP切面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 使用xml方式配置aop切面 --&gt;</div><div class=\"line\">\t&lt;aop:config&gt;</div><div class=\"line\">\t\t&lt;!-- 切面 = 通知 +切点 --&gt;</div><div class=\"line\">\t\t&lt;aop:aspect id=&quot;myAspect&quot; ref=&quot;myAdvisor&quot;&gt;</div><div class=\"line\">\t\t\t&lt;!-- 定义切点表达式 --&gt;</div><div class=\"line\">\t\t\t&lt;aop:pointcut expression=&quot;execution(* cn.itcast.aop.aspectJ.xml.*Dao.*(..))&quot;</div><div class=\"line\">\t\t\t\t id=&quot;myPointCut&quot;/&gt;</div><div class=\"line\">\t\t\t&lt;!-- 前置通知 --&gt;</div><div class=\"line\">\t\t\t&lt;aop:before method=&quot;before1&quot; pointcut-ref=&quot;myPointCut&quot;/&gt;</div><div class=\"line\">\t\t\t&lt;!-- 后置通知 --&gt;</div><div class=\"line\">\t\t\t&lt;aop:after-returning method=&quot;afterReturing1&quot; returning=&quot;ret&quot; pointcut-ref=&quot;myPointCut&quot;/&gt;</div><div class=\"line\">\t\t\t&lt;!-- 环绕通知 --&gt;</div><div class=\"line\">\t\t\t&lt;aop:around method=&quot;around1&quot; pointcut-ref=&quot;myPointCut&quot;/&gt;</div><div class=\"line\">\t\t\t&lt;!-- 异常通知 --&gt;</div><div class=\"line\">\t\t\t&lt;aop:after-throwing method=&quot;afterThrowing1&quot; throwing=&quot;ex&quot; pointcut-ref=&quot;myPointCut&quot;/&gt;</div><div class=\"line\">\t\t\t&lt;!-- 最终通知 --&gt;</div><div class=\"line\">\t\t\t&lt;aop:after method=&quot;after1&quot; pointcut-ref=&quot;myPointCut&quot;/&gt;</div><div class=\"line\">\t\t&lt;/aop:aspect&gt;</div><div class=\"line\">\t&lt;/aop:config&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"注解方式配置aspectJ\"><a href=\"#注解方式配置aspectJ\" class=\"headerlink\" title=\"注解方式配置aspectJ\"></a>注解方式配置aspectJ</h2><p>1.在spring配置文件中引入aop的约束头信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">\t   xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; </div><div class=\"line\">\t   xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class=\"line\">\t   xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot;</div><div class=\"line\">\t   xsi:schemaLocation=&quot; http://www.springframework.org/schema/beans </div><div class=\"line\">       \t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/context </div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd\t\t\t\t\t</div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/aop \t\t\t\t\t\t</div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/aop/spring-aop.xsd</div></pre></td></tr></table></figure></p>\n<p>2.在spring配置文件中开启aspectJ框架在自动代理功能<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 开启自动代理功能 --&gt;</div><div class=\"line\">\t&lt;aop:aspectj-autoproxy/&gt;</div></pre></td></tr></table></figure></p>\n<p>3.编写一个目标类<br>4.编写一个切面类，在类上使用@Aspect注解，在类的方法上使用@Before注解定义前置通知<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class MyAdvisor &#123;\t</div><div class=\"line\">    @Pointcut(value=&quot;execution(* cn.hugang.aop.aspectJ.annotation.*Dao.*(..))&quot;)</div><div class=\"line\">\tpublic void myPointCut()&#123;&#125;;</div><div class=\"line\">\t</div><div class=\"line\">\t// 定义一个前置通知方法,通过切点表达式描述要拦截的目标对象的方法</div><div class=\"line\">\t@Before(value = &quot;MyAdvisor.myPointCut()&quot;)//引用上面定义的切点表达式</div><div class=\"line\">\tpublic void before1(JoinPoint jp) &#123;            //连接点对象</div><div class=\"line\">\t\t//System.out.println(&quot;【前置通知】拦截的的方法：&quot; + jp.getSignature().getName());</div><div class=\"line\">\t&#125;</div><div class=\"line\">｝</div></pre></td></tr></table></figure></p>\n<p>5.在spring配置文件中注册目标对象和切面类<br>6.读取spring配置文件，从spring工厂中获取一个代理对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">  ApplicationContext ctx = new ClassPathXmlApplicationContext(&quot;cn/hugang/aop/aspectJ/annotation/beans.xml&quot;);</div><div class=\"line\">UserDao userDao = (UserDao) ctx.getBean(&quot;userDao&quot;);</div><div class=\"line\">userDao.save(&quot;&quot;);</div><div class=\"line\">userDao.delete();</div><div class=\"line\">userDao.update();</div><div class=\"line\">System.out.println(userDao.getClass().getSimpleName())</div></pre></td></tr></table></figure></p>\n<p>7.后置，环绕，异常，最终通知<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">\t//统一抽取一个切点表达式</div><div class=\"line\">\t@Pointcut(value=&quot;execution(* cn.hugang.aop.aspectJ.annotation.*Dao.*(..))&quot;)</div><div class=\"line\">\tpublic void myPointCut()&#123;&#125;;</div><div class=\"line\">\t</div><div class=\"line\">\t//后置通知</div><div class=\"line\">//returning=&quot;ret&quot;   ret:拦截到的方法执行后的返回值</div><div class=\"line\">\t@AfterReturning(value=&quot;MyAdvisor.myPointCut()&quot;,returning=&quot;ret&quot;)</div><div class=\"line\">\tpublic void afterReturing1(JoinPoint jp,Object ret)&#123;</div><div class=\"line\">\t\t//System.out.println(&quot;【后置通知】拦截的的方法：&quot; + jp.getSignature().getName() + &quot;,此方法的执行结果为：&quot; + ret);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t//环绕通知</div><div class=\"line\">\t@Around(value=&quot;MyAdvisor.myPointCut()&quot;)</div><div class=\"line\">\tpublic Object around1(ProceedingJoinPoint pjp) throws Throwable&#123;</div><div class=\"line\">\t\t//System.out.println(&quot;【环绕通知】前&quot;);</div><div class=\"line\">\t\t//必须在环绕通知中手动调用目标对象的方法，否则目标对象的方法将被拦截，不会执行</div><div class=\"line\">\t\tObject value = pjp.proceed();//调用目标对象的方法</div><div class=\"line\">\t\t//System.out.println(&quot;【环绕通知】后&quot;);</div><div class=\"line\">\t\treturn value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t//异常通知</div><div class=\"line\">\t@AfterThrowing(value=&quot;MyAdvisor.myPointCut()&quot;,throwing=&quot;ex&quot;)  //ex:异常的信息</div><div class=\"line\">\tpublic void afterThrowing1(JoinPoint jp,Throwable ex)&#123;</div><div class=\"line\">\t\tSystem.out.println(&quot;【异常通知】执行了，拦截到的目标方法为：&quot; + jp.getSignature().getName() + &quot;,异常信息为：&quot; + ex);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t//最终通知</div><div class=\"line\">\t@After(value=&quot;MyAdvisor.myPointCut()&quot;)</div><div class=\"line\">\tpublic void after1(JoinPoint jp)&#123;</div><div class=\"line\">\t\tSystem.out.println(&quot;【最终通知】拦截到目标方法：&quot; + jp.getSignature().getName());</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"AOP（面向切面编程）\"><a href=\"#AOP（面向切面编程）\" class=\"headerlink\" title=\"AOP（面向切面编程）\"></a>AOP（面向切面编程）</h1><p>引用知乎上的一段话来解释AOP：<br>","more":"</p>\n<blockquote>\n<p>这种在运行时，动态地将代码切入到类的指定方法、指定位置上的编程思想就是面向切面的编程。</p>\n<p>AOP 实现的关键就在于 AOP 框架自动创建的 AOP 代理，AOP代理则可分为静态代理和动态代理两大类，其中静态代理是指使用 AOP 框架提供的命令进行编译，从而在编译阶段就可生成 AOP 代理类，因此也称为编译时增强；而动态代理则在运行时借助于 JDK 动态代理、CGLIB 等在内存中“临时”生成 AOP 动态代理类，因此也被称为运行时增强。<br>Spring AOP是运行时增强，而AspectJ是编译时增强。<br>转载链接：<a href=\"http://www.jianshu.com/p/fe8d1e8bd63e\" target=\"_blank\" rel=\"external\">http://www.jianshu.com/p/fe8d1e8bd63e</a></p>\n</blockquote>\n<h2 id=\"AOP相关术语解释\"><a href=\"#AOP相关术语解释\" class=\"headerlink\" title=\"AOP相关术语解释\"></a>AOP相关术语解释</h2><ul>\n<li>JoinPoint(连接点)：被拦截的所有方法</li>\n<li>PointCut(切入点)：指我们对哪些JoinPoint拦截的定义</li>\n<li>Advice(通知)：指拦截到JoinPoint后所要做的事</li>\n<li>Target(目标对象)：代理的目标对象</li>\n<li>Proxy(代理对象)：一个类被AOP增强后，就产生一个结果代理类</li>\n<li>Aspect(切面)：是切点和通知的结合</li>\n</ul>\n<h2 id=\"静态代理\"><a href=\"#静态代理\" class=\"headerlink\" title=\"静态代理\"></a>静态代理</h2><p>需要增强的类（目标对象），和增强了目标对象的类（代理对象）必须继承同一个接口。<br>　　目标对象——实现上面的接口的一个实现类<br>　　代理对象——实现上面的接口的一个实现类,持有目标对象的引用,在调用目标对象方法前后加入代码。<br>但这样的弊端就是，每增强一个方法，都需要创建一个代理类，代码任务繁重。<br>所以引入了自动代理，jvm自动帮我们生成代理类。</p>\n<h2 id=\"动态代理的两种方式\"><a href=\"#动态代理的两种方式\" class=\"headerlink\" title=\"动态代理的两种方式\"></a>动态代理的两种方式</h2><h3 id=\"JDK代理\"><a href=\"#JDK代理\" class=\"headerlink\" title=\"JDK代理\"></a>JDK代理</h3><p>使用jdk的动态代理技术可以为指定的目标对象创建一个代理对象，<strong>要求目标对象必须至少实现一个接口</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"> 　　　  // 创建一个目标对象</div><div class=\"line\">final IUserDao target = new UserDaoImpl();</div><div class=\"line\">// 为target创建一个代理对象</div><div class=\"line\">IUserDao proxy = (IUserDao) Proxy.newProxyInstance(target.getClass()</div><div class=\"line\">\t\t.getClassLoader(), target.getClass().getInterfaces(),</div><div class=\"line\">\t\tnew InvocationHandler() &#123;</div><div class=\"line\">\t\t\t// 使用此方法在代理对象中拦截目标对象的方法</div><div class=\"line\">\t\t\tpublic Object invoke(Object proxy, Method method,</div><div class=\"line\">\t\t\t\t\tObject[] args) throws Throwable &#123;</div><div class=\"line\">\t\t\t\tObject object = method.invoke(target, args);// 调用目标对象的方法</div><div class=\"line\">\t\t\t\tSystem.out.println(&quot;在代理对象中拦截到了一个目标对象的方法：&quot;</div><div class=\"line\">\t\t\t\t\t\t+ method.getName());// 通知</div><div class=\"line\">\t\t\t\treturn object;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t\t&#125;);</div><div class=\"line\">/*</div><div class=\"line\"> * proxy为代理类，执行下列三个方法，都会执行invoke方法，</div><div class=\"line\"> * 在该invoke方法中，先调用原先的方法，再打印一行字，增强了原对象方法</div><div class=\"line\"> */</div><div class=\"line\">proxy.save(&quot;小明&quot;);</div><div class=\"line\">proxy.delete();</div><div class=\"line\">proxy.update();</div></pre></td></tr></table></figure></p>\n<h3 id=\"cglib代理\"><a href=\"#cglib代理\" class=\"headerlink\" title=\"cglib代理\"></a>cglib代理</h3><p>使用cglib创建代理对象，不要求目标对象必须实现接口，要求目标对象不能是final的类,<strong>使用cglib创建的代理对象是目标对象类的一个子类对象</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">//创建一个目标对象</div><div class=\"line\">final UserDao target = new UserDao();</div><div class=\"line\">//创建一个用于产生代理对象的实例</div><div class=\"line\">Enhancer en = new Enhancer();</div><div class=\"line\">   //指定为谁创建代理对象</div><div class=\"line\">en.setSuperclass(target.getClass());</div><div class=\"line\">en.setCallback(new MethodInterceptor() &#123;</div><div class=\"line\">   //拦截的方法</div><div class=\"line\">   public Object intercept(Object obj, Method method, Object[] args,</div><div class=\"line\">\tMethodProxy proxy) throws Throwable &#123;</div><div class=\"line\">\tSystem.out.println(&quot;在代理对象中拦截到了一个目标对象的方法：&quot; + method.getName());</div><div class=\"line\">\treturn method.invoke(target, args);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t&#125;);</div><div class=\"line\">\t//创建代理对象</div><div class=\"line\">\tUserDao proxy = (UserDao) en.create();</div><div class=\"line\">\tproxy.save(&quot;xiaobai&quot;);</div><div class=\"line\">\tproxy.delete();</div><div class=\"line\">\tproxy.update();</div></pre></td></tr></table></figure></p>\n<p>因Spring AOP使用效果不佳，不在此介绍，我们学习更优秀的<strong>aspectJ框架</strong>实现AOP</p>\n<h1 id=\"aspectJ-比Spring-AOP更优秀的AOP实现框架\"><a href=\"#aspectJ-比Spring-AOP更优秀的AOP实现框架\" class=\"headerlink\" title=\"aspectJ(比Spring AOP更优秀的AOP实现框架)\"></a>aspectJ(比Spring AOP更优秀的AOP实现框架)</h1><h2 id=\"使用XML配置aspectJ\"><a href=\"#使用XML配置aspectJ\" class=\"headerlink\" title=\"使用XML配置aspectJ\"></a>使用XML配置aspectJ</h2><p>1.在spring配置文件中引入aop的约束头信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">\t   xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; </div><div class=\"line\">\t   xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class=\"line\">\t   xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot;</div><div class=\"line\">\t   xsi:schemaLocation=&quot; http://www.springframework.org/schema/beans </div><div class=\"line\">       \t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/context </div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd</div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/aop </div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/aop/spring-aop.xsd</div></pre></td></tr></table></figure></p>\n<p>2.在spring配置文件中开启aspectJ框架的自动代理功能<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 开启自动代理功能 --&gt;</div><div class=\"line\">\t&lt;aop:aspectj-autoproxy/&gt;</div></pre></td></tr></table></figure></p>\n<p>3.编写一个目标类<br>4.编写一个切面类<br>5.在beans.xml中注册目标对象和切面类<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 注册目标对象 --&gt;</div><div class=\"line\">&lt;bean id=&quot;userDao&quot; class=&quot;cn.itcast.aop.aspectJ.xml.UserDao&quot;/&gt;</div><div class=\"line\">&lt;!-- 注册切面类 --&gt;</div><div class=\"line\">&lt;bean id=&quot;myAdvisor&quot; class=&quot;cn.itcast.aop.aspectJ.xml.MyAdvisor&quot;/&gt;</div></pre></td></tr></table></figure></p>\n<p>6.使用框架提供的方式配置AOP切面<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 使用xml方式配置aop切面 --&gt;</div><div class=\"line\">\t&lt;aop:config&gt;</div><div class=\"line\">\t\t&lt;!-- 切面 = 通知 +切点 --&gt;</div><div class=\"line\">\t\t&lt;aop:aspect id=&quot;myAspect&quot; ref=&quot;myAdvisor&quot;&gt;</div><div class=\"line\">\t\t\t&lt;!-- 定义切点表达式 --&gt;</div><div class=\"line\">\t\t\t&lt;aop:pointcut expression=&quot;execution(* cn.itcast.aop.aspectJ.xml.*Dao.*(..))&quot;</div><div class=\"line\">\t\t\t\t id=&quot;myPointCut&quot;/&gt;</div><div class=\"line\">\t\t\t&lt;!-- 前置通知 --&gt;</div><div class=\"line\">\t\t\t&lt;aop:before method=&quot;before1&quot; pointcut-ref=&quot;myPointCut&quot;/&gt;</div><div class=\"line\">\t\t\t&lt;!-- 后置通知 --&gt;</div><div class=\"line\">\t\t\t&lt;aop:after-returning method=&quot;afterReturing1&quot; returning=&quot;ret&quot; pointcut-ref=&quot;myPointCut&quot;/&gt;</div><div class=\"line\">\t\t\t&lt;!-- 环绕通知 --&gt;</div><div class=\"line\">\t\t\t&lt;aop:around method=&quot;around1&quot; pointcut-ref=&quot;myPointCut&quot;/&gt;</div><div class=\"line\">\t\t\t&lt;!-- 异常通知 --&gt;</div><div class=\"line\">\t\t\t&lt;aop:after-throwing method=&quot;afterThrowing1&quot; throwing=&quot;ex&quot; pointcut-ref=&quot;myPointCut&quot;/&gt;</div><div class=\"line\">\t\t\t&lt;!-- 最终通知 --&gt;</div><div class=\"line\">\t\t\t&lt;aop:after method=&quot;after1&quot; pointcut-ref=&quot;myPointCut&quot;/&gt;</div><div class=\"line\">\t\t&lt;/aop:aspect&gt;</div><div class=\"line\">\t&lt;/aop:config&gt;</div></pre></td></tr></table></figure></p>\n<h2 id=\"注解方式配置aspectJ\"><a href=\"#注解方式配置aspectJ\" class=\"headerlink\" title=\"注解方式配置aspectJ\"></a>注解方式配置aspectJ</h2><p>1.在spring配置文件中引入aop的约束头信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;</div><div class=\"line\">\t   xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; </div><div class=\"line\">\t   xmlns:context=&quot;http://www.springframework.org/schema/context&quot;</div><div class=\"line\">\t   xmlns:aop=&quot;http://www.springframework.org/schema/aop&quot;</div><div class=\"line\">\t   xsi:schemaLocation=&quot; http://www.springframework.org/schema/beans </div><div class=\"line\">       \t\t\t\thttp://www.springframework.org/schema/beans/spring-beans.xsd</div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/context </div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/context/spring-context.xsd\t\t\t\t\t</div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/aop \t\t\t\t\t\t</div><div class=\"line\">\t\t\t\thttp://www.springframework.org/schema/aop/spring-aop.xsd</div></pre></td></tr></table></figure></p>\n<p>2.在spring配置文件中开启aspectJ框架在自动代理功能<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!-- 开启自动代理功能 --&gt;</div><div class=\"line\">\t&lt;aop:aspectj-autoproxy/&gt;</div></pre></td></tr></table></figure></p>\n<p>3.编写一个目标类<br>4.编写一个切面类，在类上使用@Aspect注解，在类的方法上使用@Before注解定义前置通知<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">public class MyAdvisor &#123;\t</div><div class=\"line\">    @Pointcut(value=&quot;execution(* cn.hugang.aop.aspectJ.annotation.*Dao.*(..))&quot;)</div><div class=\"line\">\tpublic void myPointCut()&#123;&#125;;</div><div class=\"line\">\t</div><div class=\"line\">\t// 定义一个前置通知方法,通过切点表达式描述要拦截的目标对象的方法</div><div class=\"line\">\t@Before(value = &quot;MyAdvisor.myPointCut()&quot;)//引用上面定义的切点表达式</div><div class=\"line\">\tpublic void before1(JoinPoint jp) &#123;            //连接点对象</div><div class=\"line\">\t\t//System.out.println(&quot;【前置通知】拦截的的方法：&quot; + jp.getSignature().getName());</div><div class=\"line\">\t&#125;</div><div class=\"line\">｝</div></pre></td></tr></table></figure></p>\n<p>5.在spring配置文件中注册目标对象和切面类<br>6.读取spring配置文件，从spring工厂中获取一个代理对象<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">  ApplicationContext ctx = new ClassPathXmlApplicationContext(&quot;cn/hugang/aop/aspectJ/annotation/beans.xml&quot;);</div><div class=\"line\">UserDao userDao = (UserDao) ctx.getBean(&quot;userDao&quot;);</div><div class=\"line\">userDao.save(&quot;&quot;);</div><div class=\"line\">userDao.delete();</div><div class=\"line\">userDao.update();</div><div class=\"line\">System.out.println(userDao.getClass().getSimpleName())</div></pre></td></tr></table></figure></p>\n<p>7.后置，环绕，异常，最终通知<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\">\t//统一抽取一个切点表达式</div><div class=\"line\">\t@Pointcut(value=&quot;execution(* cn.hugang.aop.aspectJ.annotation.*Dao.*(..))&quot;)</div><div class=\"line\">\tpublic void myPointCut()&#123;&#125;;</div><div class=\"line\">\t</div><div class=\"line\">\t//后置通知</div><div class=\"line\">//returning=&quot;ret&quot;   ret:拦截到的方法执行后的返回值</div><div class=\"line\">\t@AfterReturning(value=&quot;MyAdvisor.myPointCut()&quot;,returning=&quot;ret&quot;)</div><div class=\"line\">\tpublic void afterReturing1(JoinPoint jp,Object ret)&#123;</div><div class=\"line\">\t\t//System.out.println(&quot;【后置通知】拦截的的方法：&quot; + jp.getSignature().getName() + &quot;,此方法的执行结果为：&quot; + ret);</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t//环绕通知</div><div class=\"line\">\t@Around(value=&quot;MyAdvisor.myPointCut()&quot;)</div><div class=\"line\">\tpublic Object around1(ProceedingJoinPoint pjp) throws Throwable&#123;</div><div class=\"line\">\t\t//System.out.println(&quot;【环绕通知】前&quot;);</div><div class=\"line\">\t\t//必须在环绕通知中手动调用目标对象的方法，否则目标对象的方法将被拦截，不会执行</div><div class=\"line\">\t\tObject value = pjp.proceed();//调用目标对象的方法</div><div class=\"line\">\t\t//System.out.println(&quot;【环绕通知】后&quot;);</div><div class=\"line\">\t\treturn value;</div><div class=\"line\">\t&#125;</div><div class=\"line\">\t</div><div class=\"line\">\t//异常通知</div><div class=\"line\">\t@AfterThrowing(value=&quot;MyAdvisor.myPointCut()&quot;,throwing=&quot;ex&quot;)  //ex:异常的信息</div><div class=\"line\">\tpublic void afterThrowing1(JoinPoint jp,Throwable ex)&#123;</div><div class=\"line\">\t\tSystem.out.println(&quot;【异常通知】执行了，拦截到的目标方法为：&quot; + jp.getSignature().getName() + &quot;,异常信息为：&quot; + ex);</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">\t//最终通知</div><div class=\"line\">\t@After(value=&quot;MyAdvisor.myPointCut()&quot;)</div><div class=\"line\">\tpublic void after1(JoinPoint jp)&#123;</div><div class=\"line\">\t\tSystem.out.println(&quot;【最终通知】拦截到目标方法：&quot; + jp.getSignature().getName());</div><div class=\"line\">\t&#125;</div></pre></td></tr></table></figure></p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cji5dwz0r0003yodkedhr828l","category_id":"cji5dwz0y0007yodkazle13li","_id":"cji5dwz17000ayodkqn9ii7pa"},{"post_id":"cji5dwz7o000fyodkf04vjfgk","category_id":"cji5dwz7r000hyodkgr6ce4se","_id":"cji5dwz7v000oyodk8ts6ew87"},{"post_id":"cji5dwz7q000gyodkic71h8km","category_id":"cji5dwz7r000hyodkgr6ce4se","_id":"cji5dwz7w000ryodk072x2o6w"},{"post_id":"cji5dwz7s000jyodkv0hgmh38","category_id":"cji5dwz7r000hyodkgr6ce4se","_id":"cji5dwz7x000tyodk2vitbwzq"}],"PostTag":[{"post_id":"cji5dwz7o000fyodkf04vjfgk","tag_id":"cji5dwz7r000iyodk2tj3y7xz","_id":"cji5dwz7u000myodksjx44nfk"},{"post_id":"cji5dwz7q000gyodkic71h8km","tag_id":"cji5dwz7r000iyodk2tj3y7xz","_id":"cji5dwz7w000qyodkw2frv5ty"},{"post_id":"cji5dwz7s000jyodkv0hgmh38","tag_id":"cji5dwz7r000iyodk2tj3y7xz","_id":"cji5dwz7w000syodk2o6558sk"}],"Tag":[{"name":"JavaEE框架","_id":"cji5dwz7r000iyodk2tj3y7xz"}]}}